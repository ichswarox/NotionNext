"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["themes_typography_config_js"],{

/***/ "./themes/typography/config.js":
/*!*************************************!*\
  !*** ./themes/typography/config.js ***!
  \*************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/next/dist/build/polyfills/process.js\");\nconst CONFIG = {\n    // 博客標題 雙語言\n    TYPOGRAPHY_BLOG_NAME: process.env.NEXT_PUBLIC_TYPOGRAPHY_BLOG_NAME || \"活字印刷\",\n    TYPOGRAPHY_BLOG_NAME_EN: process.env.NEXT_PUBLIC_TYPOGRAPHY_BLOG_NAME_EN || process.env.NEXT_PUBLIC_TYPOGRAPHY_BLOG_NAME || \"Typography\",\n    TYPOGRAPHY_POST_AD_ENABLE: process.env.NEXT_PUBLIC_TYPOGRAPHY_POST_AD_ENABLE || false,\n    TYPOGRAPHY_POST_COVER_ENABLE: process.env.NEXT_PUBLIC_TYPOGRAPHY_POST_COVER_ENABLE || false,\n    TYPOGRAPHY_ARTICLE_RECOMMEND_POSTS: process.env.NEXT_PUBLIC_TYPOGRAPHY_ARTICLE_RECOMMEND_POSTS || true,\n    // 菜单配置\n    TYPOGRAPHY_MENU_CATEGORY: true,\n    TYPOGRAPHY_MENU_TAG: true,\n    TYPOGRAPHY_MENU_ARCHIVE: true\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (CONFIG);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi90aGVtZXMvdHlwb2dyYXBoeS9jb25maWcuanMiLCJtYXBwaW5ncyI6Ijs7QUFBQSxNQUFNQSxTQUFTO0lBQ2IsV0FBVztJQUNYQyxzQkFBc0JDLE9BQU9BLENBQUNDLEdBQUcsQ0FBQ0MsZ0NBQWdDLElBQUk7SUFDdEVDLHlCQUF5QkgsT0FBT0EsQ0FBQ0MsR0FBRyxDQUFDRyxtQ0FBbUMsSUFBSUosT0FBT0EsQ0FBQ0MsR0FBRyxDQUFDQyxnQ0FBZ0MsSUFBSTtJQUU1SEcsMkJBQTJCTCxPQUFPQSxDQUFDQyxHQUFHLENBQUNLLHFDQUFxQyxJQUFJO0lBRWhGQyw4QkFBOEJQLE9BQU9BLENBQUNDLEdBQUcsQ0FBQ08sd0NBQXdDLElBQUk7SUFFdEZDLG9DQUFvQ1QsT0FBT0EsQ0FBQ0MsR0FBRyxDQUFDUyw4Q0FBOEMsSUFBSTtJQUVsRyxPQUFPO0lBQ1BDLDBCQUEwQjtJQUMxQkMscUJBQXFCO0lBQ3JCQyx5QkFBeUI7QUFDM0I7QUFDQSwrREFBZWYsTUFBTUEsRUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi90aGVtZXMvdHlwb2dyYXBoeS9jb25maWcuanM/NzhmZSJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBDT05GSUcgPSB7XG4gIC8vIOWNmuWuouaomemhjCDpm5noqp7oqIBcbiAgVFlQT0dSQVBIWV9CTE9HX05BTUU6IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1RZUE9HUkFQSFlfQkxPR19OQU1FIHx8ICfmtLvlrZfljbDliLcnLFxuICBUWVBPR1JBUEhZX0JMT0dfTkFNRV9FTjogcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfVFlQT0dSQVBIWV9CTE9HX05BTUVfRU4gfHwgcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfVFlQT0dSQVBIWV9CTE9HX05BTUUgfHwgJ1R5cG9ncmFwaHknLFxuXG4gIFRZUE9HUkFQSFlfUE9TVF9BRF9FTkFCTEU6IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1RZUE9HUkFQSFlfUE9TVF9BRF9FTkFCTEUgfHwgZmFsc2UsIC8vIOaWh+eroOWIl+ihqOaYr+WQpuaPkuWFpeW5v+WRilxuXG4gIFRZUE9HUkFQSFlfUE9TVF9DT1ZFUl9FTkFCTEU6IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1RZUE9HUkFQSFlfUE9TVF9DT1ZFUl9FTkFCTEUgfHwgZmFsc2UsIC8vIOaYr+WQpuWxleekuuWNmuWuouWwgemdolxuXG4gIFRZUE9HUkFQSFlfQVJUSUNMRV9SRUNPTU1FTkRfUE9TVFM6IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1RZUE9HUkFQSFlfQVJUSUNMRV9SRUNPTU1FTkRfUE9TVFMgfHwgdHJ1ZSwgLy8g5paH56ug6K+m5oOF5bqV6YOo5pi+56S65o6o6I2QXG5cbiAgLy8g6I+c5Y2V6YWN572uXG4gIFRZUE9HUkFQSFlfTUVOVV9DQVRFR09SWTogdHJ1ZSwgLy8g5pi+56S65YiG57G7XG4gIFRZUE9HUkFQSFlfTUVOVV9UQUc6IHRydWUsIC8vIOaYvuekuuagh+etvlxuICBUWVBPR1JBUEhZX01FTlVfQVJDSElWRTogdHJ1ZSwgLy8g5pi+56S65b2S5qGjXG59XG5leHBvcnQgZGVmYXVsdCBDT05GSUdcbiJdLCJuYW1lcyI6WyJDT05GSUciLCJUWVBPR1JBUEhZX0JMT0dfTkFNRSIsInByb2Nlc3MiLCJlbnYiLCJORVhUX1BVQkxJQ19UWVBPR1JBUEhZX0JMT0dfTkFNRSIsIlRZUE9HUkFQSFlfQkxPR19OQU1FX0VOIiwiTkVYVF9QVUJMSUNfVFlQT0dSQVBIWV9CTE9HX05BTUVfRU4iLCJUWVBPR1JBUEhZX1BPU1RfQURfRU5BQkxFIiwiTkVYVF9QVUJMSUNfVFlQT0dSQVBIWV9QT1NUX0FEX0VOQUJMRSIsIlRZUE9HUkFQSFlfUE9TVF9DT1ZFUl9FTkFCTEUiLCJORVhUX1BVQkxJQ19UWVBPR1JBUEhZX1BPU1RfQ09WRVJfRU5BQkxFIiwiVFlQT0dSQVBIWV9BUlRJQ0xFX1JFQ09NTUVORF9QT1NUUyIsIk5FWFRfUFVCTElDX1RZUE9HUkFQSFlfQVJUSUNMRV9SRUNPTU1FTkRfUE9TVFMiLCJUWVBPR1JBUEhZX01FTlVfQ0FURUdPUlkiLCJUWVBPR1JBUEhZX01FTlVfVEFHIiwiVFlQT0dSQVBIWV9NRU5VX0FSQ0hJVkUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./themes/typography/config.js\n"));

/***/ })

}]);