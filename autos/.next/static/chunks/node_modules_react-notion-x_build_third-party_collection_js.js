"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["node_modules_react-notion-x_build_third-party_collection_js"],{

/***/ "./node_modules/react-notion-x/build/third-party/collection.js":
/*!*********************************************************************!*\
  !*** ./node_modules/react-notion-x/build/third-party/collection.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Collection: function() { return /* binding */ Collection; },\n/* harmony export */   Property: function() { return /* binding */ PropertyImplMemo; }\n/* harmony export */ });\n/* harmony import */ var notion_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! notion-utils */ \"./node_modules/notion-utils/build/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react_hotkeys_hook__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-hotkeys-hook */ \"./node_modules/react-hotkeys-hook/dist/react-hotkeys-hook.esm.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react/jsx-runtime */ \"./node_modules/react/jsx-runtime.js\");\n/* harmony import */ var react_image__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-image */ \"./node_modules/react-image/umd/index.js\");\n/* harmony import */ var react_lazy_images__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react-lazy-images */ \"./node_modules/react-notion-x/node_modules/react-lazy-images/dist/react-lazy-images.es.js\");\n/* harmony import */ var react_fast_compare__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react-fast-compare */ \"./node_modules/react-fast-compare/index.js\");\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __commonJS = (cb, mod) => function __require() {\n  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  // If the importer is in node compatibility mode or this is not an ESM\n  // file that has been converted to a CommonJS file using a Babel-\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n  mod\n));\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n\n// ../../node_modules/.pnpm/lodash.throttle@4.1.1/node_modules/lodash.throttle/index.js\nvar require_lodash = __commonJS({\n  \"../../node_modules/.pnpm/lodash.throttle@4.1.1/node_modules/lodash.throttle/index.js\"(exports, module) {\n    \"use strict\";\n    var FUNC_ERROR_TEXT = \"Expected a function\";\n    var NAN = 0 / 0;\n    var symbolTag = \"[object Symbol]\";\n    var reTrim = /^\\s+|\\s+$/g;\n    var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n    var reIsBinary = /^0b[01]+$/i;\n    var reIsOctal = /^0o[0-7]+$/i;\n    var freeParseInt = parseInt;\n    var freeGlobal = typeof global == \"object\" && global && global.Object === Object && global;\n    var freeSelf = typeof self == \"object\" && self && self.Object === Object && self;\n    var root = freeGlobal || freeSelf || Function(\"return this\")();\n    var objectProto = Object.prototype;\n    var objectToString = objectProto.toString;\n    var nativeMax = Math.max;\n    var nativeMin = Math.min;\n    var now = function() {\n      return root.Date.now();\n    };\n    function debounce(func, wait, options) {\n      var lastArgs, lastThis, maxWait, result, timerId, lastCallTime, lastInvokeTime = 0, leading = false, maxing = false, trailing = true;\n      if (typeof func != \"function\") {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = \"maxWait\" in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = \"trailing\" in options ? !!options.trailing : trailing;\n      }\n      function invokeFunc(time) {\n        var args = lastArgs, thisArg = lastThis;\n        lastArgs = lastThis = void 0;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n      function leadingEdge(time) {\n        lastInvokeTime = time;\n        timerId = setTimeout(timerExpired, wait);\n        return leading ? invokeFunc(time) : result;\n      }\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime, result2 = wait - timeSinceLastCall;\n        return maxing ? nativeMin(result2, maxWait - timeSinceLastInvoke) : result2;\n      }\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime;\n        return lastCallTime === void 0 || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;\n      }\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n      function trailingEdge(time) {\n        timerId = void 0;\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = void 0;\n        return result;\n      }\n      function cancel() {\n        if (timerId !== void 0) {\n          clearTimeout(timerId);\n        }\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = void 0;\n      }\n      function flush() {\n        return timerId === void 0 ? result : trailingEdge(now());\n      }\n      function debounced() {\n        var time = now(), isInvoking = shouldInvoke(time);\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n        if (isInvoking) {\n          if (timerId === void 0) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === void 0) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n    function throttle2(func, wait, options) {\n      var leading = true, trailing = true;\n      if (typeof func != \"function\") {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = \"leading\" in options ? !!options.leading : leading;\n        trailing = \"trailing\" in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        \"leading\": leading,\n        \"maxWait\": wait,\n        \"trailing\": trailing\n      });\n    }\n    function isObject(value) {\n      var type = typeof value;\n      return !!value && (type == \"object\" || type == \"function\");\n    }\n    function isObjectLike(value) {\n      return !!value && typeof value == \"object\";\n    }\n    function isSymbol(value) {\n      return typeof value == \"symbol\" || isObjectLike(value) && objectToString.call(value) == symbolTag;\n    }\n    function toNumber(value) {\n      if (typeof value == \"number\") {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = typeof value.valueOf == \"function\" ? value.valueOf() : value;\n        value = isObject(other) ? other + \"\" : other;\n      }\n      if (typeof value != \"string\") {\n        return value === 0 ? value : +value;\n      }\n      value = value.replace(reTrim, \"\");\n      var isBinary = reIsBinary.test(value);\n      return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;\n    }\n    module.exports = throttle2;\n  }\n});\n\n// ../../node_modules/.pnpm/format-number@3.0.0/node_modules/format-number/index.js\nvar require_format_number = __commonJS({\n  \"../../node_modules/.pnpm/format-number@3.0.0/node_modules/format-number/index.js\"(exports, module) {\n    \"use strict\";\n    module.exports = formatter;\n    module.exports.default = formatter;\n    function formatter(options) {\n      options = options || {};\n      options.negativeType = options.negativeType || (options.negative === \"R\" ? \"right\" : \"left\");\n      if (typeof options.negativeLeftSymbol !== \"string\") {\n        switch (options.negativeType) {\n          case \"left\":\n            options.negativeLeftSymbol = \"-\";\n            break;\n          case \"brackets\":\n            options.negativeLeftSymbol = \"(\";\n            break;\n          default:\n            options.negativeLeftSymbol = \"\";\n        }\n      }\n      if (typeof options.negativeRightSymbol !== \"string\") {\n        switch (options.negativeType) {\n          case \"right\":\n            options.negativeRightSymbol = \"-\";\n            break;\n          case \"brackets\":\n            options.negativeRightSymbol = \")\";\n            break;\n          default:\n            options.negativeRightSymbol = \"\";\n        }\n      }\n      if (typeof options.negativeLeftOut !== \"boolean\") {\n        options.negativeLeftOut = options.negativeOut === false ? false : true;\n      }\n      if (typeof options.negativeRightOut !== \"boolean\") {\n        options.negativeRightOut = options.negativeOut === false ? false : true;\n      }\n      options.prefix = options.prefix || \"\";\n      options.suffix = options.suffix || \"\";\n      if (typeof options.integerSeparator !== \"string\") {\n        options.integerSeparator = typeof options.separator === \"string\" ? options.separator : \",\";\n      }\n      options.decimalsSeparator = typeof options.decimalsSeparator === \"string\" ? options.decimalsSeparator : \"\";\n      options.decimal = options.decimal || \".\";\n      options.padLeft = options.padLeft || -1;\n      options.padRight = options.padRight || -1;\n      function format2(number, overrideOptions) {\n        overrideOptions = overrideOptions || {};\n        if (number || number === 0) {\n          number = \"\" + number;\n        } else {\n          return \"\";\n        }\n        var output = [];\n        var negative = number.charAt(0) === \"-\";\n        number = number.replace(/^\\-/g, \"\");\n        if (!options.negativeLeftOut && !overrideOptions.noUnits) {\n          output.push(options.prefix);\n        }\n        if (negative) {\n          output.push(options.negativeLeftSymbol);\n        }\n        if (options.negativeLeftOut && !overrideOptions.noUnits) {\n          output.push(options.prefix);\n        }\n        number = number.split(\".\");\n        if (options.round != null) round(number, options.round);\n        if (options.truncate != null) number[1] = truncate(number[1], options.truncate);\n        if (options.padLeft > 0) number[0] = padLeft(number[0], options.padLeft);\n        if (options.padRight > 0) number[1] = padRight(number[1], options.padRight);\n        if (!overrideOptions.noSeparator && number[1]) number[1] = addDecimalSeparators(number[1], options.decimalsSeparator);\n        if (!overrideOptions.noSeparator && number[0]) number[0] = addIntegerSeparators(number[0], options.integerSeparator);\n        output.push(number[0]);\n        if (number[1]) {\n          output.push(options.decimal);\n          output.push(number[1]);\n        }\n        if (options.negativeRightOut && !overrideOptions.noUnits) {\n          output.push(options.suffix);\n        }\n        if (negative) {\n          output.push(options.negativeRightSymbol);\n        }\n        if (!options.negativeRightOut && !overrideOptions.noUnits) {\n          output.push(options.suffix);\n        }\n        return output.join(\"\");\n      }\n      format2.negative = options.negative;\n      format2.negativeOut = options.negativeOut;\n      format2.negativeType = options.negativeType;\n      format2.negativeLeftOut = options.negativeLeftOut;\n      format2.negativeLeftSymbol = options.negativeLeftSymbol;\n      format2.negativeRightOut = options.negativeRightOut;\n      format2.negativeRightSymbol = options.negativeRightSymbol;\n      format2.prefix = options.prefix;\n      format2.suffix = options.suffix;\n      format2.separate = options.separate;\n      format2.integerSeparator = options.integerSeparator;\n      format2.decimalsSeparator = options.decimalsSeparator;\n      format2.decimal = options.decimal;\n      format2.padLeft = options.padLeft;\n      format2.padRight = options.padRight;\n      format2.truncate = options.truncate;\n      format2.round = options.round;\n      function unformat(number, allowedSeparators) {\n        allowedSeparators = allowedSeparators || [];\n        if (options.allowedSeparators) {\n          options.allowedSeparators.forEach(function(s) {\n            allowedSeparators.push(s);\n          });\n        }\n        allowedSeparators.push(options.integerSeparator);\n        allowedSeparators.push(options.decimalsSeparator);\n        number = number.replace(options.prefix, \"\");\n        number = number.replace(options.suffix, \"\");\n        var newNumber = number;\n        do {\n          number = newNumber;\n          for (var i = 0; i < allowedSeparators.length; i++) {\n            newNumber = newNumber.replace(allowedSeparators[i], \"\");\n          }\n        } while (newNumber != number);\n        return number;\n      }\n      format2.unformat = unformat;\n      function validate(number, allowedSeparators) {\n        number = unformat(number, allowedSeparators);\n        number = number.split(options.decimal);\n        if (number.length > 2) {\n          return false;\n        } else if (options.truncate != null && number[1] && number[1].length > options.truncate) {\n          return false;\n        } else if (options.round != null && number[1] && number[1].length > options.round) {\n          return false;\n        } else {\n          return /^-?\\d+\\.?\\d*$/.test(number);\n        }\n      }\n      return format2;\n    }\n    function addIntegerSeparators(x, separator) {\n      x += \"\";\n      if (!separator) return x;\n      var rgx = /(\\d+)(\\d{3})/;\n      while (rgx.test(x)) {\n        x = x.replace(rgx, \"$1\" + separator + \"$2\");\n      }\n      return x;\n    }\n    function addDecimalSeparators(x, separator) {\n      x += \"\";\n      if (!separator) return x;\n      var rgx = /(\\d{3})(\\d+)/;\n      while (rgx.test(x)) {\n        x = x.replace(rgx, \"$1\" + separator + \"$2\");\n      }\n      return x;\n    }\n    function padLeft(x, padding) {\n      x = x + \"\";\n      var buf = [];\n      while (buf.length + x.length < padding) {\n        buf.push(\"0\");\n      }\n      return buf.join(\"\") + x;\n    }\n    function padRight(x, padding) {\n      if (x) {\n        x += \"\";\n      } else {\n        x = \"\";\n      }\n      var buf = [];\n      while (buf.length + x.length < padding) {\n        buf.push(\"0\");\n      }\n      return x + buf.join(\"\");\n    }\n    function truncate(x, length) {\n      if (x) {\n        x += \"\";\n      }\n      if (x && x.length > length) {\n        return x.substr(0, length);\n      } else {\n        return x;\n      }\n    }\n    function round(number, places) {\n      if (number[1] && places >= 0 && number[1].length > places) {\n        var decim = number[1].slice(0, places);\n        if (+number[1].substr(places, 1) >= 5) {\n          var leadingzeros = \"\";\n          while (decim.charAt(0) === \"0\") {\n            leadingzeros = leadingzeros + \"0\";\n            decim = decim.substr(1);\n          }\n          decim = +decim + 1 + \"\";\n          decim = leadingzeros + decim;\n          if (decim.length > places) {\n            number[0] = +number[0] + +decim.charAt(0) + \"\";\n            decim = decim.substring(1);\n          }\n        }\n        number[1] = decim;\n      }\n      return number;\n    }\n  }\n});\n\n// src/third-party/collection.tsx\n\n\n\n// src/components/page-icon.tsx\n\n\n\n\n// src/context.tsx\n\n\n\n\n// src/components/asset-wrapper.tsx\n\n\n\n// src/components/header.tsx\n\n\n\n\n// src/icons/search-icon.tsx\n\n\n// src/utils.ts\n\n\nvar cs = (...classes) => classes.filter((a) => !!a).join(\" \");\nvar getHashFragmentValue = (url) => {\n  return url.includes(\"#\") ? url.replace(/^.+(#.+)$/, \"$1\") : \"\";\n};\nvar isBrowser = !!globalThis.window;\nvar youtubeDomains = /* @__PURE__ */ new Set([\n  \"youtu.be\",\n  \"youtube.com\",\n  \"www.youtube.com\",\n  \"youtube-nocookie.com\",\n  \"www.youtube-nocookie.com\"\n]);\nvar getYoutubeId = (url) => {\n  var _a;\n  try {\n    const { hostname } = new URL(url);\n    if (!youtubeDomains.has(hostname)) {\n      return null;\n    }\n    const regExp = /^.*(youtu\\.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/i;\n    const match2 = url.match(regExp);\n    if (match2 && ((_a = match2[2]) == null ? void 0 : _a.length) === 11) {\n      return match2[2];\n    }\n  } catch (e) {\n  }\n  return null;\n};\nvar getUrlParams = (url) => {\n  try {\n    const { searchParams } = new URL(url);\n    const result = {};\n    for (const [key, value] of searchParams.entries()) {\n      result[key] = value;\n    }\n    return result;\n  } catch (e) {\n  }\n  return;\n};\n\n// src/icons/search-icon.tsx\n\nfunction SearchIcon(props) {\n  const { className, ...rest } = props;\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"svg\", { className: cs(\"notion-icon\", className), viewBox: \"0 0 17 17\", ...rest, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"path\", { d: \"M6.78027 13.6729C8.24805 13.6729 9.60156 13.1982 10.709 12.4072L14.875 16.5732C15.0684 16.7666 15.3232 16.8633 15.5957 16.8633C16.167 16.8633 16.5713 16.4238 16.5713 15.8613C16.5713 15.5977 16.4834 15.3516 16.29 15.1582L12.1504 11.0098C13.0205 9.86719 13.5391 8.45215 13.5391 6.91406C13.5391 3.19629 10.498 0.155273 6.78027 0.155273C3.0625 0.155273 0.0214844 3.19629 0.0214844 6.91406C0.0214844 10.6318 3.0625 13.6729 6.78027 13.6729ZM6.78027 12.2139C3.87988 12.2139 1.48047 9.81445 1.48047 6.91406C1.48047 4.01367 3.87988 1.61426 6.78027 1.61426C9.68066 1.61426 12.0801 4.01367 12.0801 6.91406C12.0801 9.81445 9.68066 12.2139 6.78027 12.2139Z\" }) });\n}\n\n// src/components/search-dialog.tsx\nvar import_lodash = __toESM(require_lodash(), 1);\n\n\n\n// src/icons/clear-icon.tsx\n\n\nfunction ClearIcon(props) {\n  const { className, ...rest } = props;\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"svg\", { className: cs(\"notion-icon\", className), ...rest, viewBox: \"0 0 30 30\", children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"path\", { d: \"M15,0C6.716,0,0,6.716,0,15s6.716,15,15,15s15-6.716,15-15S23.284,0,15,0z M22,20.6L20.6,22L15,16.4L9.4,22L8,20.6l5.6-5.6 L8,9.4L9.4,8l5.6,5.6L20.6,8L22,9.4L16.4,15L22,20.6z\" }) });\n}\n\n// src/icons/loading-icon.tsx\n\n\nfunction LoadingIcon(props) {\n  const { className, ...rest } = props;\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"svg\", { className: cs(\"notion-icon\", className), ...rest, viewBox: \"0 0 24 24\", children: [\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"defs\", { children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\n      \"linearGradient\",\n      {\n        x1: \"28.1542969%\",\n        y1: \"63.7402344%\",\n        x2: \"74.6289062%\",\n        y2: \"17.7832031%\",\n        id: \"linearGradient-1\",\n        children: [\n          /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"stop\", { stopColor: \"rgba(164, 164, 164, 1)\", offset: \"0%\" }),\n          /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n            \"stop\",\n            {\n              stopColor: \"rgba(164, 164, 164, 0)\",\n              stopOpacity: \"0\",\n              offset: \"100%\"\n            }\n          )\n        ]\n      }\n    ) }),\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"g\", { id: \"Page-1\", stroke: \"none\", strokeWidth: \"1\", fill: \"none\", children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"g\", { transform: \"translate(-236.000000, -286.000000)\", children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"g\", { transform: \"translate(238.000000, 286.000000)\", children: [\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n        \"circle\",\n        {\n          id: \"Oval-2\",\n          stroke: \"url(#linearGradient-1)\",\n          strokeWidth: \"4\",\n          cx: \"10\",\n          cy: \"12\",\n          r: \"10\"\n        }\n      ),\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n        \"path\",\n        {\n          d: \"M10,2 C4.4771525,2 0,6.4771525 0,12\",\n          id: \"Oval-2\",\n          stroke: \"rgba(164, 164, 164, 1)\",\n          strokeWidth: \"4\"\n        }\n      ),\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n        \"rect\",\n        {\n          id: \"Rectangle-1\",\n          fill: \"rgba(164, 164, 164, 1)\",\n          x: \"8\",\n          y: \"0\",\n          width: \"4\",\n          height: \"4\",\n          rx: \"8\"\n        }\n      )\n    ] }) }) })\n  ] });\n}\n\n// src/components/page-title.tsx\n\n\n\n\n// src/components/text.tsx\n\n\n\n\n// src/components/eoi.tsx\n\n\n// src/icons/type-github.tsx\n\nfunction SvgTypeGitHub(props) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"svg\", { viewBox: \"0 0 260 260\", ...props, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"g\", { children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n    \"path\",\n    {\n      d: \"M128.00106,0 C57.3172926,0 0,57.3066942 0,128.00106 C0,184.555281 36.6761997,232.535542 87.534937,249.460899 C93.9320223,250.645779 96.280588,246.684165 96.280588,243.303333 C96.280588,240.251045 96.1618878,230.167899 96.106777,219.472176 C60.4967585,227.215235 52.9826207,204.369712 52.9826207,204.369712 C47.1599584,189.574598 38.770408,185.640538 38.770408,185.640538 C27.1568785,177.696113 39.6458206,177.859325 39.6458206,177.859325 C52.4993419,178.762293 59.267365,191.04987 59.267365,191.04987 C70.6837675,210.618423 89.2115753,204.961093 96.5158685,201.690482 C97.6647155,193.417512 100.981959,187.77078 104.642583,184.574357 C76.211799,181.33766 46.324819,170.362144 46.324819,121.315702 C46.324819,107.340889 51.3250588,95.9223682 59.5132437,86.9583937 C58.1842268,83.7344152 53.8029229,70.715562 60.7532354,53.0843636 C60.7532354,53.0843636 71.5019501,49.6441813 95.9626412,66.2049595 C106.172967,63.368876 117.123047,61.9465949 128.00106,61.8978432 C138.879073,61.9465949 149.837632,63.368876 160.067033,66.2049595 C184.49805,49.6441813 195.231926,53.0843636 195.231926,53.0843636 C202.199197,70.715562 197.815773,83.7344152 196.486756,86.9583937 C204.694018,95.9223682 209.660343,107.340889 209.660343,121.315702 C209.660343,170.478725 179.716133,181.303747 151.213281,184.472614 C155.80443,188.444828 159.895342,196.234518 159.895342,208.176593 C159.895342,225.303317 159.746968,239.087361 159.746968,243.303333 C159.746968,246.709601 162.05102,250.70089 168.53925,249.443941 C219.370432,232.499507 256,184.536204 256,128.00106 C256,57.3066942 198.691187,0 128.00106,0 Z M47.9405593,182.340212 C47.6586465,182.976105 46.6581745,183.166873 45.7467277,182.730227 C44.8183235,182.312656 44.2968914,181.445722 44.5978808,180.80771 C44.8734344,180.152739 45.876026,179.97045 46.8023103,180.409216 C47.7328342,180.826786 48.2627451,181.702199 47.9405593,182.340212 Z M54.2367892,187.958254 C53.6263318,188.524199 52.4329723,188.261363 51.6232682,187.366874 C50.7860088,186.474504 50.6291553,185.281144 51.2480912,184.70672 C51.8776254,184.140775 53.0349512,184.405731 53.8743302,185.298101 C54.7115892,186.201069 54.8748019,187.38595 54.2367892,187.958254 Z M58.5562413,195.146347 C57.7719732,195.691096 56.4895886,195.180261 55.6968417,194.042013 C54.9125733,192.903764 54.9125733,191.538713 55.713799,190.991845 C56.5086651,190.444977 57.7719732,190.936735 58.5753181,192.066505 C59.3574669,193.22383 59.3574669,194.58888 58.5562413,195.146347 Z M65.8613592,203.471174 C65.1597571,204.244846 63.6654083,204.03712 62.5716717,202.981538 C61.4524999,201.94927 61.1409122,200.484596 61.8446341,199.710926 C62.5547146,198.935137 64.0575422,199.15346 65.1597571,200.200564 C66.2704506,201.230712 66.6095936,202.705984 65.8613592,203.471174 Z M75.3025151,206.281542 C74.9930474,207.284134 73.553809,207.739857 72.1039724,207.313809 C70.6562556,206.875043 69.7087748,205.700761 70.0012857,204.687571 C70.302275,203.678621 71.7478721,203.20382 73.2083069,203.659543 C74.6539041,204.09619 75.6035048,205.261994 75.3025151,206.281542 Z M86.046947,207.473627 C86.0829806,208.529209 84.8535871,209.404622 83.3316829,209.4237 C81.8013,209.457614 80.563428,208.603398 80.5464708,207.564772 C80.5464708,206.498591 81.7483088,205.631657 83.2786917,205.606221 C84.8005962,205.576546 86.046947,206.424403 86.046947,207.473627 Z M96.6021471,207.069023 C96.7844366,208.099171 95.7267341,209.156872 94.215428,209.438785 C92.7295577,209.710099 91.3539086,209.074206 91.1652603,208.052538 C90.9808515,206.996955 92.0576306,205.939253 93.5413813,205.66582 C95.054807,205.402984 96.4092596,206.021919 96.6021471,207.069023 Z\",\n      fill: \"#161614\"\n    }\n  ) }) });\n}\nvar type_github_default = SvgTypeGitHub;\n\n// src/components/mention-preview-card.tsx\n\nfunction capitalizeFirstLetter(str) {\n  if (!str) return \"\";\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\nfunction MentionPreviewCard({\n  owner,\n  lastUpdated,\n  externalImage,\n  title,\n  domain\n}) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\", { className: \"notion-external-subtitle\", children: [\n    externalImage && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\", { className: \"notion-preview-card-domain-warp\", children: [\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"notion-preview-card-logo\", children: externalImage }),\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"notion-preview-card-domain\", children: capitalizeFirstLetter(domain.split(\".\")[0]) })\n    ] }),\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"notion-preview-card-title\", children: title }),\n    owner && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\", { className: \"notion-external-subtitle-item\", children: [\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"notion-external-subtitle-item-name\", children: \"Owner\" }),\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"span\", { className: \"notion-external-subtitle-item-desc\", children: owner })\n    ] }),\n    lastUpdated && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\", { className: \"notion-external-subtitle-item\", children: [\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"notion-external-subtitle-item-name\", children: \"Updated\" }),\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"span\", { className: \"notion-external-subtitle-item-desc\", children: lastUpdated })\n    ] }),\n    domain === \"github.com\" && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\", { className: \"notion-preview-card-github-shields\", children: [\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n        \"img\",\n        {\n          src: `https://img.shields.io/github/stars/${owner}/${title}?logo=github`,\n          alt: \"\"\n        }\n      ),\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n        \"img\",\n        {\n          src: `https://img.shields.io/github/last-commit/${owner}/${title}`,\n          alt: \"\"\n        }\n      )\n    ] })\n  ] });\n}\n\n// src/components/eoi.tsx\n\nfunction EOI({\n  block,\n  inline,\n  className\n}) {\n  var _a, _b, _c;\n  const { components } = useNotionContext();\n  const { original_url, attributes, domain } = (block == null ? void 0 : block.format) || {};\n  if (!original_url || !attributes) {\n    return null;\n  }\n  const title = (_a = attributes.find((attr) => attr.id === \"title\")) == null ? void 0 : _a.values[0];\n  let owner = (_b = attributes.find((attr) => attr.id === \"owner\")) == null ? void 0 : _b.values[0];\n  const lastUpdatedAt = (_c = attributes.find((attr) => attr.id === \"updated_at\")) == null ? void 0 : _c.values[0];\n  const lastUpdated = lastUpdatedAt ? (0,notion_utils__WEBPACK_IMPORTED_MODULE_3__.formatNotionDateTime)(lastUpdatedAt) : null;\n  let externalImage;\n  switch (domain) {\n    case \"github.com\":\n      externalImage = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(type_github_default, {});\n      if (owner) {\n        const parts = owner.split(\"/\");\n        owner = parts.at(-1);\n      }\n      break;\n    default:\n      if (true) {\n        console.log(\n          `Unsupported external_object_instance domain \"${domain}\"`,\n          JSON.stringify(block, null, 2)\n        );\n      }\n      return null;\n  }\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\n    components.Link,\n    {\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      href: original_url,\n      className: cs(\n        \"notion-external\",\n        inline ? \"notion-external-mention\" : \"notion-external-block notion-row\",\n        className\n      ),\n      children: [\n        externalImage && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"notion-external-image\", children: externalImage }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\", { className: \"notion-external-description\", children: [\n          /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"notion-external-title\", children: title }),\n          !inline && owner ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\", { className: \"notion-external-block-desc\", children: [\n            owner,\n            lastUpdated && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"span\", { children: \" \\u2022 \" }),\n            lastUpdated && `Updated ${lastUpdated}`\n          ] }) : null,\n          inline && (owner || lastUpdated) && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n            MentionPreviewCard,\n            {\n              title,\n              owner,\n              lastUpdated,\n              domain,\n              externalImage\n            }\n          )\n        ] })\n      ]\n    }\n  );\n}\n\n// src/components/graceful-image.tsx\n\n\n\nfunction GracefulImage(props) {\n  if (isBrowser) {\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(react_image__WEBPACK_IMPORTED_MODULE_4__.Img, { ...props });\n  } else {\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"img\", { ...props });\n  }\n}\n\n// src/components/link-mention.tsx\n\n\nfunction LinkMention({ metadata }) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"span\", { className: \"notion-link-mention\", children: [\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(LinkMentionInline, { metadata }),\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(LinkMentionPreview, { metadata })\n  ] });\n}\nfunction LinkMentionInline({ metadata }) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\n    \"a\",\n    {\n      href: metadata.href,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      className: \"notion-link-mention-link\",\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n          \"img\",\n          {\n            className: \"notion-link-mention-icon\",\n            src: metadata.icon_url,\n            alt: metadata.link_provider\n          }\n        ),\n        metadata.link_provider && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"span\", { className: \"notion-link-mention-provider\", children: metadata.link_provider }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"span\", { className: \"notion-link-mention-title\", children: metadata.title })\n      ]\n    }\n  );\n}\nfunction LinkMentionPreview({ metadata }) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"notion-link-mention-preview\", children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"article\", { className: \"notion-link-mention-card\", children: [\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n      \"img\",\n      {\n        className: \"notion-link-mention-preview-thumbnail\",\n        src: metadata.thumbnail_url,\n        alt: metadata.title,\n        referrerPolicy: \"same-origin\"\n      }\n    ),\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\", { className: \"notion-link-mention-preview-content\", children: [\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"p\", { className: \"notion-link-mention-preview-title\", children: metadata.title }),\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"p\", { className: \"notion-link-mention-preview-description\", children: metadata.description }),\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\", { className: \"notion-link-mention-preview-footer\", children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n          \"img\",\n          {\n            className: \"notion-link-mention-preview-icon\",\n            src: metadata.icon_url,\n            alt: metadata.link_provider,\n            referrerPolicy: \"same-origin\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"span\", { className: \"notion-link-mention-preview-provider\", children: metadata.link_provider })\n      ] })\n    ] })\n  ] }) });\n}\n\n// src/components/text.tsx\n\nfunction Text({\n  value,\n  block,\n  linkProps,\n  linkProtocol\n}) {\n  const { components, recordMap, mapPageUrl, mapImageUrl, rootDomain } = useNotionContext();\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children: value == null ? void 0 : value.map(([text, decorations], index) => {\n    if (!decorations) {\n      if (text === \",\") {\n        return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"span\", { style: { padding: \"0.5em\" } }, index);\n      } else {\n        return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children: text }, index);\n      }\n    }\n    const formatted = decorations.reduce(\n      (element, decorator) => {\n        var _a, _b, _c, _d, _e;\n        switch (decorator[0]) {\n          case \"p\": {\n            const blockId = decorator[1];\n            const linkedBlock = (_a = recordMap.block[blockId]) == null ? void 0 : _a.value;\n            if (!linkedBlock) {\n              console.log('\"p\" missing block', blockId);\n              return null;\n            }\n            return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n              components.PageLink,\n              {\n                className: \"notion-link\",\n                href: mapPageUrl(blockId),\n                children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(PageTitle, { block: linkedBlock })\n              }\n            );\n          }\n          case \"\\u2023\": {\n            const linkType = decorator[1][0];\n            const id = decorator[1][1];\n            switch (linkType) {\n              case \"u\": {\n                const user = (_b = recordMap.notion_user[id]) == null ? void 0 : _b.value;\n                if (!user) {\n                  console.log('\"\\u2023\" missing user', id);\n                  return null;\n                }\n                const src = mapImageUrl(user.profile_photo, block);\n                if (!src) return null;\n                const name = [user.given_name, user.family_name].filter(Boolean).join(\" \");\n                return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n                  GracefulImage,\n                  {\n                    className: \"notion-user\",\n                    src,\n                    alt: name\n                  }\n                );\n              }\n              default: {\n                const linkedBlock = (_c = recordMap.block[id]) == null ? void 0 : _c.value;\n                if (!linkedBlock) {\n                  console.log('\"\\u2023\" missing block', linkType, id);\n                  return null;\n                }\n                return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n                  components.PageLink,\n                  {\n                    className: \"notion-link\",\n                    href: mapPageUrl(id),\n                    ...linkProps,\n                    target: \"_blank\",\n                    rel: \"noopener noreferrer\",\n                    children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(PageTitle, { block: linkedBlock })\n                  }\n                );\n              }\n            }\n          }\n          case \"h\":\n            return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"span\", { className: `notion-${decorator[1]}`, children: element });\n          case \"c\":\n            return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"code\", { className: \"notion-inline-code\", children: element });\n          case \"b\":\n            return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"b\", { children: element });\n          case \"i\":\n            return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"em\", { children: element });\n          case \"s\":\n            return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"s\", { children: element });\n          case \"_\":\n            return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"span\", { className: \"notion-inline-underscore\", children: element });\n          case \"e\":\n            return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(components.Equation, { math: decorator[1], inline: true });\n          case \"m\":\n            return element;\n          //still need to return the base element\n          case \"a\": {\n            const v = decorator[1];\n            const pathname = v.slice(1);\n            const id = (0,notion_utils__WEBPACK_IMPORTED_MODULE_3__.parsePageId)(pathname, { uuid: true });\n            if (rootDomain && v.includes(rootDomain) || id && v[0] === \"/\") {\n              const href = rootDomain && v.includes(rootDomain) ? v : `${mapPageUrl(id)}${getHashFragmentValue(v)}`;\n              return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n                components.PageLink,\n                {\n                  className: \"notion-link\",\n                  href,\n                  ...linkProps,\n                  children: element\n                }\n              );\n            } else {\n              return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n                components.Link,\n                {\n                  className: \"notion-link\",\n                  href: linkProtocol ? `${linkProtocol}:${decorator[1]}` : decorator[1],\n                  ...linkProps,\n                  children: element\n                }\n              );\n            }\n          }\n          case \"d\": {\n            const v = decorator[1];\n            const type = v == null ? void 0 : v.type;\n            if (type === \"date\") {\n              const startDate = v.start_date;\n              return (0,notion_utils__WEBPACK_IMPORTED_MODULE_3__.formatDate)(startDate);\n            } else if (type === \"datetime\") {\n              const startDate = v.start_date;\n              const startTime = v.start_time;\n              return `${(0,notion_utils__WEBPACK_IMPORTED_MODULE_3__.formatDate)(startDate)} ${startTime}`;\n            } else if (type === \"daterange\") {\n              const startDate = v.start_date;\n              const endDate = v.end_date;\n              return `${(0,notion_utils__WEBPACK_IMPORTED_MODULE_3__.formatDate)(startDate)} \\u2192 ${(0,notion_utils__WEBPACK_IMPORTED_MODULE_3__.formatDate)(endDate)}`;\n            } else {\n              return element;\n            }\n          }\n          case \"u\": {\n            const userId = decorator[1];\n            const user = (_d = recordMap.notion_user[userId]) == null ? void 0 : _d.value;\n            if (!user) {\n              console.log(\"missing user\", userId);\n              return null;\n            }\n            const src = mapImageUrl(user.profile_photo, block);\n            if (!src) return null;\n            const name = [user.given_name, user.family_name].filter(Boolean).join(\" \");\n            return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(GracefulImage, { className: \"notion-user\", src, alt: name });\n          }\n          case \"lm\": {\n            const metadata = decorator[1];\n            return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(LinkMention, { metadata });\n          }\n          case \"eoi\": {\n            const blockId = decorator[1];\n            const externalObjectInstance = (_e = recordMap.block[blockId]) == null ? void 0 : _e.value;\n            return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(EOI, { block: externalObjectInstance, inline: true });\n          }\n          case \"si\":\n            return null;\n          default:\n            if (true) {\n              console.log(\"unsupported text format\", decorator);\n            }\n            return element;\n        }\n      },\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.Fragment, { children: text })\n    );\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children: formatted }, index);\n  }) });\n}\n\n// src/components/page-title.tsx\n\nfunction PageTitleImpl({\n  block,\n  className,\n  defaultIcon,\n  ...rest\n}) {\n  var _a, _b;\n  const { recordMap } = useNotionContext();\n  if (!block) return null;\n  if (block.type === \"collection_view_page\" || block.type === \"collection_view\") {\n    const title = (0,notion_utils__WEBPACK_IMPORTED_MODULE_3__.getBlockTitle)(block, recordMap);\n    if (!title) {\n      return null;\n    }\n    const titleDecoration = [[title]];\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"span\", { className: cs(\"notion-page-title\", className), ...rest, children: [\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n        PageIcon,\n        {\n          block,\n          defaultIcon,\n          className: \"notion-page-title-icon\"\n        }\n      ),\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"span\", { className: \"notion-page-title-text\", children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Text, { value: titleDecoration, block }) })\n    ] });\n  }\n  if (!((_a = block.properties) == null ? void 0 : _a.title)) {\n    return null;\n  }\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"span\", { className: cs(\"notion-page-title\", className), ...rest, children: [\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n      PageIcon,\n      {\n        block,\n        defaultIcon,\n        className: \"notion-page-title-icon\"\n      }\n    ),\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"span\", { className: \"notion-page-title-text\", children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Text, { value: (_b = block.properties) == null ? void 0 : _b.title, block }) })\n  ] });\n}\nvar PageTitle = react__WEBPACK_IMPORTED_MODULE_0__.memo(PageTitleImpl);\n\n// src/components/search-dialog.tsx\n\nvar SearchDialog = class extends react__WEBPACK_IMPORTED_MODULE_0__.Component {\n  constructor(props) {\n    super(props);\n    __publicField(this, \"state\", {\n      isLoading: false,\n      query: \"\",\n      searchResult: null,\n      searchError: null\n    });\n    __publicField(this, \"_inputRef\");\n    __publicField(this, \"_search\");\n    __publicField(this, \"_onAfterOpen\", () => {\n      if (this._inputRef.current) {\n        this._inputRef.current.focus();\n      }\n    });\n    __publicField(this, \"_onChangeQuery\", (e) => {\n      const query = e.target.value;\n      this.setState({ query });\n      if (!query.trim()) {\n        this.setState({ isLoading: false, searchResult: null, searchError: null });\n        return;\n      } else {\n        this._search();\n      }\n    });\n    __publicField(this, \"_onClearQuery\", () => {\n      this._onChangeQuery({ target: { value: \"\" } });\n    });\n    __publicField(this, \"_warmupSearch\", async () => {\n      const { searchNotion, rootBlockId } = this.props;\n      await searchNotion({\n        query: \"\",\n        ancestorId: rootBlockId\n      });\n    });\n    __publicField(this, \"_searchImpl\", async () => {\n      const { searchNotion, rootBlockId } = this.props;\n      const { query } = this.state;\n      if (!query.trim()) {\n        this.setState({ isLoading: false, searchResult: null, searchError: null });\n        return;\n      }\n      this.setState({ isLoading: true });\n      const result = await searchNotion({\n        query,\n        ancestorId: rootBlockId\n      });\n      console.log(\"search\", query, result);\n      let searchResult = null;\n      let searchError = null;\n      if (result.error || result.errorId) {\n        searchError = result;\n      } else {\n        searchResult = { ...result };\n        const results = searchResult.results.map((result2) => {\n          var _a, _b;\n          const block = (_a = searchResult.recordMap.block[result2.id]) == null ? void 0 : _a.value;\n          if (!block) return;\n          const title = (0,notion_utils__WEBPACK_IMPORTED_MODULE_3__.getBlockTitle)(block, searchResult.recordMap);\n          if (!title) {\n            return;\n          }\n          result2.title = title;\n          result2.block = block;\n          result2.recordMap = searchResult.recordMap;\n          result2.page = (0,notion_utils__WEBPACK_IMPORTED_MODULE_3__.getBlockParentPage)(block, searchResult.recordMap, {\n            inclusive: true\n          }) || block;\n          if (!result2.page.id) {\n            return;\n          }\n          if ((_b = result2.highlight) == null ? void 0 : _b.text) {\n            result2.highlight.html = result2.highlight.text.replaceAll(/<gzknfouu>/gi, \"<b>\").replaceAll(/<\\/gzknfouu>/gi, \"</b>\");\n          }\n          return result2;\n        }).filter(Boolean);\n        const searchResultsMap = Object.fromEntries(\n          results.map((result2) => [result2.page.id, result2])\n        );\n        searchResult.results = Object.values(searchResultsMap);\n      }\n      if (this.state.query === query) {\n        this.setState({ isLoading: false, searchResult, searchError });\n      }\n    });\n    this._inputRef = react__WEBPACK_IMPORTED_MODULE_0__.createRef();\n  }\n  componentDidMount() {\n    this._search = (0, import_lodash.default)(this._searchImpl.bind(this), 1e3);\n    void this._warmupSearch();\n  }\n  render() {\n    const { isOpen, onClose } = this.props;\n    const { isLoading, query, searchResult, searchError } = this.state;\n    const hasQuery = !!query.trim();\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(NotionContextConsumer, { children: (ctx2) => {\n      const { components, defaultPageIcon, mapPageUrl } = ctx2;\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n        components.Modal,\n        {\n          isOpen,\n          contentLabel: \"Search\",\n          className: \"notion-search\",\n          overlayClassName: \"notion-search-overlay\",\n          onRequestClose: onClose,\n          onAfterOpen: this._onAfterOpen,\n          children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\", { className: \"quickFindMenu\", children: [\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\", { className: \"searchBar\", children: [\n              /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"inlineIcon\", children: isLoading ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(LoadingIcon, { className: \"loadingIcon\" }) : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(SearchIcon, {}) }),\n              /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n                \"input\",\n                {\n                  className: \"searchInput\",\n                  placeholder: \"Search\",\n                  value: query,\n                  ref: this._inputRef,\n                  onChange: this._onChangeQuery\n                }\n              ),\n              query && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n                \"div\",\n                {\n                  role: \"button\",\n                  className: \"clearButton\",\n                  onClick: this._onClearQuery,\n                  children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(ClearIcon, { className: \"clearIcon\" })\n                }\n              )\n            ] }),\n            hasQuery && searchResult && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.Fragment, { children: searchResult.results.length ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\n              NotionContextProvider,\n              {\n                ...ctx2,\n                recordMap: searchResult.recordMap,\n                children: [\n                  /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"resultsPane\", children: searchResult.results.map((result) => {\n                    var _a;\n                    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\n                      components.PageLink,\n                      {\n                        className: cs(\"result\", \"notion-page-link\"),\n                        href: mapPageUrl(\n                          result.page.id,\n                          // TODO\n                          searchResult.recordMap\n                        ),\n                        children: [\n                          /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n                            PageTitle,\n                            {\n                              block: result.page,\n                              defaultIcon: defaultPageIcon\n                            }\n                          ),\n                          ((_a = result.highlight) == null ? void 0 : _a.html) && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n                            \"div\",\n                            {\n                              className: \"notion-search-result-highlight\",\n                              dangerouslySetInnerHTML: {\n                                __html: result.highlight.html\n                              }\n                            }\n                          )\n                        ]\n                      },\n                      result.id\n                    );\n                  }) }),\n                  /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"footer\", { className: \"resultsFooter\", children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\", { children: [\n                    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"span\", { className: \"resultsCount\", children: searchResult.total }),\n                    searchResult.total === 1 ? \" result\" : \" results\"\n                  ] }) })\n                ]\n              }\n            ) : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\", { className: \"noResultsPane\", children: [\n              /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"noResults\", children: \"No results\" }),\n              /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"noResultsDetail\", children: \"Try different search terms\" })\n            ] }) }),\n            hasQuery && !searchResult && searchError && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"noResultsPane\", children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"noResults\", children: \"Search error\" }) })\n          ] })\n        }\n      );\n    } });\n  }\n};\n\n// src/components/header.tsx\n\nfunction Header({\n  block\n}) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"header\", { className: \"notion-header\", children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\", { className: \"notion-nav-header\", children: [\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Breadcrumbs, { block }),\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Search, { block })\n  ] }) });\n}\nfunction Breadcrumbs({\n  block,\n  rootOnly = false\n}) {\n  const { recordMap, mapPageUrl, components } = useNotionContext();\n  const breadcrumbs = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {\n    const tempBreadcrumbs = (0,notion_utils__WEBPACK_IMPORTED_MODULE_3__.getPageBreadcrumbs)(recordMap, block.id);\n    if (rootOnly) {\n      return [tempBreadcrumbs == null ? void 0 : tempBreadcrumbs[0]].filter(Boolean);\n    }\n    return tempBreadcrumbs;\n  }, [recordMap, block.id, rootOnly]);\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"breadcrumbs\", children: breadcrumbs == null ? void 0 : breadcrumbs.map((breadcrumb, index) => {\n    if (!breadcrumb) {\n      return null;\n    }\n    const pageLinkProps = {};\n    const componentMap = {\n      pageLink: components.PageLink\n    };\n    if (breadcrumb.active) {\n      componentMap.pageLink = (props) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { ...props });\n    } else {\n      pageLinkProps.href = mapPageUrl(breadcrumb.pageId);\n    }\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children: [\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\n        componentMap.pageLink,\n        {\n          className: cs(\"breadcrumb\", breadcrumb.active && \"active\"),\n          ...pageLinkProps,\n          children: [\n            breadcrumb.icon && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(PageIcon, { className: \"icon\", block: breadcrumb.block }),\n            breadcrumb.title && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"span\", { className: \"title\", children: breadcrumb.title })\n          ]\n        }\n      ),\n      index < breadcrumbs.length - 1 && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"span\", { className: \"spacer\", children: \"/\" })\n    ] }, breadcrumb.pageId);\n  }) }, \"breadcrumbs\");\n}\nfunction Search({\n  block,\n  search,\n  title = \"Search\"\n}) {\n  const { searchNotion, rootPageId, isShowingSearch, onHideSearch } = useNotionContext();\n  const onSearchNotion = search || searchNotion;\n  const [isSearchOpen, setIsSearchOpen] = react__WEBPACK_IMPORTED_MODULE_0__.useState(isShowingSearch);\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    setIsSearchOpen(isShowingSearch);\n  }, [isShowingSearch]);\n  const onOpenSearch = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(() => {\n    setIsSearchOpen(true);\n  }, []);\n  const onCloseSearch = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(() => {\n    setIsSearchOpen(false);\n    if (onHideSearch) {\n      onHideSearch();\n    }\n  }, [onHideSearch]);\n  (0,react_hotkeys_hook__WEBPACK_IMPORTED_MODULE_1__.useHotkeys)(\"cmd+p\", (event) => {\n    onOpenSearch();\n    event.preventDefault();\n    event.stopPropagation();\n  });\n  (0,react_hotkeys_hook__WEBPACK_IMPORTED_MODULE_1__.useHotkeys)(\"cmd+k\", (event) => {\n    onOpenSearch();\n    event.preventDefault();\n    event.stopPropagation();\n  });\n  const hasSearch = !!onSearchNotion;\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.Fragment, { children: [\n    hasSearch && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\n      \"div\",\n      {\n        role: \"button\",\n        className: cs(\"breadcrumb\", \"button\", \"notion-search-button\"),\n        onClick: onOpenSearch,\n        children: [\n          /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(SearchIcon, { className: \"searchIcon\" }),\n          title && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"span\", { className: \"title\", children: title })\n        ]\n      }\n    ),\n    isSearchOpen && hasSearch && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n      SearchDialog,\n      {\n        isOpen: isSearchOpen,\n        rootBlockId: rootPageId || (block == null ? void 0 : block.id),\n        onClose: onCloseSearch,\n        searchNotion: onSearchNotion\n      }\n    )\n  ] });\n}\n\n// src/components/lazy-image.tsx\n\n\n\n\nfunction LazyImage({\n  src,\n  alt,\n  className,\n  style,\n  zoomable = false,\n  priority = false,\n  height,\n  ...rest\n}) {\n  var _a, _b, _c;\n  const { recordMap, zoom, previewImages, forceCustomImages, components } = useNotionContext();\n  const zoomRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(zoom ? zoom.clone() : null);\n  const previewImage = previewImages ? (_c = (_a = recordMap == null ? void 0 : recordMap.preview_images) == null ? void 0 : _a[src]) != null ? _c : (_b = recordMap == null ? void 0 : recordMap.preview_images) == null ? void 0 : _b[(0,notion_utils__WEBPACK_IMPORTED_MODULE_3__.normalizeUrl)(src)] : null;\n  const onLoad = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(\n    (e) => {\n      if (zoomable && (e.target.src || e.target.srcset)) {\n        if (zoomRef.current) {\n          ;\n          zoomRef.current.attach(e.target);\n        }\n      }\n    },\n    [zoomRef, zoomable]\n  );\n  const attachZoom = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(\n    (image) => {\n      if (zoomRef.current && image) {\n        ;\n        zoomRef.current.attach(image);\n      }\n    },\n    [zoomRef]\n  );\n  const attachZoomRef = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    () => zoomable ? attachZoom : void 0,\n    [zoomable, attachZoom]\n  );\n  if (previewImage) {\n    const aspectRatio = previewImage.originalHeight / previewImage.originalWidth;\n    if (components.Image) {\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n        components.Image,\n        {\n          src,\n          alt,\n          style,\n          className,\n          width: previewImage.originalWidth,\n          height: previewImage.originalHeight,\n          blurDataURL: previewImage.dataURIBase64,\n          placeholder: \"blur\",\n          priority,\n          onLoad\n        }\n      );\n    }\n    return (\n      // @ts-expect-error LazyImage types are out-of-date.\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(react_lazy_images__WEBPACK_IMPORTED_MODULE_5__.LazyImageFull, { src, ...rest, experimentalDecode: true, children: ({ imageState, ref }) => {\n        const isLoaded = imageState === react_lazy_images__WEBPACK_IMPORTED_MODULE_5__.ImageState.LoadSuccess;\n        const wrapperStyle = {\n          width: \"100%\"\n        };\n        const imgStyle = {};\n        if (height) {\n          wrapperStyle.height = height;\n        } else {\n          imgStyle.position = \"absolute\";\n          wrapperStyle.paddingBottom = `${aspectRatio * 100}%`;\n        }\n        return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\n          \"div\",\n          {\n            className: cs(\n              \"lazy-image-wrapper\",\n              isLoaded && \"lazy-image-loaded\",\n              className\n            ),\n            style: wrapperStyle,\n            children: [\n              /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n                \"img\",\n                {\n                  className: \"lazy-image-preview\",\n                  src: previewImage.dataURIBase64,\n                  alt,\n                  ref,\n                  style,\n                  decoding: \"async\"\n                }\n              ),\n              /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n                \"img\",\n                {\n                  className: \"lazy-image-real\",\n                  src,\n                  alt,\n                  ref: attachZoomRef,\n                  style: {\n                    ...style,\n                    ...imgStyle\n                  },\n                  width: previewImage.originalWidth,\n                  height: previewImage.originalHeight,\n                  decoding: \"async\",\n                  loading: \"lazy\"\n                }\n              )\n            ]\n          }\n        );\n      } })\n    );\n  } else {\n    if (components.Image && forceCustomImages) {\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n        components.Image,\n        {\n          src,\n          alt,\n          className,\n          style,\n          width: null,\n          height: height || null,\n          priority,\n          onLoad\n        }\n      );\n    }\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n      \"img\",\n      {\n        className,\n        style,\n        src,\n        alt,\n        ref: attachZoomRef,\n        loading: \"lazy\",\n        decoding: \"async\",\n        ...rest\n      }\n    );\n  }\n}\n\n// src/components/asset.tsx\n\n\n\n// src/components/lite-youtube-embed.tsx\n\n\nvar qs = (params) => {\n  return Object.keys(params).map(\n    (key) => `${encodeURIComponent(key)}=${encodeURIComponent(params[key])}`\n  ).join(\"&\");\n};\nvar resolutions = [120, 320, 480, 640, 1280];\nvar resolutionMap = {\n  120: \"default\",\n  320: \"mqdefault\",\n  480: \"hqdefault\",\n  640: \"sddefault\",\n  1280: \"maxresdefault\"\n  // 2k, 4k, 8k images don't seem to be available\n  // Source: https://longzero.com/articles/youtube-thumbnail-sizes-url/\n};\nvar resolutionSizes = resolutions.map((resolution) => `(max-width: ${resolution}px) ${resolution}px`).join(\", \");\nfunction getPosterUrl(id, resolution = 480, type = \"jpg\") {\n  if (type === \"webp\") {\n    return `https://i.ytimg.com/vi_webp/${id}/${resolutionMap[resolution]}.webp`;\n  }\n  return `https://i.ytimg.com/vi/${id}/${resolutionMap[resolution]}.jpg`;\n}\nfunction generateSrcSet(id, type = \"jpg\") {\n  return resolutions.map((resolution) => `${getPosterUrl(id, resolution, type)} ${resolution}w`).join(\", \");\n}\nfunction LiteYouTubeEmbed({\n  id,\n  defaultPlay = false,\n  mute = false,\n  lazyImage = false,\n  iframeTitle = \"YouTube video\",\n  alt = \"Video preview\",\n  params = {},\n  adLinksPreconnect = true,\n  style,\n  className\n}) {\n  const muteParam = mute || defaultPlay ? \"1\" : \"0\";\n  const queryString = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    () => qs({ autoplay: \"1\", mute: muteParam, ...params }),\n    [muteParam, params]\n  );\n  const ytUrl = \"https://www.youtube-nocookie.com\";\n  const iframeSrc = `${ytUrl}/embed/${id}?${queryString}`;\n  const [isPreconnected, setIsPreconnected] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false);\n  const [iframeInitialized, setIframeInitialized] = react__WEBPACK_IMPORTED_MODULE_0__.useState(defaultPlay);\n  const [isIframeLoaded, setIsIframeLoaded] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false);\n  const warmConnections = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(() => {\n    if (isPreconnected) return;\n    setIsPreconnected(true);\n  }, [isPreconnected]);\n  const onLoadIframe = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(() => {\n    if (iframeInitialized) return;\n    setIframeInitialized(true);\n  }, [iframeInitialized]);\n  const onIframeLoaded = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(() => {\n    setIsIframeLoaded(true);\n  }, []);\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.Fragment, { children: [\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n      \"link\",\n      {\n        rel: \"preload\",\n        as: \"image\",\n        href: getPosterUrl(id),\n        imageSrcSet: generateSrcSet(id, \"webp\"),\n        imageSizes: resolutionSizes\n      }\n    ),\n    isPreconnected && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.Fragment, { children: [\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"link\", { rel: \"preconnect\", href: ytUrl }),\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"link\", { rel: \"preconnect\", href: \"https://www.google.com\" })\n    ] }),\n    isPreconnected && adLinksPreconnect && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.Fragment, { children: [\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"link\", { rel: \"preconnect\", href: \"https://static.doubleclick.net\" }),\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"link\", { rel: \"preconnect\", href: \"https://googleads.g.doubleclick.net\" })\n    ] }),\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\n      \"div\",\n      {\n        onClick: onLoadIframe,\n        onPointerOver: warmConnections,\n        className: cs(\n          \"notion-yt-lite\",\n          isIframeLoaded && \"notion-yt-loaded\",\n          iframeInitialized && \"notion-yt-initialized\",\n          className\n        ),\n        style,\n        children: [\n          /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"picture\", { children: [\n            resolutions.map((resolution) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n              \"source\",\n              {\n                srcSet: `${getPosterUrl(id, resolution, \"webp\")} ${resolution}w`,\n                media: `(max-width: ${resolution}px)`,\n                type: \"image/webp\"\n              },\n              resolution\n            )),\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n              \"img\",\n              {\n                src: getPosterUrl(id),\n                className: \"notion-yt-thumbnail\",\n                loading: lazyImage ? \"lazy\" : void 0,\n                alt\n              }\n            )\n          ] }),\n          /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"notion-yt-playbtn\" }),\n          iframeInitialized && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n            \"iframe\",\n            {\n              width: \"560\",\n              height: \"315\",\n              frameBorder: \"0\",\n              allow: \"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\",\n              allowFullScreen: true,\n              title: iframeTitle,\n              src: iframeSrc,\n              onLoad: onIframeLoaded\n            }\n          )\n        ]\n      }\n    )\n  ] });\n}\n\n// src/components/asset.tsx\n\nvar isServer = !globalThis.window;\nvar supportedAssetTypes = /* @__PURE__ */ new Set([\n  \"replit\",\n  \"video\",\n  \"image\",\n  \"embed\",\n  \"figma\",\n  \"typeform\",\n  \"excalidraw\",\n  \"maps\",\n  \"tweet\",\n  \"pdf\",\n  \"gist\",\n  \"codepen\",\n  \"drive\"\n]);\nfunction Asset({\n  block,\n  zoomable = true,\n  children\n}) {\n  var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j, _k, _l;\n  const { recordMap, mapImageUrl, components } = useNotionContext();\n  if (!block || !supportedAssetTypes.has(block.type)) {\n    return null;\n  }\n  const style = {\n    position: \"relative\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignSelf: \"center\",\n    width: \"100%\",\n    maxWidth: \"100%\",\n    flexDirection: \"column\"\n  };\n  const assetStyle = {};\n  if (block.format) {\n    const {\n      block_aspect_ratio,\n      block_height,\n      block_width,\n      block_full_width,\n      block_page_width,\n      block_preserve_scale\n    } = block.format;\n    if (block_full_width || block_page_width) {\n      if (block_full_width) {\n        style.width = \"100vw\";\n      } else {\n        style.width = \"100%\";\n      }\n      if (block.type === \"video\") {\n        if (block_height) {\n          style.height = block_height;\n        } else if (block_aspect_ratio) {\n          style.paddingBottom = `${block_aspect_ratio * 100}%`;\n        } else if (block_preserve_scale) {\n          style.objectFit = \"contain\";\n        }\n      } else if (block_aspect_ratio && block.type !== \"image\") {\n        style.paddingBottom = `${block_aspect_ratio * 100}%`;\n      } else if (block_height) {\n        style.height = block_height;\n      } else if (block_preserve_scale) {\n        if (block.type === \"image\") {\n          style.height = \"100%\";\n        } else {\n          style.paddingBottom = \"75%\";\n          style.minHeight = 100;\n        }\n      }\n    } else {\n      switch ((_a = block.format) == null ? void 0 : _a.block_alignment) {\n        case \"center\":\n          style.alignSelf = \"center\";\n          break;\n        case \"left\":\n          style.alignSelf = \"start\";\n          break;\n        case \"right\":\n          style.alignSelf = \"end\";\n          break;\n      }\n      if (block_width) {\n        style.width = block_width;\n      }\n      if (block_preserve_scale && block.type !== \"image\") {\n        style.paddingBottom = \"50%\";\n        style.minHeight = 100;\n      } else {\n        if (block_height && block.type !== \"image\") {\n          style.height = block_height;\n        }\n      }\n    }\n    if (block.type === \"image\") {\n      assetStyle.objectFit = \"cover\";\n    } else if (block_preserve_scale) {\n      assetStyle.objectFit = \"contain\";\n    }\n  }\n  let source = ((_b = recordMap.signed_urls) == null ? void 0 : _b[block.id]) || ((_e = (_d = (_c = block.properties) == null ? void 0 : _c.source) == null ? void 0 : _d[0]) == null ? void 0 : _e[0]);\n  if (!source) {\n    return null;\n  }\n  if (block.space_id) {\n    const url = new URL(source);\n    url.searchParams.set(\"spaceId\", block.space_id);\n    source = url.toString();\n  }\n  let content = null;\n  if (block.type === \"tweet\") {\n    const src = source;\n    if (!src) return null;\n    const id = (_g = (_f = src.split(\"?\")) == null ? void 0 : _f[0]) == null ? void 0 : _g.split(\"/\").pop();\n    if (!id) return null;\n    content = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n      \"div\",\n      {\n        style: {\n          ...assetStyle,\n          maxWidth: 420,\n          width: \"100%\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\"\n        },\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(components.Tweet, { id })\n      }\n    );\n  } else if (block.type === \"pdf\") {\n    style.overflow = \"auto\";\n    style.background = \"rgb(226, 226, 226)\";\n    style.display = \"block\";\n    if (!style.padding) {\n      style.padding = \"8px 16px\";\n    }\n    if (!isServer) {\n      content = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(components.Pdf, { file: source });\n    }\n  } else if (block.type === \"embed\" || block.type === \"video\" || block.type === \"figma\" || block.type === \"typeform\" || block.type === \"gist\" || block.type === \"maps\" || block.type === \"excalidraw\" || block.type === \"codepen\" || block.type === \"drive\" || block.type === \"replit\") {\n    if (block.type === \"video\" && source && !source.includes(\"youtube\") && !source.includes(\"youtu.be\") && !source.includes(\"vimeo\") && !source.includes(\"wistia\") && !source.includes(\"loom\") && !source.includes(\"videoask\") && !source.includes(\"getcloudapp\") && !source.includes(\"tella\")) {\n      style.paddingBottom = void 0;\n      content = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n        \"video\",\n        {\n          playsInline: true,\n          controls: true,\n          preload: \"metadata\",\n          style: assetStyle,\n          src: source,\n          title: block.type\n        }\n      );\n    } else {\n      let src = ((_h = block.format) == null ? void 0 : _h.display_source) || source;\n      if (src) {\n        const youtubeVideoId = block.type === \"video\" ? getYoutubeId(src) : null;\n        if (youtubeVideoId) {\n          const params = getUrlParams(src);\n          content = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n            LiteYouTubeEmbed,\n            {\n              id: youtubeVideoId,\n              style: assetStyle,\n              className: \"notion-asset-object-fit\",\n              params\n            }\n          );\n        } else if (block.type === \"gist\") {\n          if (!src.endsWith(\".pibb\")) {\n            src = `${src}.pibb`;\n          }\n          assetStyle.width = \"100%\";\n          style.paddingBottom = \"50%\";\n          content = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n            \"iframe\",\n            {\n              style: assetStyle,\n              className: \"notion-asset-object-fit\",\n              src,\n              title: \"GitHub Gist\",\n              frameBorder: \"0\",\n              loading: \"lazy\",\n              scrolling: \"auto\"\n            }\n          );\n        } else {\n          src += block.type === \"typeform\" ? \"&disable-auto-focus=true\" : \"\";\n          content = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n            \"iframe\",\n            {\n              className: \"notion-asset-object-fit\",\n              style: assetStyle,\n              src,\n              title: `iframe ${block.type}`,\n              frameBorder: \"0\",\n              allowFullScreen: true,\n              loading: \"lazy\",\n              scrolling: \"auto\"\n            }\n          );\n        }\n      }\n    }\n  } else if (block.type === \"image\") {\n    if (source.includes(\"file.notion.so\")) {\n      source = (_k = (_j = (_i = block.properties) == null ? void 0 : _i.source) == null ? void 0 : _j[0]) == null ? void 0 : _k[0];\n    }\n    const src = mapImageUrl(source, block);\n    const caption = (0,notion_utils__WEBPACK_IMPORTED_MODULE_3__.getTextContent)((_l = block.properties) == null ? void 0 : _l.caption);\n    const alt = caption || \"notion image\";\n    content = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n      LazyImage,\n      {\n        src,\n        alt,\n        zoomable,\n        height: style.height,\n        style: assetStyle\n      }\n    );\n  }\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.Fragment, { children: [\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\", { style, children: [\n      content,\n      block.type === \"image\" && children\n    ] }),\n    block.type !== \"image\" && children\n  ] });\n}\n\n// src/components/asset-wrapper.tsx\n\nvar urlStyle = { width: \"100%\" };\nfunction AssetWrapper({\n  blockId,\n  block\n}) {\n  var _a, _b, _c, _d, _e, _f, _g, _h;\n  const value = block;\n  const { components, mapPageUrl, rootDomain, zoom } = useNotionContext();\n  let isURL = false;\n  if (block.type === \"image\") {\n    const caption = (_c = (_b = (_a = value == null ? void 0 : value.properties) == null ? void 0 : _a.caption) == null ? void 0 : _b[0]) == null ? void 0 : _c[0];\n    if (caption) {\n      const id = (0,notion_utils__WEBPACK_IMPORTED_MODULE_3__.parsePageId)(caption, { uuid: true });\n      const isPage = caption.charAt(0) === \"/\" && id;\n      if (isPage || isValidURL(caption)) {\n        isURL = true;\n      }\n    }\n  }\n  const figure = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n    \"figure\",\n    {\n      className: cs(\n        \"notion-asset-wrapper\",\n        `notion-asset-wrapper-${block.type}`,\n        ((_d = value.format) == null ? void 0 : _d.block_full_width) && \"notion-asset-wrapper-full\",\n        blockId\n      ),\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Asset, { block: value, zoomable: zoom && !isURL, children: ((_e = value == null ? void 0 : value.properties) == null ? void 0 : _e.caption) && !isURL && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"figcaption\", { className: \"notion-asset-caption\", children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Text, { value: value.properties.caption, block }) }) })\n    }\n  );\n  if (isURL) {\n    const caption = (_h = (_g = (_f = value == null ? void 0 : value.properties) == null ? void 0 : _f.caption) == null ? void 0 : _g[0]) == null ? void 0 : _h[0];\n    const id = (0,notion_utils__WEBPACK_IMPORTED_MODULE_3__.parsePageId)(caption, { uuid: true });\n    const isPage = (caption == null ? void 0 : caption.charAt(0)) === \"/\" && id;\n    const captionHostname = extractHostname(caption);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n      components.PageLink,\n      {\n        style: urlStyle,\n        href: isPage ? mapPageUrl(id) : caption,\n        target: captionHostname && captionHostname !== rootDomain && !(caption == null ? void 0 : caption.startsWith(\"/\")) ? \"blank_\" : null,\n        children: figure\n      }\n    );\n  }\n  return figure;\n}\nfunction isValidURL(str) {\n  const pattern = new RegExp(\n    \"^(https?:\\\\/\\\\/)?((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*(\\\\?[;&a-z\\\\d%_.~+=-]*)?(\\\\#[-a-z\\\\d_]*)?$\",\n    \"i\"\n  );\n  return !!pattern.test(str);\n}\nfunction extractHostname(url) {\n  try {\n    const hostname = new URL(url).hostname;\n    return hostname;\n  } catch (e) {\n    return \"\";\n  }\n}\n\n// src/icons/check.tsx\n\nfunction SvgCheck(props) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"svg\", { viewBox: \"0 0 14 14\", ...props, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"path\", { d: \"M5.5 12L14 3.5 12.5 2l-7 7-4-4.003L0 6.499z\" }) });\n}\nvar check_default = SvgCheck;\n\n// src/components/checkbox.tsx\n\nfunction Checkbox({\n  isChecked\n}) {\n  let content = null;\n  if (isChecked) {\n    content = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"notion-property-checkbox-checked\", children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(check_default, {}) });\n  } else {\n    content = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"notion-property-checkbox-unchecked\" });\n  }\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"span\", { className: \"notion-property notion-property-checkbox\", children: content });\n}\n\n// src/next.tsx\n\n\n\nvar wrapNextImage = (NextImage) => {\n  return react__WEBPACK_IMPORTED_MODULE_0__.memo(function ReactNotionXNextImage({\n    src,\n    alt,\n    width,\n    height,\n    className,\n    fill,\n    ...rest\n  }) {\n    if (fill === \"undefined\") {\n      fill = !(width && height);\n    }\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n      NextImage,\n      {\n        className,\n        src,\n        alt,\n        width: !fill && width && height ? width : void 0,\n        height: !fill && width && height ? height : void 0,\n        fill,\n        ...rest\n      }\n    );\n  }, react_fast_compare__WEBPACK_IMPORTED_MODULE_6__);\n};\nvar wrapNextLegacyImage = (NextLegacyImage) => {\n  return react__WEBPACK_IMPORTED_MODULE_0__.memo(function ReactNotionXNextLegacyImage({\n    src,\n    alt,\n    width,\n    height,\n    className,\n    style,\n    layout,\n    ...rest\n  }) {\n    if (!layout) {\n      layout = width && height ? \"intrinsic\" : \"fill\";\n    }\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n      NextLegacyImage,\n      {\n        className,\n        src,\n        alt,\n        width: layout === \"intrinsic\" && width,\n        height: layout === \"intrinsic\" && height,\n        objectFit: style == null ? void 0 : style.objectFit,\n        objectPosition: style == null ? void 0 : style.objectPosition,\n        layout,\n        ...rest\n      }\n    );\n  }, react_fast_compare__WEBPACK_IMPORTED_MODULE_6__);\n};\nfunction wrapNextLink(NextLink) {\n  return ({\n    href,\n    as,\n    passHref,\n    prefetch,\n    replace,\n    scroll,\n    shallow,\n    locale,\n    ...linkProps\n  }) => {\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n      NextLink,\n      {\n        href,\n        as,\n        passHref,\n        prefetch,\n        replace,\n        scroll,\n        shallow,\n        locale,\n        legacyBehavior: true,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"a\", { ...linkProps })\n      }\n    );\n  };\n}\n\n// src/context.tsx\n\nfunction DefaultLink(props) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"a\", { target: \"_blank\", rel: \"noopener noreferrer\", ...props });\n}\nvar DefaultLinkMemo = react__WEBPACK_IMPORTED_MODULE_0__.memo(DefaultLink);\nfunction DefaultPageLink(props) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"a\", { ...props });\n}\nvar DefaultPageLinkMemo = react__WEBPACK_IMPORTED_MODULE_0__.memo(DefaultPageLink);\nfunction DefaultEmbed(props) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(AssetWrapper, { ...props });\n}\nvar DefaultHeader = Header;\nfunction dummyLink({ href, rel, target, title, ...rest }) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"span\", { ...rest });\n}\nvar dummyComponent = (name) => () => {\n  console.warn(\n    `Warning: using empty component \"${name}\" (you should override this in NotionRenderer.components)`\n  );\n  return null;\n};\nvar dummyOverrideFn = (_, defaultValueFn) => defaultValueFn();\nvar defaultComponents = {\n  Image: null,\n  // disable custom images by default\n  Link: DefaultLinkMemo,\n  PageLink: DefaultPageLinkMemo,\n  Checkbox,\n  Callout: void 0,\n  // use the built-in callout rendering by default\n  Code: dummyComponent(\"Code\"),\n  Equation: dummyComponent(\"Equation\"),\n  Collection: dummyComponent(\"Collection\"),\n  Property: void 0,\n  // use the built-in property rendering by default\n  propertyTextValue: dummyOverrideFn,\n  propertySelectValue: dummyOverrideFn,\n  propertyRelationValue: dummyOverrideFn,\n  propertyFormulaValue: dummyOverrideFn,\n  propertyTitleValue: dummyOverrideFn,\n  propertyPersonValue: dummyOverrideFn,\n  propertyFileValue: dummyOverrideFn,\n  propertyCheckboxValue: dummyOverrideFn,\n  propertyUrlValue: dummyOverrideFn,\n  propertyEmailValue: dummyOverrideFn,\n  propertyPhoneNumberValue: dummyOverrideFn,\n  propertyNumberValue: dummyOverrideFn,\n  propertyLastEditedTimeValue: dummyOverrideFn,\n  propertyCreatedTimeValue: dummyOverrideFn,\n  propertyDateValue: dummyOverrideFn,\n  propertyAutoIncrementIdValue: dummyOverrideFn,\n  Pdf: dummyComponent(\"Pdf\"),\n  Tweet: dummyComponent(\"Tweet\"),\n  Modal: dummyComponent(\"Modal\"),\n  Header: DefaultHeader,\n  Embed: DefaultEmbed\n};\nvar defaultNotionContext = {\n  recordMap: {\n    block: {},\n    collection: {},\n    collection_view: {},\n    collection_query: {},\n    notion_user: {},\n    signed_urls: {}\n  },\n  components: defaultComponents,\n  mapPageUrl: (0,notion_utils__WEBPACK_IMPORTED_MODULE_3__.defaultMapPageUrl)(),\n  mapImageUrl: notion_utils__WEBPACK_IMPORTED_MODULE_3__.defaultMapImageUrl,\n  searchNotion: void 0,\n  isShowingSearch: false,\n  onHideSearch: void 0,\n  fullPage: false,\n  darkMode: false,\n  previewImages: false,\n  forceCustomImages: false,\n  showCollectionViewDropdown: true,\n  linkTableTitleProperties: true,\n  isLinkCollectionToUrlProperty: false,\n  showTableOfContents: false,\n  minTableOfContentsItems: 3,\n  defaultPageIcon: null,\n  defaultPageCover: null,\n  defaultPageCoverPosition: 0.5,\n  zoom: null\n};\nvar ctx = react__WEBPACK_IMPORTED_MODULE_0__.createContext(defaultNotionContext);\nfunction NotionContextProvider({\n  components: themeComponents = {},\n  children,\n  mapPageUrl,\n  mapImageUrl,\n  rootPageId,\n  ...rest\n}) {\n  for (const key of Object.keys(rest)) {\n    if (rest[key] === void 0) {\n      delete rest[key];\n    }\n  }\n  const wrappedThemeComponents = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    () => ({\n      ...themeComponents\n    }),\n    [themeComponents]\n  );\n  if (wrappedThemeComponents.nextImage && wrappedThemeComponents.nextLegacyImage) {\n    console.warn(\n      \"You should not pass both nextImage and nextLegacyImage. Only nextImage component will be used.\"\n    );\n    wrappedThemeComponents.Image = wrapNextImage(themeComponents.nextImage);\n  } else if (wrappedThemeComponents.nextImage) {\n    wrappedThemeComponents.Image = wrapNextImage(themeComponents.nextImage);\n  } else if (wrappedThemeComponents.nextLegacyImage) {\n    wrappedThemeComponents.Image = wrapNextLegacyImage(\n      themeComponents.nextLegacyImage\n    );\n  }\n  if (wrappedThemeComponents.nextLink) {\n    wrappedThemeComponents.nextLink = wrapNextLink(themeComponents.nextLink);\n  }\n  for (const key of Object.keys(wrappedThemeComponents)) {\n    if (!wrappedThemeComponents[key]) {\n      delete wrappedThemeComponents[key];\n    }\n  }\n  const value = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    () => ({\n      ...defaultNotionContext,\n      ...rest,\n      rootPageId,\n      mapPageUrl: mapPageUrl != null ? mapPageUrl : (0,notion_utils__WEBPACK_IMPORTED_MODULE_3__.defaultMapPageUrl)(rootPageId),\n      mapImageUrl: mapImageUrl != null ? mapImageUrl : notion_utils__WEBPACK_IMPORTED_MODULE_3__.defaultMapImageUrl,\n      components: { ...defaultComponents, ...wrappedThemeComponents }\n    }),\n    [mapImageUrl, mapPageUrl, wrappedThemeComponents, rootPageId, rest]\n  );\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(ctx.Provider, { value, children });\n}\nvar NotionContextConsumer = ctx.Consumer;\nvar useNotionContext = () => {\n  return react__WEBPACK_IMPORTED_MODULE_0__.useContext(ctx);\n};\n\n// src/icons/default-page-icon.tsx\n\n\nfunction DefaultPageIcon(props) {\n  const { className, ...rest } = props;\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"svg\", { className, ...rest, viewBox: \"0 0 30 30\", width: \"16\", children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"path\", { d: \"M16,1H4v28h22V11L16,1z M16,3.828L23.172,11H16V3.828z M24,27H6V3h8v10h10V27z M8,17h14v-2H8V17z M8,21h14v-2H8V21z M8,25h14v-2H8V25z\" }) });\n}\n\n// src/components/page-icon.tsx\n\nvar isIconBlock = (value) => {\n  return value.type === \"page\" || value.type === \"callout\" || value.type === \"collection_view\" || value.type === \"collection_view_page\";\n};\nfunction PageIconImpl({\n  block,\n  className,\n  inline = true,\n  hideDefaultIcon = false,\n  defaultIcon\n}) {\n  var _a;\n  const { mapImageUrl, recordMap, darkMode } = useNotionContext();\n  let isImage = false;\n  let content = null;\n  if (isIconBlock(block)) {\n    const icon = ((_a = (0,notion_utils__WEBPACK_IMPORTED_MODULE_3__.getBlockIcon)(block, recordMap)) == null ? void 0 : _a.trim()) || defaultIcon;\n    const title = (0,notion_utils__WEBPACK_IMPORTED_MODULE_3__.getBlockTitle)(block, recordMap);\n    if (icon && (0,notion_utils__WEBPACK_IMPORTED_MODULE_3__.isUrl)(icon)) {\n      const url = mapImageUrl(icon, block);\n      isImage = true;\n      content = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n        LazyImage,\n        {\n          src: url,\n          alt: title || \"page icon\",\n          className: cs(className, \"notion-page-icon\")\n        }\n      );\n    } else if (icon && icon.startsWith(\"/icons/\")) {\n      const url = \"https://www.notion.so\" + icon + \"?mode=\" + (darkMode ? \"dark\" : \"light\");\n      content = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n        LazyImage,\n        {\n          src: url,\n          alt: title || \"page icon\",\n          className: cs(className, \"notion-page-icon\")\n        }\n      );\n    } else if (!icon) {\n      if (!hideDefaultIcon) {\n        isImage = true;\n        content = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n          DefaultPageIcon,\n          {\n            className: cs(className, \"notion-page-icon\"),\n            alt: title || \"page icon\"\n          }\n        );\n      }\n    } else {\n      isImage = false;\n      content = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n        \"span\",\n        {\n          className: cs(className, \"notion-page-icon\"),\n          role: \"img\",\n          \"aria-label\": icon,\n          children: icon\n        }\n      );\n    }\n  }\n  if (!content) {\n    return null;\n  }\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n    \"div\",\n    {\n      className: cs(\n        inline ? \"notion-page-icon-inline\" : \"notion-page-icon-hero\",\n        isImage ? \"notion-page-icon-image\" : \"notion-page-icon-span\"\n      ),\n      children: content\n    }\n  );\n}\nvar PageIcon = react__WEBPACK_IMPORTED_MODULE_0__.memo(PageIconImpl);\n\n// src/icons/collection-view-icon.tsx\n\n\n// src/icons/collection-view-board.tsx\n\nfunction SvgCollectionViewBoard(props) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"svg\", { viewBox: \"0 0 14 14\", ...props, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"path\", { d: \"M12 1.5H2a.5.5 0 00-.5.5v10a.5.5 0 00.5.5h10a.5.5 0 00.5-.5V2a.5.5 0 00-.5-.5zM2 0h10a2 2 0 012 2v10a2 2 0 01-2 2H2a2 2 0 01-2-2V2a2 2 0 012-2zm1 3h2v6H3V3zm3 0h2v8H6V3zm3 0h2v4H9V3z\" }) });\n}\nvar collection_view_board_default = SvgCollectionViewBoard;\n\n// src/icons/collection-view-calendar.tsx\n\nfunction SvgCollectionViewCalendar(props) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"svg\", { viewBox: \"0 0 14 14\", ...props, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"path\", { d: \"M2.564 4.004c-.586 0-.71.024-.833.09a.319.319 0 00-.141.14c-.066.124-.09.247-.09.834v6.368c0 .586.024.71.09.833a.319.319 0 00.14.141c.124.066.248.09.834.09h8.872c.586 0 .71-.024.833-.09a.319.319 0 00.141-.14c.066-.124.09-.248.09-.834V5.068c0-.587-.024-.71-.09-.834a.319.319 0 00-.14-.14c-.124-.066-.248-.09-.834-.09H2.564zm0-4.004h8.872c.892 0 1.215.093 1.54.267.327.174.583.43.757.756.174.326.267.65.267 1.54v8.873c0 .892-.093 1.215-.267 1.54-.174.327-.43.583-.756.757-.326.174-.65.267-1.54.267H2.563c-.892 0-1.215-.093-1.54-.267a1.817 1.817 0 01-.757-.756C.093 12.65 0 12.327 0 11.437V2.563c0-.892.093-1.215.267-1.54.174-.327.43-.583.756-.757C1.35.093 1.673 0 2.563 0zm4.044 7.88c.179.11.318.256.418.436.1.18.148.394.148.64 0 .304-.08.597-.238.876-.16.28-.392.498-.692.65-.299.15-.685.224-1.16.224-.46 0-.827-.055-1.1-.166a1.687 1.687 0 01-.68-.492 2.227 2.227 0 01-.404-.802l.083-.127 1.37-.182.112.08c.05.258.126.431.221.52a.507.507 0 00.364.133.495.495 0 00.386-.169c.105-.115.158-.27.158-.472 0-.205-.051-.358-.15-.463a.527.527 0 00-.407-.157 1.65 1.65 0 00-.417.077l-.127-.104.07-.98.115-.091c.072.01.127.015.164.015.154 0 .28-.047.38-.144.1-.096.15-.205.15-.335a.388.388 0 00-.106-.29c-.07-.07-.168-.105-.3-.105a.444.444 0 00-.324.118c-.083.08-.143.232-.176.457l-.117.084-1.297-.233-.079-.123c.114-.435.334-.772.66-1.006.326-.234.78-.349 1.36-.349.666 0 1.153.126 1.462.384.31.259.467.589.467.982 0 .233-.064.446-.192.636a1.43 1.43 0 01-.37.365c.1.034.182.072.248.113zm1.747-.145a5.186 5.186 0 01-.806.31l-.129-.097V6.824l.07-.096c.455-.147.807-.322 1.055-.524.246-.202.439-.45.579-.747l.09-.057h1.135l.1.1v5.021l-.1.1H8.961l-.1-.1V7.428a4.053 4.053 0 01-.506.307z\" }) });\n}\nvar collection_view_calendar_default = SvgCollectionViewCalendar;\n\n// src/icons/collection-view-gallery.tsx\n\nfunction SvgCollectionViewGallery(props) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"svg\", { viewBox: \"0 0 14 14\", ...props, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"path\", { d: \"M12 1.5H2a.5.5 0 00-.5.5v10a.5.5 0 00.5.5h10a.5.5 0 00.5-.5V2a.5.5 0 00-.5-.5zM2 0h10a2 2 0 012 2v10a2 2 0 01-2 2H2a2 2 0 01-2-2V2a2 2 0 012-2zm1 3h3.5v3.5H3V3zm4.5 0H11v3.5H7.5V3zM3 7.5h3.5V11H3V7.5zm4.5 0H11V11H7.5V7.5z\" }) });\n}\nvar collection_view_gallery_default = SvgCollectionViewGallery;\n\n// src/icons/collection-view-list.tsx\n\nfunction SvgCollectionViewList(props) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"svg\", { viewBox: \"0 0 14 14\", ...props, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"path\", { d: \"M12 1.5H2a.5.5 0 00-.5.5v10a.5.5 0 00.5.5h10a.5.5 0 00.5-.5V2a.5.5 0 00-.5-.5zM2 0h10a2 2 0 012 2v10a2 2 0 01-2 2H2a2 2 0 01-2-2V2a2 2 0 012-2zm1 3h6v1.5H3V3zm0 2.5h8V7H3V5.5zM3 8h4v1.5H3V8z\" }) });\n}\nvar collection_view_list_default = SvgCollectionViewList;\n\n// src/icons/collection-view-table.tsx\n\nfunction SvgCollectionViewTable(props) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"svg\", { viewBox: \"0 0 14 14\", ...props, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"path\", { d: \"M2 0h10a2 2 0 012 2v10a2 2 0 01-2 2H2a2 2 0 01-2-2V2a2 2 0 012-2zm3.75 5.67v2.66h6.75V5.67H5.75zm0 4.17v2.66h5.75a1 1 0 001-1V9.84H5.75zM1.5 5.67v2.66h2.75V5.67H1.5zm0 4.17v1.66a1 1 0 001 1h1.75V9.84H1.5zm1-8.34a1 1 0 00-1 1v1.66h2.75V1.5H2.5zm3.25 0v2.66h6.75V2.5a1 1 0 00-1-1H5.75z\" }) });\n}\nvar collection_view_table_default = SvgCollectionViewTable;\n\n// src/icons/collection-view-icon.tsx\nvar iconMap = {\n  table: collection_view_table_default,\n  board: collection_view_board_default,\n  gallery: collection_view_gallery_default,\n  list: collection_view_list_default,\n  calendar: collection_view_calendar_default\n};\nfunction CollectionViewIcon({ type, ...rest }) {\n  const icon = iconMap[type];\n  if (!icon) {\n    return null;\n  }\n  return icon(rest);\n}\n\n// src/third-party/collection-row.tsx\n\n\n// src/third-party/collection-column-title.tsx\n\n\n// src/icons/property-icon.tsx\n\n\n// src/icons/type-auto-increment-id.tsx\n\nfunction SvgTypeAutoIncrementId(props) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"svg\", { viewBox: \"0 0 16 16\", ...props, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"path\", { d: \"M12.252 7.9209C13.7217 7.9209 14.7266 6.93652 14.7266 5.50781C14.7266 4.0791 13.7217 3.10156 12.252 3.10156C10.8232 3.10156 9.8457 4.0791 9.8457 5.50781C9.8457 6.93652 10.8301 7.9209 12.252 7.9209ZM2.00488 13.1367C2.45605 13.1367 2.72949 12.8496 2.72949 12.3848V5.83594L7.35059 12.5967C7.6377 12.9932 7.86328 13.1367 8.20508 13.1367C8.69043 13.1367 8.96387 12.8359 8.96387 12.3232V3.8877C8.96387 3.42285 8.69043 3.12891 8.23242 3.12891C7.78809 3.12891 7.50781 3.41602 7.50781 3.8877V10.4229L2.89355 3.66895C2.60645 3.25879 2.40137 3.12891 2.03906 3.12891C1.56738 3.12891 1.27344 3.4502 1.27344 3.94238V12.3848C1.27344 12.8496 1.55371 13.1367 2.00488 13.1367ZM12.252 6.84766C11.5615 6.84766 11.0898 6.30762 11.0898 5.50781C11.0898 4.70801 11.5615 4.16797 12.252 4.16797C12.9902 4.16797 13.4756 4.70801 13.4756 5.50781C13.4756 6.30762 12.9834 6.84766 12.252 6.84766ZM10.625 9.77344H13.9541C14.3506 9.77344 14.624 9.54102 14.624 9.14453C14.624 8.74805 14.3506 8.50195 13.9541 8.50195H10.625C10.2285 8.50195 9.96191 8.74805 9.96191 9.14453C9.96191 9.54102 10.2285 9.77344 10.625 9.77344Z\" }) });\n}\nvar type_auto_increment_id_default = SvgTypeAutoIncrementId;\n\n// src/icons/type-checkbox.tsx\n\nfunction SvgTypeCheckbox(props) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"svg\", { viewBox: \"0 0 14 14\", ...props, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"path\", { d: \"M0 3a3 3 0 013-3h8a3 3 0 013 3v8a3 3 0 01-3 3H3a3 3 0 01-3-3V3zm3-1.5A1.5 1.5 0 001.5 3v8A1.5 1.5 0 003 12.5h8a1.5 1.5 0 001.5-1.5V3A1.5 1.5 0 0011 1.5H3zm-.167 5.316l.566-.542.177-.17.347-.332.346.334.176.17 1.139 1.098 3.699-3.563.177-.17.347-.335.347.334.177.17.563.543.177.171.372.36-.372.36-.177.17-4.786 4.615-.177.171-.347.334-.347-.334-.177-.17-2.23-2.15-.177-.172-.375-.361.376-.36.179-.17z\" }) });\n}\nvar type_checkbox_default = SvgTypeCheckbox;\n\n// src/icons/type-date.tsx\n\nfunction SvgTypeDate(props) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"svg\", { viewBox: \"0 0 14 14\", ...props, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"path\", { d: \"M10.889 5.5H3.11v1.556h7.778V5.5zm1.555-4.444h-.777V0H10.11v1.056H3.89V0H2.333v1.056h-.777c-.864 0-1.548.7-1.548 1.555L0 12.5c0 .856.692 1.5 1.556 1.5h10.888C13.3 14 14 13.356 14 12.5V2.611c0-.855-.7-1.555-1.556-1.555zm0 11.444H1.556V3.944h10.888V12.5zM8.556 8.611H3.11v1.556h5.445V8.61z\" }) });\n}\nvar type_date_default = SvgTypeDate;\n\n// src/icons/type-email.tsx\n\nfunction SvgTypeEmail(props) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"svg\", { viewBox: \"0 0 14 14\", ...props, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"path\", { d: \"M14 6.225c0 .822-.133 1.574-.4 2.256-.267.683-.644 1.218-1.13 1.606-.488.388-.946.6-1.494.6-.429 0-.808-.102-1.139-.305a1.753 1.753 0 01-.713-.8c-.613.736-1.563 1.104-2.531 1.104-1.027 0-1.835-.304-2.427-.912-.591-.608-.887-1.44-.887-2.496 0-1.204.389-2.175 1.166-2.911.776-.736 1.791-1.105 3.044-1.105.498 0 2.032.212 2.252.268.51.13.86.593.835 1.112l-.156 3.287c0 .794.22 1.19.66 1.19.372 0 .668-.267.888-.8.22-.534.33-1.232.33-2.094 0-.919-.194-1.731-.582-2.436a3.924 3.924 0 00-1.64-1.614c-.704-.371-1.509-.557-2.413-.557-1.172 0-2.19.237-3.053.711a4.785 4.785 0 00-1.988 2.05c-.46.894-.691 1.926-.691 3.096 0 1.576.428 2.784 1.283 3.627.855.841 2.094 1.262 3.718 1.262.615 0 1.29-.067 2.027-.2.225-.042.518-.108.877-.2a.863.863 0 011.025.527.76.76 0 01-.502.993c-1.052.316-2.17.488-3.357.516-2.204 0-3.922-.57-5.154-1.713C.616 11.146 0 9.56 0 7.527c0-1.41.315-2.69.944-3.84A6.792 6.792 0 013.63.98C4.794.327 6.131 0 7.645 0c1.276 0 2.514.29 3.418.77.905.481 1.574 1.228 2.12 2.176.544.947.817 2.04.817 3.28zm-8.615 1.01c0 1.208.488 1.811 1.466 1.811.511 0 .9-.181 1.168-.545.267-.363.429-.954.486-1.772l.11-1.896a4.638 4.638 0 00-.98-.095c-.71 0-1.263.224-1.658.67-.395.446-.592 1.055-.592 1.828z\" }) });\n}\nvar type_email_default = SvgTypeEmail;\n\n// src/icons/type-file.tsx\n\nfunction SvgTypeFile(props) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"svg\", { viewBox: \"0 0 14 14\", ...props, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"path\", { d: \"M5.946 14a4.975 4.975 0 01-3.497-1.415A4.731 4.731 0 011 9.174c0-1.288.515-2.5 1.449-3.41L7.456.986c1.345-1.313 3.722-1.318 5.08.007a3.453 3.453 0 010 4.961L8.03 10.241c-.867.847-2.293.848-3.17-.006a2.158 2.158 0 010-3.102l1.744-1.701 1.272 1.24-1.744 1.701a.43.43 0 000 .621c.23.223.405.223.636 0l4.503-4.288a1.723 1.723 0 00-.007-2.473c-.68-.663-1.864-.663-2.543 0L3.713 7.011a3.006 3.006 0 00-.915 2.163c0 .82.328 1.591.922 2.17 1.19 1.162 3.262 1.162 4.451 0l2.248-2.192 1.272 1.24-2.248 2.193A4.978 4.978 0 015.946 14z\" }) });\n}\nvar type_file_default = SvgTypeFile;\n\n// src/icons/type-formula.tsx\n\nfunction SvgTypeFormula(props) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"svg\", { viewBox: \"0 0 14 14\", ...props, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"path\", { d: \"M7.779 7.063l-3.157 4.224a.49.49 0 00-.072.218.35.35 0 00.346.357h6.242c.476 0 .862.398.862.889v.36c0 .491-.386.889-.862.889H1.862A.876.876 0 011 13.111v-.425a.82.82 0 01.177-.54L4.393 7.8a1.367 1.367 0 00-.006-1.625L1.4 2.194a.822.822 0 01-.18-.544V.89C1.22.398 1.604 0 2.08 0h8.838c.476 0 .861.398.861.889v.36c0 .491-.385.89-.86.89H5.135c-.19 0-.345.159-.345.356a.489.489 0 00.07.216l2.92 3.975c.049.062.063.107.06.188a.246.246 0 01-.062.189z\" }) });\n}\nvar type_formula_default = SvgTypeFormula;\n\n// src/icons/type-multi-select.tsx\n\nfunction SvgTypeMultiSelect(props) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"svg\", { viewBox: \"0 0 14 14\", ...props, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"path\", { d: \"M4 3a1 1 0 011-1h7a1 1 0 110 2H5a1 1 0 01-1-1zm0 4a1 1 0 011-1h7a1 1 0 110 2H5a1 1 0 01-1-1zm0 4a1 1 0 011-1h7a1 1 0 110 2H5a1 1 0 01-1-1zM2 4a1 1 0 110-2 1 1 0 010 2zm0 4a1 1 0 110-2 1 1 0 010 2zm0 4a1 1 0 110-2 1 1 0 010 2z\" }) });\n}\nvar type_multi_select_default = SvgTypeMultiSelect;\n\n// src/icons/type-number.tsx\n\nfunction SvgTypeNumber(props) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"svg\", { viewBox: \"0 0 14 14\", ...props, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"path\", { d: \"M4.462 0c-.595 0-1.078.482-1.078 1.078v2.306H1.078a1.078 1.078 0 100 2.155h2.306v2.922H1.078a1.078 1.078 0 100 2.155h2.306v2.306a1.078 1.078 0 002.155 0v-2.306H8.46v2.306a1.078 1.078 0 002.156 0v-2.306h2.306a1.078 1.078 0 100-2.155h-2.306V5.539h2.306a1.078 1.078 0 100-2.155h-2.306V1.078a1.078 1.078 0 00-2.156 0v2.306H5.54V1.078C5.54.482 5.056 0 4.461 0zm1.077 8.46V5.54H8.46v2.92H5.54z\" }) });\n}\nvar type_number_default = SvgTypeNumber;\n\n// src/icons/type-person.tsx\n\nfunction SvgTypePerson(props) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"svg\", { viewBox: \"0 0 14 14\", ...props, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"path\", { d: \"M9.625 10.847C8.912 10.289 8.121 9.926 7 9.26v-.54a3.33 3.33 0 00.538-.888c.408-.1.774-.498.774-.832 0-.482-.202-.673-.44-.829 0-.015.003-.03.003-.046 0-.711-.438-2.625-2.625-2.625-2.188 0-2.625 1.915-2.625 2.625 0 .017.003.03.003.046-.238.156-.44.347-.44.829 0 .334.366.731.774.833.146.343.326.643.538.886v.541c-1.12.665-1.912 1.028-2.625 1.587C.041 11.498 0 12.469 0 14h10.5c0-1.531-.041-2.502-.875-3.153zm3.5-3.5c-.713-.558-1.504-.921-2.625-1.587v-.54c.212-.244.392-.544.538-.888.408-.1.774-.498.774-.832 0-.482-.202-.673-.44-.829 0-.015.003-.03.003-.046C11.375 1.914 10.937 0 8.75 0 6.562 0 6.125 1.915 6.125 2.625c0 .017.003.03.003.046-.016.012-.03.025-.047.036 1.751.359 2.516 1.841 2.647 3.04.248.262.46.65.46 1.253 0 .603-.417 1.203-1.004 1.515-.057.109-.117.214-.181.315l.437.245c.64.357 1.194.666 1.724 1.081.138.108.256.224.365.343H14c0-1.53-.041-2.5-.875-3.153z\" }) });\n}\nvar type_person_default = SvgTypePerson;\n\n// src/icons/type-person-2.tsx\n\nfunction SvgTypePerson2(props) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"svg\", { viewBox: \"0 0 14 14\", ...props, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"path\", { d: \"M13.125 10.035c-.571-.55-2.324-1.504-3.5-2.16v-.834c.224-.322.42-.671.566-1.055.394-.242.746-.702.746-1.173 0-.458-.005-.87-.47-1.208C10.305 1.558 9.436 0 7 0S3.695 1.558 3.533 3.605c-.465.338-.47.75-.47 1.208 0 .471.352.93.746 1.173.146.384.342.733.566 1.055v.834c-1.176.656-2.929 1.61-3.5 2.16C.165 10.72 0 11.812 0 14h14c0-2.188-.164-3.281-.875-3.965z\" }) });\n}\nvar type_person_2_default = SvgTypePerson2;\n\n// src/icons/type-phone-number.tsx\n\nfunction SvgTypePhoneNumber(props) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"svg\", { viewBox: \"0 0 14 14\", ...props, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"path\", { d: \"M2.207.013a.487.487 0 00-.29.02C.87.438.213 1.93.058 2.955c-.484 3.33 2.15 6.215 4.57 8.113 2.149 1.684 6.273 4.453 8.713 1.781.31-.329.678-.813.658-1.297-.058-.813-.813-1.394-1.394-1.84-.445-.329-1.375-1.239-1.956-1.22-.522.02-.851.562-1.18.891l-.582.581c-.096.097-1.336-.716-1.471-.813a9.881 9.881 0 01-1.414-1.104A9.13 9.13 0 014.86 6.732c-.097-.136-.89-1.317-.813-1.414 0 0 .677-.736.871-1.026.407-.62.717-1.104.252-1.84-.174-.27-.387-.484-.62-.716-.406-.387-.813-.794-1.278-1.123-.251-.194-.677-.542-1.065-.6z\" }) });\n}\nvar type_phone_number_default = SvgTypePhoneNumber;\n\n// src/icons/type-relation.tsx\n\nfunction SvgTypeRelation(props) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"svg\", { viewBox: \"0 0 14 14\", ...props, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"path\", { d: \"M4.5 1v2h5.086L1 11.586 2.414 13 11 4.414V9.5h2V1z\" }) });\n}\nvar type_relation_default = SvgTypeRelation;\n\n// src/icons/type-select.tsx\n\nfunction SvgTypeSelect(props) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"svg\", { viewBox: \"0 0 14 14\", ...props, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"path\", { d: \"M7 13A6 6 0 107 1a6 6 0 000 12zM3.751 5.323A.2.2 0 013.909 5h6.182a.2.2 0 01.158.323L7.158 9.297a.2.2 0 01-.316 0L3.751 5.323z\" }) });\n}\nvar type_select_default = SvgTypeSelect;\n\n// src/icons/type-status.tsx\n\nfunction SvgTypeStatus(props) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"svg\", { viewBox: \"0 0 16 16\", ...props, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"path\", { d: \"M8.75488 1.02344C8.75488 0.613281 8.41309 0.264648 8.00293 0.264648C7.59277 0.264648 7.25098 0.613281 7.25098 1.02344V3.11523C7.25098 3.51855 7.59277 3.86719 8.00293 3.86719C8.41309 3.86719 8.75488 3.51855 8.75488 3.11523V1.02344ZM3.91504 5.0293C4.20215 5.31641 4.69434 5.32324 4.97461 5.03613C5.26855 4.74902 5.26855 4.25684 4.98145 3.96973L3.53906 2.52051C3.25195 2.2334 2.7666 2.21973 2.47949 2.50684C2.19238 2.79395 2.18555 3.28613 2.47266 3.57324L3.91504 5.0293ZM10.9629 4.01758C10.6826 4.30469 10.6826 4.79688 10.9697 5.08398C11.2568 5.37109 11.749 5.36426 12.0361 5.07715L13.4854 3.62793C13.7725 3.34082 13.7725 2.84863 13.4785 2.55469C13.1982 2.27441 12.7061 2.27441 12.4189 2.56152L10.9629 4.01758ZM15.0234 8.78906C15.4336 8.78906 15.7822 8.44727 15.7822 8.03711C15.7822 7.62695 15.4336 7.28516 15.0234 7.28516H12.9385C12.5283 7.28516 12.1797 7.62695 12.1797 8.03711C12.1797 8.44727 12.5283 8.78906 12.9385 8.78906H15.0234ZM0.975586 7.28516C0.56543 7.28516 0.223633 7.62695 0.223633 8.03711C0.223633 8.44727 0.56543 8.78906 0.975586 8.78906H3.07422C3.48438 8.78906 3.83301 8.44727 3.83301 8.03711C3.83301 7.62695 3.48438 7.28516 3.07422 7.28516H0.975586ZM12.0361 10.9902C11.749 10.71 11.2568 10.71 10.9629 10.9971C10.6826 11.2842 10.6826 11.7764 10.9697 12.0635L12.4258 13.5127C12.7129 13.7998 13.2051 13.793 13.4922 13.5059C13.7793 13.2256 13.7725 12.7266 13.4854 12.4395L12.0361 10.9902ZM2.52051 12.4395C2.22656 12.7266 2.22656 13.2188 2.50684 13.5059C2.79395 13.793 3.28613 13.7998 3.57324 13.5127L5.02246 12.0703C5.31641 11.7832 5.31641 11.291 5.03613 11.0039C4.74902 10.7168 4.25684 10.71 3.96973 10.9971L2.52051 12.4395ZM8.75488 12.9658C8.75488 12.5557 8.41309 12.207 8.00293 12.207C7.59277 12.207 7.25098 12.5557 7.25098 12.9658V15.0576C7.25098 15.4609 7.59277 15.8096 8.00293 15.8096C8.41309 15.8096 8.75488 15.4609 8.75488 15.0576V12.9658Z\" }) });\n}\nvar type_status_default = SvgTypeStatus;\n\n// src/icons/type-text.tsx\n\nfunction SvgTypeText(props) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"svg\", { viewBox: \"0 0 14 14\", ...props, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"path\", { d: \"M7 4.568a.5.5 0 00-.5-.5h-6a.5.5 0 00-.5.5v1.046a.5.5 0 00.5.5h6a.5.5 0 00.5-.5V4.568zM.5 1a.5.5 0 00-.5.5v1.045a.5.5 0 00.5.5h12a.5.5 0 00.5-.5V1.5a.5.5 0 00-.5-.5H.5zM0 8.682a.5.5 0 00.5.5h11a.5.5 0 00.5-.5V7.636a.5.5 0 00-.5-.5H.5a.5.5 0 00-.5.5v1.046zm0 3.068a.5.5 0 00.5.5h9a.5.5 0 00.5-.5v-1.045a.5.5 0 00-.5-.5h-9a.5.5 0 00-.5.5v1.045z\" }) });\n}\nvar type_text_default = SvgTypeText;\n\n// src/icons/type-timestamp.tsx\n\nfunction SvgTypeTimestamp(props) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"svg\", { viewBox: \"0 0 14 14\", ...props, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"path\", { d: \"M6.986 14c-1.79 0-3.582-.69-4.944-2.068-2.723-2.72-2.723-7.172 0-9.892 2.725-2.72 7.182-2.72 9.906 0A6.972 6.972 0 0114 6.996c0 1.88-.728 3.633-2.052 4.955A7.058 7.058 0 016.986 14zm3.285-6.99v1.645H5.526v-5.47h1.841v3.63h2.904v.194zm1.89-.014c0-1.379-.542-2.67-1.522-3.648-2.006-2.005-5.287-2.007-7.297-.009l-.009.009a5.168 5.168 0 000 7.295c2.01 2.007 5.297 2.007 7.306 0a5.119 5.119 0 001.521-3.647z\" }) });\n}\nvar type_timestamp_default = SvgTypeTimestamp;\n\n// src/icons/type-title.tsx\n\nfunction SvgTypeTitle(props) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"svg\", { viewBox: \"0 0 14 14\", ...props, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"path\", { d: \"M7.74 8.697a.81.81 0 01.073.308.894.894 0 01-.9.888.867.867 0 01-.825-.592l-.333-.961H2.058l-.333.961a.882.882 0 01-.838.592A.884.884 0 010 9.005c0-.11.025-.222.062-.308l2.403-6.211c.222-.58.776-.986 1.442-.986.653 0 1.22.407 1.442.986l2.39 6.211zM2.6 6.824h2.613L3.907 3.102 2.6 6.824zm8.8-3.118c1.355 0 2.6.542 2.6 2.255V9.08a.8.8 0 01-.789.814.797.797 0 01-.788-.703c-.395.468-1.097.764-1.874.764-.949 0-2.07-.64-2.07-1.972 0-1.392 1.121-1.897 2.07-1.897.789 0 1.491.246 1.886.727v-.826c0-.604-.518-.998-1.306-.998-.469 0-.888.123-1.32.394a.64.64 0 01-.307.086.602.602 0 01-.592-.604c0-.221.123-.419.284-.517a3.963 3.963 0 012.206-.641zm-.222 5.188c.505 0 .998-.172 1.257-.517v-.74c-.259-.345-.752-.517-1.257-.517-.616 0-1.122.332-1.122.9 0 .554.506.874 1.122.874zM.656 11.125h12.688a.656.656 0 110 1.313H.656a.656.656 0 110-1.313z\" }) });\n}\nvar type_title_default = SvgTypeTitle;\n\n// src/icons/type-url.tsx\n\nfunction SvgTypeUrl(props) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"svg\", { viewBox: \"0 0 14 14\", ...props, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"path\", { d: \"M3.733 3.867h3.734c1.03 0 1.866.837 1.866 1.866 0 1.03-.837 1.867-1.866 1.867h-.934a.934.934 0 000 1.867h.934a3.734 3.734 0 000-7.467H3.733A3.73 3.73 0 001.89 8.977a4.637 4.637 0 01.314-2.18 1.854 1.854 0 01-.336-1.064c0-1.03.837-1.866 1.866-1.866zm8.377 1.422a4.6 4.6 0 01-.316 2.176c.212.303.34.67.34 1.068 0 1.03-.838 1.867-1.867 1.867H6.533a1.869 1.869 0 01-1.866-1.867c0-1.03.837-1.866 1.866-1.866h.934a.934.934 0 000-1.867h-.934a3.733 3.733 0 000 7.467h3.734a3.73 3.73 0 001.843-6.978z\" }) });\n}\nvar type_url_default = SvgTypeUrl;\n\n// src/icons/property-icon.tsx\nvar iconMap2 = {\n  title: type_title_default,\n  text: type_text_default,\n  number: type_number_default,\n  select: type_select_default,\n  status: type_status_default,\n  multi_select: type_multi_select_default,\n  date: type_date_default,\n  person: type_person_default,\n  file: type_file_default,\n  checkbox: type_checkbox_default,\n  url: type_url_default,\n  email: type_email_default,\n  phone_number: type_phone_number_default,\n  formula: type_formula_default,\n  relation: type_relation_default,\n  created_time: type_timestamp_default,\n  last_edited_time: type_timestamp_default,\n  created_by: type_person_2_default,\n  last_edited_by: type_person_2_default,\n  auto_increment_id: type_auto_increment_id_default\n};\nfunction PropertyIcon({ type, ...rest }) {\n  const icon = iconMap2[type];\n  if (!icon) return null;\n  return icon(rest);\n}\n\n// src/third-party/collection-column-title.tsx\n\nfunction CollectionColumnTitle({\n  schema\n}) {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\", { className: \"notion-collection-column-title\", children: [\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n      PropertyIcon,\n      {\n        className: \"notion-collection-column-title-icon\",\n        type: schema.type\n      }\n    ),\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"notion-collection-column-title-body\", children: schema.name })\n  ] });\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/locale/en-US/_lib/formatDistance.js\nvar formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"less than a second\",\n    other: \"less than {{count}} seconds\"\n  },\n  xSeconds: {\n    one: \"1 second\",\n    other: \"{{count}} seconds\"\n  },\n  halfAMinute: \"half a minute\",\n  lessThanXMinutes: {\n    one: \"less than a minute\",\n    other: \"less than {{count}} minutes\"\n  },\n  xMinutes: {\n    one: \"1 minute\",\n    other: \"{{count}} minutes\"\n  },\n  aboutXHours: {\n    one: \"about 1 hour\",\n    other: \"about {{count}} hours\"\n  },\n  xHours: {\n    one: \"1 hour\",\n    other: \"{{count}} hours\"\n  },\n  xDays: {\n    one: \"1 day\",\n    other: \"{{count}} days\"\n  },\n  aboutXWeeks: {\n    one: \"about 1 week\",\n    other: \"about {{count}} weeks\"\n  },\n  xWeeks: {\n    one: \"1 week\",\n    other: \"{{count}} weeks\"\n  },\n  aboutXMonths: {\n    one: \"about 1 month\",\n    other: \"about {{count}} months\"\n  },\n  xMonths: {\n    one: \"1 month\",\n    other: \"{{count}} months\"\n  },\n  aboutXYears: {\n    one: \"about 1 year\",\n    other: \"about {{count}} years\"\n  },\n  xYears: {\n    one: \"1 year\",\n    other: \"{{count}} years\"\n  },\n  overXYears: {\n    one: \"over 1 year\",\n    other: \"over {{count}} years\"\n  },\n  almostXYears: {\n    one: \"almost 1 year\",\n    other: \"almost {{count}} years\"\n  }\n};\nvar formatDistance = (token, count, options) => {\n  let result;\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", count.toString());\n  }\n  if (options == null ? void 0 : options.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"in \" + result;\n    } else {\n      return result + \" ago\";\n    }\n  }\n  return result;\n};\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/locale/_lib/buildFormatLongFn.js\nfunction buildFormatLongFn(args) {\n  return (options = {}) => {\n    const width = options.width ? String(options.width) : args.defaultWidth;\n    const format2 = args.formats[width] || args.formats[args.defaultWidth];\n    return format2;\n  };\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/locale/en-US/_lib/formatLong.js\nvar dateFormats = {\n  full: \"EEEE, MMMM do, y\",\n  long: \"MMMM do, y\",\n  medium: \"MMM d, y\",\n  short: \"MM/dd/yyyy\"\n};\nvar timeFormats = {\n  full: \"h:mm:ss a zzzz\",\n  long: \"h:mm:ss a z\",\n  medium: \"h:mm:ss a\",\n  short: \"h:mm a\"\n};\nvar dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\"\n};\nvar formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\"\n  }),\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\"\n  }),\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\"\n  })\n};\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/locale/en-US/_lib/formatRelative.js\nvar formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: \"P\"\n};\nvar formatRelative = (token, _date, _baseDate, _options) => formatRelativeLocale[token];\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/locale/_lib/buildLocalizeFn.js\nfunction buildLocalizeFn(args) {\n  return (value, options) => {\n    const context = (options == null ? void 0 : options.context) ? String(options.context) : \"standalone\";\n    let valuesArray;\n    if (context === \"formatting\" && args.formattingValues) {\n      const defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      const width = (options == null ? void 0 : options.width) ? String(options.width) : defaultWidth;\n      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      const defaultWidth = args.defaultWidth;\n      const width = (options == null ? void 0 : options.width) ? String(options.width) : args.defaultWidth;\n      valuesArray = args.values[width] || args.values[defaultWidth];\n    }\n    const index = args.argumentCallback ? args.argumentCallback(value) : value;\n    return valuesArray[index];\n  };\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/locale/en-US/_lib/localize.js\nvar eraValues = {\n  narrow: [\"B\", \"A\"],\n  abbreviated: [\"BC\", \"AD\"],\n  wide: [\"Before Christ\", \"Anno Domini\"]\n};\nvar quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"1st quarter\", \"2nd quarter\", \"3rd quarter\", \"4th quarter\"]\n};\nvar monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\"\n  ],\n  wide: [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\"\n  ]\n};\nvar dayValues = {\n  narrow: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\n  short: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"],\n  abbreviated: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  wide: [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\"\n  ]\n};\nvar dayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\"\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\"\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\"\n  }\n};\nvar formattingDayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\"\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\"\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\"\n  }\n};\nvar ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n  const rem100 = number % 100;\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + \"st\";\n      case 2:\n        return number + \"nd\";\n      case 3:\n        return number + \"rd\";\n    }\n  }\n  return number + \"th\";\n};\nvar localize = {\n  ordinalNumber,\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\"\n  }),\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1\n  }),\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\"\n  }),\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\"\n  }),\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\"\n  })\n};\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/locale/_lib/buildMatchFn.js\nfunction buildMatchFn(args) {\n  return (string, options = {}) => {\n    const width = options.width;\n    const matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];\n    const matchResult = string.match(matchPattern);\n    if (!matchResult) {\n      return null;\n    }\n    const matchedString = matchResult[0];\n    const parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];\n    const key = Array.isArray(parsePatterns) ? findIndex(parsePatterns, (pattern) => pattern.test(matchedString)) : (\n      // [TODO] -- I challenge you to fix the type\n      findKey(parsePatterns, (pattern) => pattern.test(matchedString))\n    );\n    let value;\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback ? (\n      // [TODO] -- I challenge you to fix the type\n      options.valueCallback(value)\n    ) : value;\n    const rest = string.slice(matchedString.length);\n    return { value, rest };\n  };\n}\nfunction findKey(object, predicate) {\n  for (const key in object) {\n    if (Object.prototype.hasOwnProperty.call(object, key) && predicate(object[key])) {\n      return key;\n    }\n  }\n  return void 0;\n}\nfunction findIndex(array, predicate) {\n  for (let key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n  return void 0;\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/locale/_lib/buildMatchPatternFn.js\nfunction buildMatchPatternFn(args) {\n  return (string, options = {}) => {\n    const matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    const matchedString = matchResult[0];\n    const parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    let value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    const rest = string.slice(matchedString.length);\n    return { value, rest };\n  };\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/locale/en-US/_lib/match.js\nvar matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nvar parseOrdinalNumberPattern = /\\d+/i;\nvar matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i\n};\nvar parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i]\n};\nvar matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i\n};\nvar parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i]\n};\nvar matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i\n};\nvar parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i\n  ],\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^mar/i,\n    /^ap/i,\n    /^may/i,\n    /^jun/i,\n    /^jul/i,\n    /^au/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i\n  ]\n};\nvar matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i\n};\nvar parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]\n};\nvar matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i\n};\nvar parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i\n  }\n};\nvar match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10)\n  }),\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\"\n  }),\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1\n  }),\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\"\n  }),\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\"\n  }),\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\"\n  })\n};\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/locale/en-US.js\nvar enUS = {\n  code: \"en-US\",\n  formatDistance,\n  formatLong,\n  formatRelative,\n  localize,\n  match,\n  options: {\n    weekStartsOn: 0,\n    firstWeekContainsDate: 1\n  }\n};\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/_lib/defaultOptions.js\nvar defaultOptions = {};\nfunction getDefaultOptions() {\n  return defaultOptions;\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/constants.js\nvar daysInYear = 365.2425;\nvar maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1e3;\nvar minTime = -maxTime;\nvar millisecondsInWeek = 6048e5;\nvar millisecondsInDay = 864e5;\nvar millisecondsInMinute = 6e4;\nvar millisecondsInHour = 36e5;\nvar secondsInHour = 3600;\nvar secondsInDay = secondsInHour * 24;\nvar secondsInWeek = secondsInDay * 7;\nvar secondsInYear = secondsInDay * daysInYear;\nvar secondsInMonth = secondsInYear / 12;\nvar secondsInQuarter = secondsInMonth * 3;\nvar constructFromSymbol = Symbol.for(\"constructDateFrom\");\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/constructFrom.js\nfunction constructFrom(date, value) {\n  if (typeof date === \"function\") return date(value);\n  if (date && typeof date === \"object\" && constructFromSymbol in date)\n    return date[constructFromSymbol](value);\n  if (date instanceof Date) return new date.constructor(value);\n  return new Date(value);\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/toDate.js\nfunction toDate(argument, context) {\n  return constructFrom(context || argument, argument);\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds.js\nfunction getTimezoneOffsetInMilliseconds(date) {\n  const _date = toDate(date);\n  const utcDate = new Date(\n    Date.UTC(\n      _date.getFullYear(),\n      _date.getMonth(),\n      _date.getDate(),\n      _date.getHours(),\n      _date.getMinutes(),\n      _date.getSeconds(),\n      _date.getMilliseconds()\n    )\n  );\n  utcDate.setUTCFullYear(_date.getFullYear());\n  return +date - +utcDate;\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/_lib/normalizeDates.js\nfunction normalizeDates(context, ...dates) {\n  const normalize = constructFrom.bind(\n    null,\n    context || dates.find((date) => typeof date === \"object\")\n  );\n  return dates.map(normalize);\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/startOfDay.js\nfunction startOfDay(date, options) {\n  const _date = toDate(date, options == null ? void 0 : options.in);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/differenceInCalendarDays.js\nfunction differenceInCalendarDays(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options == null ? void 0 : options.in,\n    laterDate,\n    earlierDate\n  );\n  const laterStartOfDay = startOfDay(laterDate_);\n  const earlierStartOfDay = startOfDay(earlierDate_);\n  const laterTimestamp = +laterStartOfDay - getTimezoneOffsetInMilliseconds(laterStartOfDay);\n  const earlierTimestamp = +earlierStartOfDay - getTimezoneOffsetInMilliseconds(earlierStartOfDay);\n  return Math.round((laterTimestamp - earlierTimestamp) / millisecondsInDay);\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/startOfYear.js\nfunction startOfYear(date, options) {\n  const date_ = toDate(date, options == null ? void 0 : options.in);\n  date_.setFullYear(date_.getFullYear(), 0, 1);\n  date_.setHours(0, 0, 0, 0);\n  return date_;\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/getDayOfYear.js\nfunction getDayOfYear(date, options) {\n  const _date = toDate(date, options == null ? void 0 : options.in);\n  const diff = differenceInCalendarDays(_date, startOfYear(_date));\n  const dayOfYear = diff + 1;\n  return dayOfYear;\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/startOfWeek.js\nfunction startOfWeek(date, options) {\n  var _a, _b, _c, _d, _e, _f, _g, _h;\n  const defaultOptions2 = getDefaultOptions();\n  const weekStartsOn = (_h = (_g = (_d = (_c = options == null ? void 0 : options.weekStartsOn) != null ? _c : (_b = (_a = options == null ? void 0 : options.locale) == null ? void 0 : _a.options) == null ? void 0 : _b.weekStartsOn) != null ? _d : defaultOptions2.weekStartsOn) != null ? _g : (_f = (_e = defaultOptions2.locale) == null ? void 0 : _e.options) == null ? void 0 : _f.weekStartsOn) != null ? _h : 0;\n  const _date = toDate(date, options == null ? void 0 : options.in);\n  const day = _date.getDay();\n  const diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  _date.setDate(_date.getDate() - diff);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/startOfISOWeek.js\nfunction startOfISOWeek(date, options) {\n  return startOfWeek(date, { ...options, weekStartsOn: 1 });\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/getISOWeekYear.js\nfunction getISOWeekYear(date, options) {\n  const _date = toDate(date, options == null ? void 0 : options.in);\n  const year = _date.getFullYear();\n  const fourthOfJanuaryOfNextYear = constructFrom(_date, 0);\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfISOWeek(fourthOfJanuaryOfNextYear);\n  const fourthOfJanuaryOfThisYear = constructFrom(_date, 0);\n  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfISOWeek(fourthOfJanuaryOfThisYear);\n  if (_date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (_date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/startOfISOWeekYear.js\nfunction startOfISOWeekYear(date, options) {\n  const year = getISOWeekYear(date, options);\n  const fourthOfJanuary = constructFrom((options == null ? void 0 : options.in) || date, 0);\n  fourthOfJanuary.setFullYear(year, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  return startOfISOWeek(fourthOfJanuary);\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/getISOWeek.js\nfunction getISOWeek(date, options) {\n  const _date = toDate(date, options == null ? void 0 : options.in);\n  const diff = +startOfISOWeek(_date) - +startOfISOWeekYear(_date);\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/getWeekYear.js\nfunction getWeekYear(date, options) {\n  var _a, _b, _c, _d, _e, _f, _g, _h;\n  const _date = toDate(date, options == null ? void 0 : options.in);\n  const year = _date.getFullYear();\n  const defaultOptions2 = getDefaultOptions();\n  const firstWeekContainsDate = (_h = (_g = (_d = (_c = options == null ? void 0 : options.firstWeekContainsDate) != null ? _c : (_b = (_a = options == null ? void 0 : options.locale) == null ? void 0 : _a.options) == null ? void 0 : _b.firstWeekContainsDate) != null ? _d : defaultOptions2.firstWeekContainsDate) != null ? _g : (_f = (_e = defaultOptions2.locale) == null ? void 0 : _e.options) == null ? void 0 : _f.firstWeekContainsDate) != null ? _h : 1;\n  const firstWeekOfNextYear = constructFrom((options == null ? void 0 : options.in) || date, 0);\n  firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfWeek(firstWeekOfNextYear, options);\n  const firstWeekOfThisYear = constructFrom((options == null ? void 0 : options.in) || date, 0);\n  firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfWeek(firstWeekOfThisYear, options);\n  if (+_date >= +startOfNextYear) {\n    return year + 1;\n  } else if (+_date >= +startOfThisYear) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/startOfWeekYear.js\nfunction startOfWeekYear(date, options) {\n  var _a, _b, _c, _d, _e, _f, _g, _h;\n  const defaultOptions2 = getDefaultOptions();\n  const firstWeekContainsDate = (_h = (_g = (_d = (_c = options == null ? void 0 : options.firstWeekContainsDate) != null ? _c : (_b = (_a = options == null ? void 0 : options.locale) == null ? void 0 : _a.options) == null ? void 0 : _b.firstWeekContainsDate) != null ? _d : defaultOptions2.firstWeekContainsDate) != null ? _g : (_f = (_e = defaultOptions2.locale) == null ? void 0 : _e.options) == null ? void 0 : _f.firstWeekContainsDate) != null ? _h : 1;\n  const year = getWeekYear(date, options);\n  const firstWeek = constructFrom((options == null ? void 0 : options.in) || date, 0);\n  firstWeek.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setHours(0, 0, 0, 0);\n  const _date = startOfWeek(firstWeek, options);\n  return _date;\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/getWeek.js\nfunction getWeek(date, options) {\n  const _date = toDate(date, options == null ? void 0 : options.in);\n  const diff = +startOfWeek(_date, options) - +startOfWeekYear(_date, options);\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/_lib/addLeadingZeros.js\nfunction addLeadingZeros(number, targetLength) {\n  const sign = number < 0 ? \"-\" : \"\";\n  const output = Math.abs(number).toString().padStart(targetLength, \"0\");\n  return sign + output;\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/_lib/format/lightFormatters.js\nvar lightFormatters = {\n  // Year\n  y(date, token) {\n    const signedYear = date.getFullYear();\n    const year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === \"yy\" ? year % 100 : year, token.length);\n  },\n  // Month\n  M(date, token) {\n    const month = date.getMonth();\n    return token === \"M\" ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n  // Day of the month\n  d(date, token) {\n    return addLeadingZeros(date.getDate(), token.length);\n  },\n  // AM or PM\n  a(date, token) {\n    const dayPeriodEnumValue = date.getHours() / 12 >= 1 ? \"pm\" : \"am\";\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return dayPeriodEnumValue.toUpperCase();\n      case \"aaa\":\n        return dayPeriodEnumValue;\n      case \"aaaaa\":\n        return dayPeriodEnumValue[0];\n      case \"aaaa\":\n      default:\n        return dayPeriodEnumValue === \"am\" ? \"a.m.\" : \"p.m.\";\n    }\n  },\n  // Hour [1-12]\n  h(date, token) {\n    return addLeadingZeros(date.getHours() % 12 || 12, token.length);\n  },\n  // Hour [0-23]\n  H(date, token) {\n    return addLeadingZeros(date.getHours(), token.length);\n  },\n  // Minute\n  m(date, token) {\n    return addLeadingZeros(date.getMinutes(), token.length);\n  },\n  // Second\n  s(date, token) {\n    return addLeadingZeros(date.getSeconds(), token.length);\n  },\n  // Fraction of second\n  S(date, token) {\n    const numberOfDigits = token.length;\n    const milliseconds = date.getMilliseconds();\n    const fractionalSeconds = Math.trunc(\n      milliseconds * Math.pow(10, numberOfDigits - 3)\n    );\n    return addLeadingZeros(fractionalSeconds, token.length);\n  }\n};\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/_lib/format/formatters.js\nvar dayPeriodEnum = {\n  am: \"am\",\n  pm: \"pm\",\n  midnight: \"midnight\",\n  noon: \"noon\",\n  morning: \"morning\",\n  afternoon: \"afternoon\",\n  evening: \"evening\",\n  night: \"night\"\n};\nvar formatters = {\n  // Era\n  G: function(date, token, localize2) {\n    const era = date.getFullYear() > 0 ? 1 : 0;\n    switch (token) {\n      // AD, BC\n      case \"G\":\n      case \"GG\":\n      case \"GGG\":\n        return localize2.era(era, { width: \"abbreviated\" });\n      // A, B\n      case \"GGGGG\":\n        return localize2.era(era, { width: \"narrow\" });\n      // Anno Domini, Before Christ\n      case \"GGGG\":\n      default:\n        return localize2.era(era, { width: \"wide\" });\n    }\n  },\n  // Year\n  y: function(date, token, localize2) {\n    if (token === \"yo\") {\n      const signedYear = date.getFullYear();\n      const year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize2.ordinalNumber(year, { unit: \"year\" });\n    }\n    return lightFormatters.y(date, token);\n  },\n  // Local week-numbering year\n  Y: function(date, token, localize2, options) {\n    const signedWeekYear = getWeekYear(date, options);\n    const weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;\n    if (token === \"YY\") {\n      const twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    }\n    if (token === \"Yo\") {\n      return localize2.ordinalNumber(weekYear, { unit: \"year\" });\n    }\n    return addLeadingZeros(weekYear, token.length);\n  },\n  // ISO week-numbering year\n  R: function(date, token) {\n    const isoWeekYear = getISOWeekYear(date);\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function(date, token) {\n    const year = date.getFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n  // Quarter\n  Q: function(date, token, localize2) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"Q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"QQ\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"Qo\":\n        return localize2.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"QQQ\":\n        return localize2.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"formatting\"\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"QQQQQ\":\n        return localize2.quarter(quarter, {\n          width: \"narrow\",\n          context: \"formatting\"\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"QQQQ\":\n      default:\n        return localize2.quarter(quarter, {\n          width: \"wide\",\n          context: \"formatting\"\n        });\n    }\n  },\n  // Stand-alone quarter\n  q: function(date, token, localize2) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"qq\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"qo\":\n        return localize2.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"qqq\":\n        return localize2.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"standalone\"\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"qqqqq\":\n        return localize2.quarter(quarter, {\n          width: \"narrow\",\n          context: \"standalone\"\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"qqqq\":\n      default:\n        return localize2.quarter(quarter, {\n          width: \"wide\",\n          context: \"standalone\"\n        });\n    }\n  },\n  // Month\n  M: function(date, token, localize2) {\n    const month = date.getMonth();\n    switch (token) {\n      case \"M\":\n      case \"MM\":\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n      case \"Mo\":\n        return localize2.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"MMM\":\n        return localize2.month(month, {\n          width: \"abbreviated\",\n          context: \"formatting\"\n        });\n      // J, F, ..., D\n      case \"MMMMM\":\n        return localize2.month(month, {\n          width: \"narrow\",\n          context: \"formatting\"\n        });\n      // January, February, ..., December\n      case \"MMMM\":\n      default:\n        return localize2.month(month, { width: \"wide\", context: \"formatting\" });\n    }\n  },\n  // Stand-alone month\n  L: function(date, token, localize2) {\n    const month = date.getMonth();\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"L\":\n        return String(month + 1);\n      // 01, 02, ..., 12\n      case \"LL\":\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n      case \"Lo\":\n        return localize2.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"LLL\":\n        return localize2.month(month, {\n          width: \"abbreviated\",\n          context: \"standalone\"\n        });\n      // J, F, ..., D\n      case \"LLLLL\":\n        return localize2.month(month, {\n          width: \"narrow\",\n          context: \"standalone\"\n        });\n      // January, February, ..., December\n      case \"LLLL\":\n      default:\n        return localize2.month(month, { width: \"wide\", context: \"standalone\" });\n    }\n  },\n  // Local week of year\n  w: function(date, token, localize2, options) {\n    const week = getWeek(date, options);\n    if (token === \"wo\") {\n      return localize2.ordinalNumber(week, { unit: \"week\" });\n    }\n    return addLeadingZeros(week, token.length);\n  },\n  // ISO week of year\n  I: function(date, token, localize2) {\n    const isoWeek = getISOWeek(date);\n    if (token === \"Io\") {\n      return localize2.ordinalNumber(isoWeek, { unit: \"week\" });\n    }\n    return addLeadingZeros(isoWeek, token.length);\n  },\n  // Day of the month\n  d: function(date, token, localize2) {\n    if (token === \"do\") {\n      return localize2.ordinalNumber(date.getDate(), { unit: \"date\" });\n    }\n    return lightFormatters.d(date, token);\n  },\n  // Day of year\n  D: function(date, token, localize2) {\n    const dayOfYear = getDayOfYear(date);\n    if (token === \"Do\") {\n      return localize2.ordinalNumber(dayOfYear, { unit: \"dayOfYear\" });\n    }\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n  // Day of week\n  E: function(date, token, localize2) {\n    const dayOfWeek = date.getDay();\n    switch (token) {\n      // Tue\n      case \"E\":\n      case \"EE\":\n      case \"EEE\":\n        return localize2.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\"\n        });\n      // T\n      case \"EEEEE\":\n        return localize2.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\"\n        });\n      // Tu\n      case \"EEEEEE\":\n        return localize2.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\"\n        });\n      // Tuesday\n      case \"EEEE\":\n      default:\n        return localize2.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\"\n        });\n    }\n  },\n  // Local day of week\n  e: function(date, token, localize2, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case \"e\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"ee\":\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n      case \"eo\":\n        return localize2.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"eee\":\n        return localize2.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\"\n        });\n      // T\n      case \"eeeee\":\n        return localize2.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\"\n        });\n      // Tu\n      case \"eeeeee\":\n        return localize2.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\"\n        });\n      // Tuesday\n      case \"eeee\":\n      default:\n        return localize2.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\"\n        });\n    }\n  },\n  // Stand-alone local day of week\n  c: function(date, token, localize2, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case \"c\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"cc\":\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n      case \"co\":\n        return localize2.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"ccc\":\n        return localize2.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"standalone\"\n        });\n      // T\n      case \"ccccc\":\n        return localize2.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"standalone\"\n        });\n      // Tu\n      case \"cccccc\":\n        return localize2.day(dayOfWeek, {\n          width: \"short\",\n          context: \"standalone\"\n        });\n      // Tuesday\n      case \"cccc\":\n      default:\n        return localize2.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"standalone\"\n        });\n    }\n  },\n  // ISO day of week\n  i: function(date, token, localize2) {\n    const dayOfWeek = date.getDay();\n    const isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n    switch (token) {\n      // 2\n      case \"i\":\n        return String(isoDayOfWeek);\n      // 02\n      case \"ii\":\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n      case \"io\":\n        return localize2.ordinalNumber(isoDayOfWeek, { unit: \"day\" });\n      // Tue\n      case \"iii\":\n        return localize2.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\"\n        });\n      // T\n      case \"iiiii\":\n        return localize2.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\"\n        });\n      // Tu\n      case \"iiiiii\":\n        return localize2.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\"\n        });\n      // Tuesday\n      case \"iiii\":\n      default:\n        return localize2.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\"\n        });\n    }\n  },\n  // AM or PM\n  a: function(date, token, localize2) {\n    const hours = date.getHours();\n    const dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return localize2.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\"\n        });\n      case \"aaa\":\n        return localize2.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\"\n        }).toLowerCase();\n      case \"aaaaa\":\n        return localize2.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\"\n        });\n      case \"aaaa\":\n      default:\n        return localize2.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\"\n        });\n    }\n  },\n  // AM, PM, midnight, noon\n  b: function(date, token, localize2) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n    }\n    switch (token) {\n      case \"b\":\n      case \"bb\":\n        return localize2.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\"\n        });\n      case \"bbb\":\n        return localize2.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\"\n        }).toLowerCase();\n      case \"bbbbb\":\n        return localize2.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\"\n        });\n      case \"bbbb\":\n      default:\n        return localize2.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\"\n        });\n    }\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: function(date, token, localize2) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n    switch (token) {\n      case \"B\":\n      case \"BB\":\n      case \"BBB\":\n        return localize2.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\"\n        });\n      case \"BBBBB\":\n        return localize2.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\"\n        });\n      case \"BBBB\":\n      default:\n        return localize2.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\"\n        });\n    }\n  },\n  // Hour [1-12]\n  h: function(date, token, localize2) {\n    if (token === \"ho\") {\n      let hours = date.getHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize2.ordinalNumber(hours, { unit: \"hour\" });\n    }\n    return lightFormatters.h(date, token);\n  },\n  // Hour [0-23]\n  H: function(date, token, localize2) {\n    if (token === \"Ho\") {\n      return localize2.ordinalNumber(date.getHours(), { unit: \"hour\" });\n    }\n    return lightFormatters.H(date, token);\n  },\n  // Hour [0-11]\n  K: function(date, token, localize2) {\n    const hours = date.getHours() % 12;\n    if (token === \"Ko\") {\n      return localize2.ordinalNumber(hours, { unit: \"hour\" });\n    }\n    return addLeadingZeros(hours, token.length);\n  },\n  // Hour [1-24]\n  k: function(date, token, localize2) {\n    let hours = date.getHours();\n    if (hours === 0) hours = 24;\n    if (token === \"ko\") {\n      return localize2.ordinalNumber(hours, { unit: \"hour\" });\n    }\n    return addLeadingZeros(hours, token.length);\n  },\n  // Minute\n  m: function(date, token, localize2) {\n    if (token === \"mo\") {\n      return localize2.ordinalNumber(date.getMinutes(), { unit: \"minute\" });\n    }\n    return lightFormatters.m(date, token);\n  },\n  // Second\n  s: function(date, token, localize2) {\n    if (token === \"so\") {\n      return localize2.ordinalNumber(date.getSeconds(), { unit: \"second\" });\n    }\n    return lightFormatters.s(date, token);\n  },\n  // Fraction of second\n  S: function(date, token) {\n    return lightFormatters.S(date, token);\n  },\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function(date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n    if (timezoneOffset === 0) {\n      return \"Z\";\n    }\n    switch (token) {\n      // Hours and optional minutes\n      case \"X\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n      case \"XXXX\":\n      case \"XX\":\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n      case \"XXXXX\":\n      case \"XXX\":\n      // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function(date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n    switch (token) {\n      // Hours and optional minutes\n      case \"x\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n      case \"xxxx\":\n      case \"xx\":\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n      case \"xxxxx\":\n      case \"xxx\":\n      // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n  // Timezone (GMT)\n  O: function(date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n    switch (token) {\n      // Short\n      case \"O\":\n      case \"OO\":\n      case \"OOO\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"OOOO\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n  // Timezone (specific non-location)\n  z: function(date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n    switch (token) {\n      // Short\n      case \"z\":\n      case \"zz\":\n      case \"zzz\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"zzzz\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n  // Seconds timestamp\n  t: function(date, token, _localize) {\n    const timestamp = Math.trunc(+date / 1e3);\n    return addLeadingZeros(timestamp, token.length);\n  },\n  // Milliseconds timestamp\n  T: function(date, token, _localize) {\n    return addLeadingZeros(+date, token.length);\n  }\n};\nfunction formatTimezoneShort(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = Math.trunc(absOffset / 60);\n  const minutes = absOffset % 60;\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\nfunction formatTimezoneWithOptionalMinutes(offset, delimiter) {\n  if (offset % 60 === 0) {\n    const sign = offset > 0 ? \"-\" : \"+\";\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n  return formatTimezone(offset, delimiter);\n}\nfunction formatTimezone(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = addLeadingZeros(Math.trunc(absOffset / 60), 2);\n  const minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/_lib/format/longFormatters.js\nvar dateLongFormatter = (pattern, formatLong2) => {\n  switch (pattern) {\n    case \"P\":\n      return formatLong2.date({ width: \"short\" });\n    case \"PP\":\n      return formatLong2.date({ width: \"medium\" });\n    case \"PPP\":\n      return formatLong2.date({ width: \"long\" });\n    case \"PPPP\":\n    default:\n      return formatLong2.date({ width: \"full\" });\n  }\n};\nvar timeLongFormatter = (pattern, formatLong2) => {\n  switch (pattern) {\n    case \"p\":\n      return formatLong2.time({ width: \"short\" });\n    case \"pp\":\n      return formatLong2.time({ width: \"medium\" });\n    case \"ppp\":\n      return formatLong2.time({ width: \"long\" });\n    case \"pppp\":\n    default:\n      return formatLong2.time({ width: \"full\" });\n  }\n};\nvar dateTimeLongFormatter = (pattern, formatLong2) => {\n  const matchResult = pattern.match(/(P+)(p+)?/) || [];\n  const datePattern = matchResult[1];\n  const timePattern = matchResult[2];\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong2);\n  }\n  let dateTimeFormat;\n  switch (datePattern) {\n    case \"P\":\n      dateTimeFormat = formatLong2.dateTime({ width: \"short\" });\n      break;\n    case \"PP\":\n      dateTimeFormat = formatLong2.dateTime({ width: \"medium\" });\n      break;\n    case \"PPP\":\n      dateTimeFormat = formatLong2.dateTime({ width: \"long\" });\n      break;\n    case \"PPPP\":\n    default:\n      dateTimeFormat = formatLong2.dateTime({ width: \"full\" });\n      break;\n  }\n  return dateTimeFormat.replace(\"{{date}}\", dateLongFormatter(datePattern, formatLong2)).replace(\"{{time}}\", timeLongFormatter(timePattern, formatLong2));\n};\nvar longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter\n};\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/_lib/protectedTokens.js\nvar dayOfYearTokenRE = /^D+$/;\nvar weekYearTokenRE = /^Y+$/;\nvar throwTokens = [\"D\", \"DD\", \"YY\", \"YYYY\"];\nfunction isProtectedDayOfYearToken(token) {\n  return dayOfYearTokenRE.test(token);\n}\nfunction isProtectedWeekYearToken(token) {\n  return weekYearTokenRE.test(token);\n}\nfunction warnOrThrowProtectedError(token, format2, input) {\n  const _message = message(token, format2, input);\n  console.warn(_message);\n  if (throwTokens.includes(token)) throw new RangeError(_message);\n}\nfunction message(token, format2, input) {\n  const subject = token[0] === \"Y\" ? \"years\" : \"days of the month\";\n  return `Use \\`${token.toLowerCase()}\\` instead of \\`${token}\\` (in \\`${format2}\\`) for formatting ${subject} to the input \\`${input}\\`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md`;\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/isDate.js\nfunction isDate(value) {\n  return value instanceof Date || typeof value === \"object\" && Object.prototype.toString.call(value) === \"[object Date]\";\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/isValid.js\nfunction isValid(date) {\n  return !(!isDate(date) && typeof date !== \"number\" || isNaN(+toDate(date)));\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/format.js\nvar formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\nvar longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\nfunction format(date, formatStr, options) {\n  var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j, _k, _l, _m, _n, _o, _p, _q, _r;\n  const defaultOptions2 = getDefaultOptions();\n  const locale = (_b = (_a = options == null ? void 0 : options.locale) != null ? _a : defaultOptions2.locale) != null ? _b : enUS;\n  const firstWeekContainsDate = (_j = (_i = (_f = (_e = options == null ? void 0 : options.firstWeekContainsDate) != null ? _e : (_d = (_c = options == null ? void 0 : options.locale) == null ? void 0 : _c.options) == null ? void 0 : _d.firstWeekContainsDate) != null ? _f : defaultOptions2.firstWeekContainsDate) != null ? _i : (_h = (_g = defaultOptions2.locale) == null ? void 0 : _g.options) == null ? void 0 : _h.firstWeekContainsDate) != null ? _j : 1;\n  const weekStartsOn = (_r = (_q = (_n = (_m = options == null ? void 0 : options.weekStartsOn) != null ? _m : (_l = (_k = options == null ? void 0 : options.locale) == null ? void 0 : _k.options) == null ? void 0 : _l.weekStartsOn) != null ? _n : defaultOptions2.weekStartsOn) != null ? _q : (_p = (_o = defaultOptions2.locale) == null ? void 0 : _o.options) == null ? void 0 : _p.weekStartsOn) != null ? _r : 0;\n  const originalDate = toDate(date, options == null ? void 0 : options.in);\n  if (!isValid(originalDate)) {\n    throw new RangeError(\"Invalid time value\");\n  }\n  let parts = formatStr.match(longFormattingTokensRegExp).map((substring) => {\n    const firstCharacter = substring[0];\n    if (firstCharacter === \"p\" || firstCharacter === \"P\") {\n      const longFormatter = longFormatters[firstCharacter];\n      return longFormatter(substring, locale.formatLong);\n    }\n    return substring;\n  }).join(\"\").match(formattingTokensRegExp).map((substring) => {\n    if (substring === \"''\") {\n      return { isToken: false, value: \"'\" };\n    }\n    const firstCharacter = substring[0];\n    if (firstCharacter === \"'\") {\n      return { isToken: false, value: cleanEscapedString(substring) };\n    }\n    if (formatters[firstCharacter]) {\n      return { isToken: true, value: substring };\n    }\n    if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n      throw new RangeError(\n        \"Format string contains an unescaped latin alphabet character `\" + firstCharacter + \"`\"\n      );\n    }\n    return { isToken: false, value: substring };\n  });\n  if (locale.localize.preprocessor) {\n    parts = locale.localize.preprocessor(originalDate, parts);\n  }\n  const formatterOptions = {\n    firstWeekContainsDate,\n    weekStartsOn,\n    locale\n  };\n  return parts.map((part) => {\n    if (!part.isToken) return part.value;\n    const token = part.value;\n    if (!(options == null ? void 0 : options.useAdditionalWeekYearTokens) && isProtectedWeekYearToken(token) || !(options == null ? void 0 : options.useAdditionalDayOfYearTokens) && isProtectedDayOfYearToken(token)) {\n      warnOrThrowProtectedError(token, formatStr, String(date));\n    }\n    const formatter = formatters[token[0]];\n    return formatter(originalDate, token, locale.localize, formatterOptions);\n  }).join(\"\");\n}\nfunction cleanEscapedString(input) {\n  const matched = input.match(escapedStringRegExp);\n  if (!matched) {\n    return input;\n  }\n  return matched[1].replace(doubleQuoteRegExp, \"'\");\n}\n\n// src/third-party/property.tsx\nvar import_format_number = __toESM(require_format_number(), 1);\n\n\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/addDays.js\nfunction addDays(date, amount, options) {\n  const _date = toDate(date, options == null ? void 0 : options.in);\n  if (isNaN(amount)) return constructFrom((options == null ? void 0 : options.in) || date, NaN);\n  if (!amount) return _date;\n  _date.setDate(_date.getDate() + amount);\n  return _date;\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/addMonths.js\nfunction addMonths(date, amount, options) {\n  const _date = toDate(date, options == null ? void 0 : options.in);\n  if (isNaN(amount)) return constructFrom((options == null ? void 0 : options.in) || date, NaN);\n  if (!amount) {\n    return _date;\n  }\n  const dayOfMonth = _date.getDate();\n  const endOfDesiredMonth = constructFrom((options == null ? void 0 : options.in) || date, _date.getTime());\n  endOfDesiredMonth.setMonth(_date.getMonth() + amount + 1, 0);\n  const daysInMonth = endOfDesiredMonth.getDate();\n  if (dayOfMonth >= daysInMonth) {\n    return endOfDesiredMonth;\n  } else {\n    _date.setFullYear(\n      endOfDesiredMonth.getFullYear(),\n      endOfDesiredMonth.getMonth(),\n      dayOfMonth\n    );\n    return _date;\n  }\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/add.js\nfunction add(date, duration, options) {\n  const {\n    years = 0,\n    months = 0,\n    weeks = 0,\n    days = 0,\n    hours = 0,\n    minutes = 0,\n    seconds = 0\n  } = duration;\n  const _date = toDate(date, options == null ? void 0 : options.in);\n  const dateWithMonths = months || years ? addMonths(_date, months + years * 12) : _date;\n  const dateWithDays = days || weeks ? addDays(dateWithMonths, days + weeks * 7) : dateWithMonths;\n  const minutesToAdd = minutes + hours * 60;\n  const secondsToAdd = seconds + minutesToAdd * 60;\n  const msToAdd = secondsToAdd * 1e3;\n  return constructFrom((options == null ? void 0 : options.in) || date, +dateWithDays + msToAdd);\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/getDate.js\nfunction getDate(date, options) {\n  return toDate(date, options == null ? void 0 : options.in).getDate();\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/getDay.js\nfunction getDay(date, options) {\n  return toDate(date, options == null ? void 0 : options.in).getDay();\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/getHours.js\nfunction getHours(date, options) {\n  return toDate(date, options == null ? void 0 : options.in).getHours();\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/getMinutes.js\nfunction getMinutes(date, options) {\n  return toDate(date, options == null ? void 0 : options.in).getMinutes();\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/getMonth.js\nfunction getMonth(date, options) {\n  return toDate(date, options == null ? void 0 : options.in).getMonth();\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/getYear.js\nfunction getYear(date, options) {\n  return toDate(date, options == null ? void 0 : options.in).getFullYear();\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/_lib/normalizeInterval.js\nfunction normalizeInterval(context, interval) {\n  const [start, end] = normalizeDates(context, interval.start, interval.end);\n  return { start, end };\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/differenceInDays.js\nfunction differenceInDays(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options == null ? void 0 : options.in,\n    laterDate,\n    earlierDate\n  );\n  const sign = compareLocalAsc(laterDate_, earlierDate_);\n  const difference = Math.abs(\n    differenceInCalendarDays(laterDate_, earlierDate_)\n  );\n  laterDate_.setDate(laterDate_.getDate() - sign * difference);\n  const isLastDayNotFull = Number(\n    compareLocalAsc(laterDate_, earlierDate_) === -sign\n  );\n  const result = sign * (difference - isLastDayNotFull);\n  return result === 0 ? 0 : result;\n}\nfunction compareLocalAsc(laterDate, earlierDate) {\n  const diff = laterDate.getFullYear() - earlierDate.getFullYear() || laterDate.getMonth() - earlierDate.getMonth() || laterDate.getDate() - earlierDate.getDate() || laterDate.getHours() - earlierDate.getHours() || laterDate.getMinutes() - earlierDate.getMinutes() || laterDate.getSeconds() - earlierDate.getSeconds() || laterDate.getMilliseconds() - earlierDate.getMilliseconds();\n  if (diff < 0) return -1;\n  if (diff > 0) return 1;\n  return diff;\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/_lib/getRoundingMethod.js\nfunction getRoundingMethod(method) {\n  return (number) => {\n    const round = method ? Math[method] : Math.trunc;\n    const result = round(number);\n    return result === 0 ? 0 : result;\n  };\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/differenceInHours.js\nfunction differenceInHours(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options == null ? void 0 : options.in,\n    laterDate,\n    earlierDate\n  );\n  const diff = (+laterDate_ - +earlierDate_) / millisecondsInHour;\n  return getRoundingMethod(options == null ? void 0 : options.roundingMethod)(diff);\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/differenceInMilliseconds.js\nfunction differenceInMilliseconds(laterDate, earlierDate) {\n  return +toDate(laterDate) - +toDate(earlierDate);\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/differenceInMinutes.js\nfunction differenceInMinutes(dateLeft, dateRight, options) {\n  const diff = differenceInMilliseconds(dateLeft, dateRight) / millisecondsInMinute;\n  return getRoundingMethod(options == null ? void 0 : options.roundingMethod)(diff);\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/compareAsc.js\nfunction compareAsc(dateLeft, dateRight) {\n  const diff = +toDate(dateLeft) - +toDate(dateRight);\n  if (diff < 0) return -1;\n  else if (diff > 0) return 1;\n  return diff;\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/differenceInCalendarMonths.js\nfunction differenceInCalendarMonths(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options == null ? void 0 : options.in,\n    laterDate,\n    earlierDate\n  );\n  const yearsDiff = laterDate_.getFullYear() - earlierDate_.getFullYear();\n  const monthsDiff = laterDate_.getMonth() - earlierDate_.getMonth();\n  return yearsDiff * 12 + monthsDiff;\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/endOfDay.js\nfunction endOfDay(date, options) {\n  const _date = toDate(date, options == null ? void 0 : options.in);\n  _date.setHours(23, 59, 59, 999);\n  return _date;\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/endOfMonth.js\nfunction endOfMonth(date, options) {\n  const _date = toDate(date, options == null ? void 0 : options.in);\n  const month = _date.getMonth();\n  _date.setFullYear(_date.getFullYear(), month + 1, 0);\n  _date.setHours(23, 59, 59, 999);\n  return _date;\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/isLastDayOfMonth.js\nfunction isLastDayOfMonth(date, options) {\n  const _date = toDate(date, options == null ? void 0 : options.in);\n  return +endOfDay(_date, options) === +endOfMonth(_date, options);\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/differenceInMonths.js\nfunction differenceInMonths(laterDate, earlierDate, options) {\n  const [laterDate_, workingLaterDate, earlierDate_] = normalizeDates(\n    options == null ? void 0 : options.in,\n    laterDate,\n    laterDate,\n    earlierDate\n  );\n  const sign = compareAsc(workingLaterDate, earlierDate_);\n  const difference = Math.abs(\n    differenceInCalendarMonths(workingLaterDate, earlierDate_)\n  );\n  if (difference < 1) return 0;\n  if (workingLaterDate.getMonth() === 1 && workingLaterDate.getDate() > 27)\n    workingLaterDate.setDate(30);\n  workingLaterDate.setMonth(workingLaterDate.getMonth() - sign * difference);\n  let isLastMonthNotFull = compareAsc(workingLaterDate, earlierDate_) === -sign;\n  if (isLastDayOfMonth(laterDate_) && difference === 1 && compareAsc(laterDate_, earlierDate_) === 1) {\n    isLastMonthNotFull = false;\n  }\n  const result = sign * (difference - +isLastMonthNotFull);\n  return result === 0 ? 0 : result;\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/differenceInSeconds.js\nfunction differenceInSeconds(laterDate, earlierDate, options) {\n  const diff = differenceInMilliseconds(laterDate, earlierDate) / 1e3;\n  return getRoundingMethod(options == null ? void 0 : options.roundingMethod)(diff);\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/differenceInCalendarYears.js\nfunction differenceInCalendarYears(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options == null ? void 0 : options.in,\n    laterDate,\n    earlierDate\n  );\n  return laterDate_.getFullYear() - earlierDate_.getFullYear();\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/differenceInYears.js\nfunction differenceInYears(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options == null ? void 0 : options.in,\n    laterDate,\n    earlierDate\n  );\n  const sign = compareAsc(laterDate_, earlierDate_);\n  const diff = Math.abs(differenceInCalendarYears(laterDate_, earlierDate_));\n  laterDate_.setFullYear(1584);\n  earlierDate_.setFullYear(1584);\n  const partial = compareAsc(laterDate_, earlierDate_) === -sign;\n  const result = sign * (diff - +partial);\n  return result === 0 ? 0 : result;\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/intervalToDuration.js\nfunction intervalToDuration(interval, options) {\n  const { start, end } = normalizeInterval(options == null ? void 0 : options.in, interval);\n  const duration = {};\n  const years = differenceInYears(end, start);\n  if (years) duration.years = years;\n  const remainingMonths = add(start, { years: duration.years });\n  const months = differenceInMonths(end, remainingMonths);\n  if (months) duration.months = months;\n  const remainingDays = add(remainingMonths, { months: duration.months });\n  const days = differenceInDays(end, remainingDays);\n  if (days) duration.days = days;\n  const remainingHours = add(remainingDays, { days: duration.days });\n  const hours = differenceInHours(end, remainingHours);\n  if (hours) duration.hours = hours;\n  const remainingMinutes = add(remainingHours, { hours: duration.hours });\n  const minutes = differenceInMinutes(end, remainingMinutes);\n  if (minutes) duration.minutes = minutes;\n  const remainingSeconds = add(remainingMinutes, { minutes: duration.minutes });\n  const seconds = differenceInSeconds(end, remainingSeconds);\n  if (seconds) duration.seconds = seconds;\n  return duration;\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/subDays.js\nfunction subDays(date, amount, options) {\n  return addDays(date, -amount, options);\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/subMonths.js\nfunction subMonths(date, amount, options) {\n  return addMonths(date, -amount, options);\n}\n\n// ../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/sub.js\nfunction sub(date, duration, options) {\n  const {\n    years = 0,\n    months = 0,\n    weeks = 0,\n    days = 0,\n    hours = 0,\n    minutes = 0,\n    seconds = 0\n  } = duration;\n  const withoutMonths = subMonths(date, months + years * 12, options);\n  const withoutDays = subDays(withoutMonths, days + weeks * 7, options);\n  const minutesToSub = minutes + hours * 60;\n  const secondsToSub = seconds + minutesToSub * 60;\n  const msToSub = secondsToSub * 1e3;\n  return constructFrom((options == null ? void 0 : options.in) || date, +withoutDays - msToSub);\n}\n\n// src/third-party/eval-formula.ts\n\nfunction evalFormula(formula, context) {\n  const { endDate, ...ctx2 } = context;\n  switch (formula == null ? void 0 : formula.type) {\n    case \"symbol\":\n      return formula.name === \"true\";\n    case \"constant\": {\n      const value = formula.value;\n      switch (formula.result_type) {\n        case \"text\":\n          return value;\n        case \"number\":\n          return Number.parseFloat(value);\n        default:\n          return value;\n      }\n    }\n    case \"property\": {\n      const value = ctx2.properties[formula.id];\n      const text = (0,notion_utils__WEBPACK_IMPORTED_MODULE_3__.getTextContent)(value);\n      switch (formula.result_type) {\n        case \"text\":\n          return text;\n        case \"number\":\n          return Number.parseFloat(text);\n        case \"boolean\":\n          if (typeof text === \"string\") {\n            return text === \"true\";\n          } else {\n            return !!text;\n          }\n        case \"date\": {\n          const v = (0,notion_utils__WEBPACK_IMPORTED_MODULE_3__.getDateValue)(value);\n          if (v) {\n            if (endDate && v.end_date) {\n              const date = new Date(v.end_date);\n              return new Date(\n                date.getUTCFullYear(),\n                date.getUTCMonth(),\n                date.getUTCDate()\n              );\n            } else {\n              const date = new Date(v.start_date);\n              return new Date(\n                date.getUTCFullYear(),\n                date.getUTCMonth(),\n                date.getUTCDate()\n              );\n            }\n          } else {\n            return new Date(text);\n          }\n        }\n        default:\n          return text;\n      }\n    }\n    case \"operator\":\n    // All operators are exposed as functions, so we handle them the same\n    // eslint-disable-next-line no-fallthrough\n    case \"function\":\n      return evalFunctionFormula(formula, ctx2);\n    default:\n      throw new Error(\n        `invalid or unsupported formula \"${formula == null ? void 0 : formula.type}`\n      );\n  }\n}\nfunction evalFunctionFormula(formula, ctx2) {\n  const args = formula == null ? void 0 : formula.args;\n  switch (formula.name) {\n    // logic\n    // ------------------------------------------------------------------------\n    case \"and\":\n      return evalFormula(args[0], ctx2) && evalFormula(args[1], ctx2);\n    case \"empty\":\n      return !evalFormula(args[0], ctx2);\n    case \"equal\":\n      return evalFormula(args[0], ctx2) == evalFormula(args[1], ctx2);\n    case \"if\":\n      return evalFormula(args[0], ctx2) ? evalFormula(args[1], ctx2) : evalFormula(args[2], ctx2);\n    case \"larger\":\n      return evalFormula(args[0], ctx2) > evalFormula(args[1], ctx2);\n    case \"largerEq\":\n      return evalFormula(args[0], ctx2) >= evalFormula(args[1], ctx2);\n    case \"not\":\n      return !evalFormula(args[0], ctx2);\n    case \"or\":\n      return evalFormula(args[0], ctx2) || evalFormula(args[1], ctx2);\n    case \"smaller\":\n      return evalFormula(args[0], ctx2) < evalFormula(args[1], ctx2);\n    case \"smallerEq\":\n      return evalFormula(args[0], ctx2) <= evalFormula(args[1], ctx2);\n    case \"unequal\":\n      return evalFormula(args[0], ctx2) != evalFormula(args[1], ctx2);\n    // numeric\n    // ------------------------------------------------------------------------\n    case \"abs\":\n      return Math.abs(evalFormula(args[0], ctx2));\n    case \"add\": {\n      const v0 = evalFormula(args[0], ctx2);\n      const v1 = evalFormula(args[1], ctx2);\n      if (typeof v0 === \"number\") {\n        return v0 + +v1;\n      } else if (typeof v0 === \"string\") {\n        return v0 + `${v1}`;\n      } else {\n        return v0;\n      }\n    }\n    case \"cbrt\":\n      return Math.cbrt(evalFormula(args[0], ctx2));\n    case \"ceil\":\n      return Math.ceil(evalFormula(args[0], ctx2));\n    case \"divide\":\n      return evalFormula(args[0], ctx2) / evalFormula(args[1], ctx2);\n    case \"exp\":\n      return Math.exp(evalFormula(args[0], ctx2));\n    case \"floor\":\n      return Math.floor(evalFormula(args[0], ctx2));\n    case \"ln\":\n      return Math.log(evalFormula(args[0], ctx2));\n    case \"log10\":\n      return Math.log10(evalFormula(args[0], ctx2));\n    case \"log2\":\n      return Math.log2(evalFormula(args[0], ctx2));\n    case \"max\": {\n      const values = args.map((arg) => evalFormula(arg, ctx2));\n      return values.reduce(\n        (acc, value) => Math.max(acc, value),\n        Number.NEGATIVE_INFINITY\n      );\n    }\n    case \"min\": {\n      const values = args.map((arg) => evalFormula(arg, ctx2));\n      return values.reduce(\n        (acc, value) => Math.min(acc, value),\n        Number.POSITIVE_INFINITY\n      );\n    }\n    case \"mod\":\n      return evalFormula(args[0], ctx2) % evalFormula(args[1], ctx2);\n    case \"multiply\":\n      return evalFormula(args[0], ctx2) * evalFormula(args[1], ctx2);\n    case \"pow\":\n      return Math.pow(\n        evalFormula(args[0], ctx2),\n        evalFormula(args[1], ctx2)\n      );\n    case \"round\":\n      return Math.round(evalFormula(args[0], ctx2));\n    case \"sign\":\n      return Math.sign(evalFormula(args[0], ctx2));\n    case \"sqrt\":\n      return Math.sqrt(evalFormula(args[0], ctx2));\n    case \"subtract\":\n      return evalFormula(args[0], ctx2) - evalFormula(args[1], ctx2);\n    case \"toNumber\":\n      return Number.parseFloat(evalFormula(args[0], ctx2));\n    case \"unaryMinus\":\n      return evalFormula(args[0], ctx2) * -1;\n    case \"unaryPlus\":\n      return Number.parseFloat(evalFormula(args[0], ctx2));\n    // text\n    // ------------------------------------------------------------------------\n    case \"concat\": {\n      const values = args.map((arg) => evalFormula(arg, ctx2));\n      return values.join(\"\");\n    }\n    case \"contains\":\n      return evalFormula(args[0], ctx2).includes(\n        evalFormula(args[1], ctx2)\n      );\n    case \"format\": {\n      const value = evalFormula(args[0], ctx2);\n      switch (typeof value) {\n        case \"string\":\n          return value;\n        case \"object\":\n          if (value instanceof Date) {\n            return format(value, \"MMM d, YYY\");\n          } else {\n            return `${value}`;\n          }\n        // case 'number':\n        // fallthrough\n        default:\n          return `${value}`;\n      }\n    }\n    case \"join\": {\n      const [delimiterArg, ...restArgs] = args;\n      const delimiter = evalFormula(delimiterArg, ctx2);\n      const values = restArgs.map((arg) => evalFormula(arg, ctx2));\n      return values.join(delimiter);\n    }\n    case \"length\":\n      return evalFormula(args[0], ctx2).length;\n    case \"replace\": {\n      const value = evalFormula(args[0], ctx2);\n      const regex = evalFormula(args[1], ctx2);\n      const replacement = evalFormula(args[2], ctx2);\n      return value.replace(new RegExp(regex), replacement);\n    }\n    case \"replaceAll\": {\n      const value = evalFormula(args[0], ctx2);\n      const regex = evalFormula(args[1], ctx2);\n      const replacement = evalFormula(args[2], ctx2);\n      return value.replaceAll(new RegExp(regex, \"g\"), replacement);\n    }\n    case \"slice\": {\n      const value = evalFormula(args[0], ctx2);\n      const beginIndex = evalFormula(args[1], ctx2);\n      const endIndex = args[2] ? evalFormula(args[2], ctx2) : value.length;\n      return value.slice(beginIndex, endIndex);\n    }\n    case \"test\": {\n      const value = evalFormula(args[0], ctx2);\n      const regex = evalFormula(args[1], ctx2);\n      return new RegExp(regex).test(value);\n    }\n    // date & time\n    // ------------------------------------------------------------------------\n    case \"date\":\n      return getDate(evalFormula(args[0], ctx2));\n    case \"dateAdd\": {\n      const date = evalFormula(args[0], ctx2);\n      const number = evalFormula(args[1], ctx2);\n      const unit = evalFormula(args[1], ctx2);\n      return add(date, { [unit]: number });\n    }\n    case \"dateBetween\": {\n      const date1 = evalFormula(args[0], ctx2);\n      const date2 = evalFormula(args[1], ctx2);\n      const unit = evalFormula(args[1], ctx2);\n      return intervalToDuration({\n        start: date2,\n        end: date1\n      })[unit];\n    }\n    case \"dateSubtract\": {\n      const date = evalFormula(args[0], ctx2);\n      const number = evalFormula(args[1], ctx2);\n      const unit = evalFormula(args[1], ctx2);\n      return sub(date, { [unit]: number });\n    }\n    case \"day\":\n      return getDay(evalFormula(args[0], ctx2));\n    case \"end\":\n      return evalFormula(args[0], { ...ctx2, endDate: true });\n    case \"formatDate\": {\n      const date = evalFormula(args[0], ctx2);\n      const formatValue = evalFormula(args[1], ctx2).replace(\n        \"dddd\",\n        \"eeee\"\n      );\n      return format(date, formatValue);\n    }\n    case \"fromTimestamp\":\n      return new Date(evalFormula(args[0], ctx2));\n    case \"hour\":\n      return getHours(evalFormula(args[0], ctx2));\n    case \"minute\":\n      return getMinutes(evalFormula(args[0], ctx2));\n    case \"month\":\n      return getMonth(evalFormula(args[0], ctx2));\n    case \"now\":\n      return /* @__PURE__ */ new Date();\n    case \"start\":\n      return evalFormula(args[0], { ...ctx2, endDate: false });\n    case \"timestamp\":\n      return evalFormula(args[0], ctx2).getTime();\n    case \"year\":\n      return getYear(evalFormula(args[0], ctx2));\n    default:\n      throw new Error(\n        `invalid or unsupported function formula \"${formula == null ? void 0 : formula.type}`\n      );\n  }\n}\n\n// src/third-party/property.tsx\n\nfunction Property(props) {\n  const { components } = useNotionContext();\n  if (components.Property) {\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(components.Property, { ...props });\n  } else {\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(PropertyImplMemo, { ...props });\n  }\n}\nfunction PropertyImpl(props) {\n  var _a, _b, _c;\n  const { components, mapImageUrl, mapPageUrl } = useNotionContext();\n  const {\n    schema,\n    data,\n    block,\n    collection,\n    inline = false,\n    linkToTitlePage = true\n  } = props;\n  const renderTextValue = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    () => function TextProperty() {\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Text, { value: data, block });\n    },\n    [block, data]\n  );\n  const renderDateValue = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    () => function DateProperty() {\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Text, { value: data, block });\n    },\n    [block, data]\n  );\n  const renderRelationValue = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    () => function RelationProperty() {\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Text, { value: data, block });\n    },\n    [block, data]\n  );\n  const renderFormulaValue = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    () => function FormulaProperty() {\n      let content2;\n      if (!schema) return null;\n      try {\n        content2 = evalFormula(schema.formula, {\n          schema: collection == null ? void 0 : collection.schema,\n          properties: block == null ? void 0 : block.properties\n        });\n        if (Number.isNaN(content2)) {\n        }\n        if (content2 instanceof Date) {\n          content2 = format(content2, \"MMM d, YYY hh:mm aa\");\n        }\n      } catch (e) {\n        content2 = null;\n      }\n      return content2;\n    },\n    [block == null ? void 0 : block.properties, collection == null ? void 0 : collection.schema, schema]\n  );\n  const renderTitleValue = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    () => function FormulaTitle() {\n      if (block && linkToTitlePage) {\n        return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n          components.PageLink,\n          {\n            className: cs(\"notion-page-link\"),\n            href: mapPageUrl(block.id),\n            children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(PageTitle, { block })\n          }\n        );\n      } else {\n        return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Text, { value: data, block });\n      }\n    },\n    [block, components, data, linkToTitlePage, mapPageUrl]\n  );\n  const renderPersonValue = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    () => function PersonProperty() {\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Text, { value: data, block });\n    },\n    [block, data]\n  );\n  const renderFileValue = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    () => function FileProperty() {\n      if (!data) return null;\n      const files = data.filter((v) => v.length === 2).map((f) => f.flat().flat());\n      return files.map((file, i) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n        components.Link,\n        {\n          className: \"notion-property-file\",\n          href: mapImageUrl(file[2], block),\n          target: \"_blank\",\n          rel: \"noreferrer noopener\",\n          children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n            GracefulImage,\n            {\n              alt: file[0],\n              src: mapImageUrl(file[2], block),\n              loading: \"lazy\"\n            }\n          )\n        },\n        i\n      ));\n    },\n    [block, components, data, mapImageUrl]\n  );\n  const renderCheckboxValue = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    () => function CheckboxProperty() {\n      var _a2;\n      if (!data || !(schema == null ? void 0 : schema.name)) return null;\n      const isChecked = data && ((_a2 = data[0]) == null ? void 0 : _a2[0]) === \"Yes\";\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\", { className: \"notion-property-checkbox-container\", children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Checkbox, { isChecked, blockId: void 0 }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"span\", { className: \"notion-property-checkbox-text\", children: schema.name })\n      ] });\n    },\n    [data, schema]\n  );\n  const renderUrlValue = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    () => function UrlProperty() {\n      if (!data) return null;\n      const d = structuredClone(data);\n      if (inline) {\n        try {\n          const url = new URL(d[0][0]);\n          d[0][0] = url.hostname.replace(/^www\\./, \"\");\n        } catch (e) {\n        }\n      }\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n        Text,\n        {\n          value: d,\n          block,\n          inline,\n          linkProps: {\n            target: \"_blank\",\n            rel: \"noreferrer noopener\"\n          }\n        }\n      );\n    },\n    [block, data, inline]\n  );\n  const renderEmailValue = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    () => function EmailProperty() {\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Text, { value: data, linkProtocol: \"mailto\", block });\n    },\n    [block, data]\n  );\n  const renderPhoneNumberValue = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    () => function PhoneNumberProperty() {\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Text, { value: data, linkProtocol: \"tel\", block });\n    },\n    [block, data]\n  );\n  const renderNumberValue = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    () => function NumberProperty() {\n      var _a2;\n      if (!data || !schema) return null;\n      const value = Number.parseFloat(((_a2 = data[0]) == null ? void 0 : _a2[0]) || \"0\");\n      let output = \"\";\n      if (Number.isNaN(value)) {\n        return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Text, { value: data, block });\n      } else {\n        switch (schema.number_format) {\n          case \"number_with_commas\":\n            output = (0, import_format_number.default)()(value);\n            break;\n          case \"percent\":\n            output = (0, import_format_number.default)({ suffix: \"%\" })(value * 100);\n            break;\n          case \"dollar\":\n            output = (0, import_format_number.default)({ prefix: \"$\", round: 2, padRight: 2 })(\n              value\n            );\n            break;\n          case \"euro\":\n            output = (0, import_format_number.default)({ prefix: \"\\u20AC\", round: 2, padRight: 2 })(\n              value\n            );\n            break;\n          case \"pound\":\n            output = (0, import_format_number.default)({ prefix: \"\\xA3\", round: 2, padRight: 2 })(\n              value\n            );\n            break;\n          case \"yen\":\n            output = (0, import_format_number.default)({ prefix: \"\\xA5\", round: 0 })(value);\n            break;\n          case \"rupee\":\n            output = (0, import_format_number.default)({ prefix: \"\\u20B9\", round: 2, padRight: 2 })(\n              value\n            );\n            break;\n          case \"won\":\n            output = (0, import_format_number.default)({ prefix: \"\\u20A9\", round: 0 })(value);\n            break;\n          case \"yuan\":\n            output = (0, import_format_number.default)({ prefix: \"CN\\xA5\", round: 2, padRight: 2 })(\n              value\n            );\n            break;\n          case \"argentine_peso\":\n            output = (0, import_format_number.default)({ prefix: \"ARS \", round: 2, padRight: 2 })(\n              value\n            );\n            break;\n          case \"baht\":\n            output = (0, import_format_number.default)({ prefix: \"THB \", round: 2, padRight: 2 })(\n              value\n            );\n            break;\n          case \"canadian_dollar\":\n            output = (0, import_format_number.default)({ prefix: \"CA$\", round: 2, padRight: 2 })(\n              value\n            );\n            break;\n          case \"chilean_peso\":\n            output = (0, import_format_number.default)({ prefix: \"CLP \", round: 0 })(value);\n            break;\n          case \"colombian_peso\":\n            output = (0, import_format_number.default)({ prefix: \"COP \", round: 0 })(value);\n            break;\n          case \"danish_krone\":\n            output = (0, import_format_number.default)({ prefix: \"DKK \", round: 2, padRight: 2 })(\n              value\n            );\n            break;\n          case \"dirham\":\n            output = (0, import_format_number.default)({ prefix: \"AED \", round: 2, padRight: 2 })(\n              value\n            );\n            break;\n          case \"forint\":\n            output = (0, import_format_number.default)({ prefix: \"HUF \", round: 0 })(value);\n            break;\n          case \"franc\":\n            output = (0, import_format_number.default)({ prefix: \"CHF \", round: 2, padRight: 2 })(\n              value\n            );\n            break;\n          case \"hong_kong_dollar\":\n            output = (0, import_format_number.default)({ prefix: \"HK$\", round: 2, padRight: 2 })(\n              value\n            );\n            break;\n          case \"koruna\":\n            output = (0, import_format_number.default)({ prefix: \"CZK \", round: 2, padRight: 2 })(\n              value\n            );\n            break;\n          case \"krona\":\n            output = (0, import_format_number.default)({ prefix: \"SEK \", round: 2, padRight: 2 })(\n              value\n            );\n            break;\n          case \"leu\":\n            output = (0, import_format_number.default)({ prefix: \"RON \", round: 2, padRight: 2 })(\n              value\n            );\n            break;\n          case \"lira\":\n            output = (0, import_format_number.default)({ prefix: \"TRY \", round: 2, padRight: 2 })(\n              value\n            );\n            break;\n          case \"mexican_peso\":\n            output = (0, import_format_number.default)({ prefix: \"MX$\", round: 2, padRight: 2 })(\n              value\n            );\n            break;\n          case \"new_taiwan_dollar\":\n            output = (0, import_format_number.default)({ prefix: \"NT$\", round: 0 })(value);\n            break;\n          case \"new_zealand_dollar\":\n            output = (0, import_format_number.default)({ prefix: \"NZ$\", round: 2, padRight: 2 })(\n              value\n            );\n            break;\n          case \"norwegian_krone\":\n            output = (0, import_format_number.default)({ prefix: \"NOK \", round: 2, padRight: 2 })(\n              value\n            );\n            break;\n          case \"number\":\n            output = (0, import_format_number.default)()(value);\n            break;\n          case \"philippine_peso\":\n            output = (0, import_format_number.default)({ prefix: \"\\u20B1\", round: 2, padRight: 2 })(\n              value\n            );\n            break;\n          case \"peruvian_sol\":\n            output = (0, import_format_number.default)({ prefix: \"PEN \", round: 2, padRight: 2 })(\n              value\n            );\n            break;\n          case \"rand\":\n            output = (0, import_format_number.default)({ prefix: \"ZAR \", round: 2, padRight: 2 })(\n              value\n            );\n            break;\n          case \"real\":\n            output = (0, import_format_number.default)({ prefix: \"R$\", round: 2, padRight: 2 })(\n              value\n            );\n            break;\n          case \"ringgit\":\n            output = (0, import_format_number.default)({ prefix: \"MYR \", round: 2, padRight: 2 })(\n              value\n            );\n            break;\n          case \"riyal\":\n            output = (0, import_format_number.default)({ prefix: \"SAR \", round: 2, padRight: 2 })(\n              value\n            );\n            break;\n          case \"ruble\":\n            output = (0, import_format_number.default)({ prefix: \"RUB \", round: 2, padRight: 2 })(\n              value\n            );\n            break;\n          case \"rupiah\":\n            output = (0, import_format_number.default)({ prefix: \"IDR \", round: 0 })(value);\n            break;\n          case \"shekel\":\n            output = (0, import_format_number.default)({ prefix: \"\\u20AA\", round: 2, padRight: 2 })(\n              value\n            );\n            break;\n          case \"singapore_dollar\":\n            output = (0, import_format_number.default)({ prefix: \"SGD \", round: 2, padRight: 2 })(\n              value\n            );\n            break;\n          case \"uruguayan_peso\":\n            output = (0, import_format_number.default)({ prefix: \"UYU \", round: 2, padRight: 2 })(\n              value\n            );\n            break;\n          case \"zloty\":\n            output = (0, import_format_number.default)({ prefix: \"PLN \", round: 2, padRight: 2 })(\n              value\n            );\n            break;\n          default:\n            return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Text, { value: data, block });\n        }\n        return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Text, { value: [[output]], block });\n      }\n    },\n    [block, data, schema]\n  );\n  const renderAutoIncrementIdValue = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    () => function renderAutoIncrementIdValueProperty() {\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Text, { value: data, block });\n    },\n    [block, data]\n  );\n  const renderCreatedTimeValue = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    () => function CreatedTimeProperty() {\n      return format(new Date(block.created_time), \"MMM d, YYY hh:mm aa\");\n    },\n    [block]\n  );\n  const renderLastEditedTimeValue = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    () => function LastEditedTimeProperty() {\n      return format(new Date(block.last_edited_time), \"MMM d, YYY hh:mm aa\");\n    },\n    [block]\n  );\n  if (!schema) {\n    return null;\n  }\n  let content = null;\n  if (data || schema.type === \"checkbox\" || schema.type === \"title\" || schema.type === \"formula\" || schema.type === \"created_by\" || schema.type === \"last_edited_by\" || schema.type === \"created_time\" || schema.type === \"last_edited_time\") {\n    switch (schema.type) {\n      case \"relation\":\n        content = components.propertyRelationValue(props, renderRelationValue);\n        break;\n      case \"formula\":\n        content = components.propertyFormulaValue(props, renderFormulaValue);\n        break;\n      case \"title\":\n        content = components.propertyTitleValue(props, renderTitleValue);\n        break;\n      case \"status\": {\n        const value = ((_a = data == null ? void 0 : data[0]) == null ? void 0 : _a[0]) || \"\";\n        const option = (_b = schema.options) == null ? void 0 : _b.find((option2) => value === option2.value);\n        const color = (option == null ? void 0 : option.color) || \"default-inferred\";\n        content = components.propertySelectValue(\n          {\n            ...props,\n            value,\n            option,\n            color\n          },\n          () => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\n            \"div\",\n            {\n              className: cs(\n                `notion-property-${schema.type}-item`,\n                color && `notion-item-${color}`\n              ),\n              children: [\n                /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n                  \"span\",\n                  {\n                    className: cs(`notion-item-bullet-${color}`),\n                    style: {\n                      marginRight: \"5px\",\n                      borderRadius: \"100%\",\n                      height: \"8px\",\n                      width: \"8px\",\n                      display: \"inline-flex\",\n                      flexShrink: 0\n                    }\n                  }\n                ),\n                value\n              ]\n            }\n          )\n        );\n        break;\n      }\n      case \"select\":\n      // intentional fallthrough\n      case \"multi_select\": {\n        const values = (((_c = data == null ? void 0 : data[0]) == null ? void 0 : _c[0]) || \"\").split(\",\");\n        content = values.map((value, index) => {\n          var _a2;\n          const option = (_a2 = schema.options) == null ? void 0 : _a2.find(\n            (option2) => value === option2.value\n          );\n          const color = option == null ? void 0 : option.color;\n          return components.propertySelectValue(\n            {\n              ...props,\n              key: index,\n              value,\n              option,\n              color\n            },\n            () => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n              \"div\",\n              {\n                className: cs(\n                  `notion-property-${schema.type}-item`,\n                  color && `notion-item-${color}`\n                ),\n                children: value\n              },\n              index\n            )\n          );\n        });\n        break;\n      }\n      case \"person\":\n        content = components.propertyPersonValue(props, renderPersonValue);\n        break;\n      case \"file\":\n        content = components.propertyFileValue(props, renderFileValue);\n        break;\n      case \"checkbox\":\n        content = components.propertyCheckboxValue(props, renderCheckboxValue);\n        break;\n      case \"url\":\n        content = components.propertyUrlValue(props, renderUrlValue);\n        break;\n      case \"email\":\n        content = components.propertyEmailValue(props, renderEmailValue);\n        break;\n      case \"phone_number\":\n        content = components.propertyPhoneNumberValue(\n          props,\n          renderPhoneNumberValue\n        );\n        break;\n      case \"number\":\n        content = components.propertyNumberValue(props, renderNumberValue);\n        break;\n      case \"created_time\":\n        content = components.propertyCreatedTimeValue(\n          props,\n          renderCreatedTimeValue\n        );\n        break;\n      case \"last_edited_time\":\n        content = components.propertyLastEditedTimeValue(\n          props,\n          renderLastEditedTimeValue\n        );\n        break;\n      case \"created_by\":\n        break;\n      case \"last_edited_by\":\n        break;\n      case \"auto_increment_id\":\n        content = components.propertyTextValue(\n          props,\n          renderAutoIncrementIdValue\n        );\n        break;\n      case \"text\":\n        content = components.propertyTextValue(props, renderTextValue);\n        break;\n      case \"date\":\n        content = components.propertyDateValue(props, renderDateValue);\n        break;\n      default:\n        content = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Text, { value: data, block });\n        break;\n    }\n  }\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"span\", { className: `notion-property notion-property-${schema.type}`, children: content });\n}\nvar PropertyImplMemo = react__WEBPACK_IMPORTED_MODULE_0__.memo(PropertyImpl);\n\n// src/third-party/collection-row.tsx\n\nfunction CollectionRow({\n  block,\n  pageHeader = false,\n  className\n}) {\n  var _a, _b, _c, _d;\n  const { recordMap } = useNotionContext();\n  const collectionId = block.parent_id;\n  const collection = (_a = recordMap.collection[collectionId]) == null ? void 0 : _a.value;\n  const schemas = collection == null ? void 0 : collection.schema;\n  if (!collection || !schemas) {\n    return null;\n  }\n  let propertyIds = Object.keys(schemas).filter((id) => id !== \"title\");\n  if ((_b = collection.format) == null ? void 0 : _b.property_visibility) {\n    propertyIds = propertyIds.filter(\n      (id) => {\n        var _a2, _b2, _c2;\n        return ((_c2 = (_b2 = (_a2 = collection.format) == null ? void 0 : _a2.property_visibility) == null ? void 0 : _b2.find(\n          ({ property }) => property === id\n        )) == null ? void 0 : _c2.visibility) !== \"hide\";\n      }\n    );\n  }\n  if ((_c = collection.format) == null ? void 0 : _c.collection_page_properties) {\n    const idToIndex = Object.fromEntries(\n      (_d = collection.format) == null ? void 0 : _d.collection_page_properties.map((p, i) => [\n        p.property,\n        i\n      ])\n    );\n    propertyIds.sort((a, b) => idToIndex[a] - idToIndex[b]);\n  } else {\n    propertyIds.sort((a, b) => schemas[a].name.localeCompare(schemas[b].name));\n  }\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: cs(\"notion-collection-row\", className), children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"notion-collection-row-body\", children: propertyIds.map((propertyId) => {\n    var _a2;\n    const schema = schemas[propertyId];\n    if (!schema) return null;\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\", { className: \"notion-collection-row-property\", children: [\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(CollectionColumnTitle, { schema }),\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"notion-collection-row-value\", children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n        Property,\n        {\n          schema,\n          data: (_a2 = block.properties) == null ? void 0 : _a2[propertyId],\n          propertyId,\n          block,\n          collection,\n          pageHeader\n        }\n      ) })\n    ] }, propertyId);\n  }) }) });\n}\n\n// src/third-party/collection-view.tsx\n\n\n// src/third-party/collection-view-board.tsx\n\n\n\n// src/icons/empty-icon.tsx\n\n\nfunction EmptyIcon(props) {\n  const { className, ...rest } = props;\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"svg\", { className, ...rest, viewBox: \"0 0 14 14\", width: \"14\", children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"path\", { d: \"M11.0918,0 C11.5383,0 11.9307,0.295898 12.0533,0.725586 L13.9615,7.40332 C13.9871,7.49316 14,7.58594 14,7.67871 L14,13 C14,13.5527 13.5522,14 13,14 L1,14 C0.447754,14 0,13.5527 0,13 L0,7.67871 C0,7.58594 0.0129395,7.49316 0.0384521,7.40332 L1.94666,0.725586 C2.06934,0.295898 2.46167,0 2.9082,0 L11.0918,0 Z M4.27271,1.5 C3.83728,1.5 3.45178,1.78223 3.31982,2.19727 L1.91455,6.61328 C1.70947,7.25879 2.1908,7.91699 2.86755,7.91699 L4.70837,7.91699 C4.70837,8.93652 5.16663,10.168 7,10.168 C8.83337,10.168 9.29163,8.93652 9.29163,7.91699 L11.1478,7.89355 C11.8201,7.88477 12.2927,7.22852 12.0876,6.58887 L10.681,2.19531 C10.5485,1.78125 10.1635,1.5 9.72864,1.5 L4.27271,1.5 Z\" }) });\n}\n\n// src/third-party/collection-card.tsx\n\n\n\nfunction CollectionCard({\n  collection,\n  block,\n  cover,\n  coverSize,\n  coverAspect,\n  properties,\n  className,\n  ...rest\n}) {\n  var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j, _k, _l, _m;\n  const ctx2 = useNotionContext();\n  const {\n    components,\n    recordMap,\n    mapPageUrl,\n    mapImageUrl,\n    isLinkCollectionToUrlProperty\n  } = ctx2;\n  let coverContent = null;\n  const { page_cover_position = 0.5, card_cover_position = 0.5 } = block.format || {};\n  const coverPosition = (1 - page_cover_position) * 100;\n  const cardCoverPosition = (1 - card_cover_position) * 100;\n  if ((cover == null ? void 0 : cover.type) === \"page_content\") {\n    const contentBlockId = (_a = block.content) == null ? void 0 : _a.find((blockId) => {\n      var _a2;\n      const block2 = (_a2 = recordMap.block[blockId]) == null ? void 0 : _a2.value;\n      return (block2 == null ? void 0 : block2.type) === \"image\";\n    });\n    if (contentBlockId) {\n      const contentBlock = (_b = recordMap.block[contentBlockId]) == null ? void 0 : _b.value;\n      const source = (_g = (_e = (_d = (_c = contentBlock.properties) == null ? void 0 : _c.source) == null ? void 0 : _d[0]) == null ? void 0 : _e[0]) != null ? _g : (_f = contentBlock.format) == null ? void 0 : _f.display_source;\n      if (source) {\n        const src = mapImageUrl(source, contentBlock);\n        const caption = (_j = (_i = (_h = contentBlock.properties) == null ? void 0 : _h.caption) == null ? void 0 : _i[0]) == null ? void 0 : _j[0];\n        coverContent = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n          LazyImage,\n          {\n            src,\n            alt: caption || \"notion image\",\n            style: {\n              objectFit: coverAspect,\n              objectPosition: `center ${cardCoverPosition}%`\n            }\n          }\n        );\n      }\n    }\n    if (!coverContent) {\n      coverContent = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"notion-collection-card-cover-empty\" });\n    }\n  } else if ((cover == null ? void 0 : cover.type) === \"page_cover\") {\n    const { page_cover } = block.format || {};\n    if (page_cover) {\n      const coverPosition2 = (1 - page_cover_position) * 100;\n      coverContent = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n        LazyImage,\n        {\n          src: mapImageUrl(page_cover, block),\n          alt: (0,notion_utils__WEBPACK_IMPORTED_MODULE_3__.getTextContent)((_k = block.properties) == null ? void 0 : _k.title),\n          style: {\n            objectFit: coverAspect,\n            objectPosition: `center ${coverPosition2}%`\n          }\n        }\n      );\n    }\n  } else if ((cover == null ? void 0 : cover.type) === \"property\") {\n    const { property } = cover;\n    if (!property) return null;\n    const schema = collection.schema[property];\n    const data = (_l = block.properties) == null ? void 0 : _l[property];\n    if (schema && data) {\n      if (schema.type === \"file\") {\n        const files = data.filter((v) => v.length === 2).map((f) => f.flat().flat());\n        const file = files[0];\n        if (file) {\n          coverContent = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"span\", { className: `notion-property-${schema.type}`, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n            LazyImage,\n            {\n              alt: file[0],\n              src: mapImageUrl(file[2], block),\n              style: {\n                objectFit: coverAspect,\n                objectPosition: `center ${coverPosition}%`\n              }\n            }\n          ) });\n        }\n      } else {\n        coverContent = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Property, { propertyId: property, schema, data });\n      }\n    }\n  }\n  let linkProperties = [];\n  if (isLinkCollectionToUrlProperty && properties) {\n    linkProperties = properties.filter(\n      (p) => p.visible && p.property !== \"title\" && collection.schema[p.property]\n    ).filter((p) => {\n      if (!block.properties) return false;\n      const schema = collection.schema[p.property];\n      return (schema == null ? void 0 : schema.type) === \"url\";\n    }).map((p) => {\n      var _a2;\n      return (_a2 = block.properties) == null ? void 0 : _a2[p.property];\n    }).filter((p) => p == null ? void 0 : p[0]);\n  }\n  let url = null;\n  if (linkProperties && linkProperties.length > 0 && linkProperties[0].length > 0 && linkProperties[0][0].length > 0) {\n    url = linkProperties[0][0][0];\n  }\n  const innerCard = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.Fragment, { children: [\n    (coverContent || (cover == null ? void 0 : cover.type) !== \"none\") && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"notion-collection-card-cover\", children: coverContent }),\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\", { className: \"notion-collection-card-body\", children: [\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"notion-collection-card-property\", children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n        Property,\n        {\n          schema: collection.schema.title,\n          data: (_m = block == null ? void 0 : block.properties) == null ? void 0 : _m.title,\n          block,\n          collection\n        }\n      ) }),\n      properties == null ? void 0 : properties.filter(\n        (p) => p.visible && p.property !== \"title\" && collection.schema[p.property]\n      ).map((p) => {\n        if (!block.properties || !p.property) return null;\n        const schema = collection.schema[p.property];\n        const data = block.properties[p.property];\n        return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"notion-collection-card-property\", children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n          Property,\n          {\n            schema,\n            data,\n            block,\n            collection,\n            inline: true\n          }\n        ) }, p.property);\n      })\n    ] })\n  ] });\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n    NotionContextProvider,\n    {\n      ...ctx2,\n      components: {\n        ...ctx2.components,\n        // Disable <a> tabs in all child components so we don't create invalid DOM\n        // trees with stacked <a> tags.\n        Link: (props) => {\n          var _a2, _b2, _c2;\n          return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"form\", { action: props.href, target: \"_blank\", children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n            \"input\",\n            {\n              type: \"submit\",\n              value: (_c2 = (_b2 = (_a2 = props == null ? void 0 : props.children) == null ? void 0 : _a2.props) == null ? void 0 : _b2.children) != null ? _c2 : props.href,\n              className: \"nested-form-link notion-link\"\n            }\n          ) });\n        },\n        PageLink: dummyLink\n      },\n      children: isLinkCollectionToUrlProperty && url ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n        components.Link,\n        {\n          className: cs(\n            \"notion-collection-card\",\n            `notion-collection-card-size-${coverSize}`,\n            className\n          ),\n          href: url,\n          ...rest,\n          children: innerCard\n        }\n      ) : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n        components.PageLink,\n        {\n          className: cs(\n            \"notion-collection-card\",\n            `notion-collection-card-size-${coverSize}`,\n            className\n          ),\n          href: mapPageUrl(block.id),\n          ...rest,\n          children: innerCard\n        }\n      )\n    }\n  );\n}\n\n// src/third-party/collection-group.tsx\n\nfunction CollectionGroup({\n  collectionViewComponent: CollectionViewComponent,\n  collection,\n  collectionGroup,\n  schema,\n  value,\n  hidden,\n  summaryProps,\n  detailsProps,\n  ...rest\n}) {\n  if (hidden) return null;\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"details\", { open: true, className: \"notion-collection-group\", ...detailsProps, children: [\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"summary\", { className: \"notion-collection-group-title\", ...summaryProps, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\", { children: [\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Property, { schema, data: [[value]], collection }),\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"span\", { className: \"notion-board-th-count\", children: collectionGroup == null ? void 0 : collectionGroup.total })\n    ] }) }),\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n      CollectionViewComponent,\n      {\n        collection,\n        collectionGroup,\n        ...rest\n      }\n    )\n  ] });\n}\n\n// src/third-party/collection-utils.ts\nfunction getCollectionGroups(collection, collectionView, collectionData, ...rest) {\n  var _a;\n  const elems = ((_a = collectionView == null ? void 0 : collectionView.format) == null ? void 0 : _a.collection_groups) || [];\n  return elems.map(({ property, hidden, value: { value, type } }) => {\n    var _a2, _b;\n    const isUncategorizedValue = value === void 0;\n    const isDateValue = value == null ? void 0 : value.range;\n    const queryLabel = isUncategorizedValue ? \"uncategorized\" : isDateValue ? ((_a2 = value.range) == null ? void 0 : _a2.start_date) || ((_b = value.range) == null ? void 0 : _b.end_date) : (value == null ? void 0 : value.value) || value;\n    const collectionGroup = collectionData[`results:${type}:${queryLabel}`];\n    let queryValue = !isUncategorizedValue && (isDateValue || (value == null ? void 0 : value.value) || value);\n    let schema = collection.schema[property];\n    if (type === \"checkbox\" && value) {\n      queryValue = \"Yes\";\n    }\n    if (isDateValue) {\n      schema = {\n        type: \"text\",\n        name: \"text\"\n      };\n      queryValue = format(new Date(queryLabel), \"MMM d, YYY hh:mm aa\");\n    }\n    return {\n      collectionGroup,\n      schema,\n      value: queryValue || \"No description\",\n      hidden,\n      collection,\n      collectionView,\n      collectionData,\n      blockIds: collectionGroup == null ? void 0 : collectionGroup.blockIds,\n      ...rest\n    };\n  });\n}\n\n// src/third-party/collection-view-board.tsx\n\nfunction CollectionViewBoard({\n  collection,\n  collectionView,\n  collectionData,\n  padding\n}) {\n  var _a;\n  const isGroupedCollection = (_a = collectionView == null ? void 0 : collectionView.format) == null ? void 0 : _a.collection_group_by;\n  if (isGroupedCollection) {\n    const collectionGroups = getCollectionGroups(\n      collection,\n      collectionView,\n      collectionData,\n      padding\n    );\n    return collectionGroups.map((group, index) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n      CollectionGroup,\n      {\n        ...group,\n        summaryProps: {\n          style: {\n            paddingLeft: padding\n          }\n        },\n        collectionViewComponent: (props) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Board, { padding, ...props })\n      },\n      index\n    ));\n  }\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n    Board,\n    {\n      padding,\n      collectionView,\n      collection,\n      collectionData\n    }\n  );\n}\nfunction Board({\n  collectionView,\n  collectionData,\n  collection,\n  padding\n}) {\n  var _a, _b, _c, _d;\n  const { recordMap } = useNotionContext();\n  const {\n    board_cover = { type: \"none\" },\n    board_cover_size = \"medium\",\n    board_cover_aspect = \"cover\"\n  } = (collectionView == null ? void 0 : collectionView.format) || {};\n  const boardGroups = ((_a = collectionView == null ? void 0 : collectionView.format) == null ? void 0 : _a.board_columns) || ((_b = collectionView == null ? void 0 : collectionView.format) == null ? void 0 : _b.board_groups2) || [];\n  const boardGroupBy = (_d = (_c = collectionView == null ? void 0 : collectionView.format) == null ? void 0 : _c.board_columns_by) == null ? void 0 : _d.groupBy;\n  const boardStyle = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    () => ({\n      paddingLeft: padding\n    }),\n    [padding]\n  );\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"notion-board\", children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\n    \"div\",\n    {\n      className: cs(\n        \"notion-board-view\",\n        `notion-board-view-size-${board_cover_size}`\n      ),\n      style: boardStyle,\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"notion-board-header\", children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"notion-board-header-inner\", children: boardGroups.map((p, index) => {\n          var _a2, _b2, _c2, _d2;\n          if (!((_a2 = collectionData.board_columns) == null ? void 0 : _a2.results)) {\n            return null;\n          }\n          const group = collectionData.board_columns.results[index];\n          const schema = collection.schema[p.property];\n          if (!group || !schema || p.hidden) {\n            return null;\n          }\n          return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"notion-board-th\", children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\", { className: \"notion-board-th-body\", children: [\n            ((_b2 = group.value) == null ? void 0 : _b2.value) ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n              Property,\n              {\n                schema,\n                data: [\n                  [\n                    ((_c2 = group.value) == null ? void 0 : _c2.value[boardGroupBy]) || ((_d2 = group.value) == null ? void 0 : _d2.value)\n                  ]\n                ],\n                collection\n              }\n            ) : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"span\", { children: [\n              /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(EmptyIcon, { className: \"notion-board-th-empty\" }),\n              (schema == null ? void 0 : schema.name) ? `No ${schema.name}` : \"No Select\"\n            ] }),\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"span\", { className: \"notion-board-th-count\", children: group.total })\n          ] }) }, index);\n        }) }) }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"notion-board-header-placeholder\" }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"notion-board-body\", children: boardGroups.map((p, index) => {\n          var _a2, _b2, _c2, _d2, _e;\n          const boardResults = (_a2 = collectionData.board_columns) == null ? void 0 : _a2.results;\n          if (!boardResults) return null;\n          if (!((_b2 = p == null ? void 0 : p.value) == null ? void 0 : _b2.type)) return null;\n          const schema = collection.schema[p.property];\n          const group = collectionData[`results:${(_c2 = p == null ? void 0 : p.value) == null ? void 0 : _c2.type}:${((_d2 = p == null ? void 0 : p.value) == null ? void 0 : _d2.value) || \"uncategorized\"}`];\n          if (!group || !schema || p.hidden) {\n            return null;\n          }\n          return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"notion-board-group\", children: (_e = group.blockIds) == null ? void 0 : _e.map((blockId) => {\n            var _a3, _b3;\n            const block = (_a3 = recordMap.block[blockId]) == null ? void 0 : _a3.value;\n            if (!block) return null;\n            return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n              CollectionCard,\n              {\n                className: \"notion-board-group-card\",\n                collection,\n                block,\n                cover: board_cover,\n                coverSize: board_cover_size,\n                coverAspect: board_cover_aspect,\n                properties: (_b3 = collectionView.format) == null ? void 0 : _b3.board_properties\n              },\n              blockId\n            );\n          }) }, index);\n        }) })\n      ]\n    }\n  ) });\n}\n\n// src/third-party/collection-view-gallery.tsx\n\n\nvar defaultBlockIds = [];\nfunction CollectionViewGallery({\n  collection,\n  collectionView,\n  collectionData\n}) {\n  var _a, _b, _c, _d, _e;\n  const isGroupedCollection = (_a = collectionView == null ? void 0 : collectionView.format) == null ? void 0 : _a.collection_group_by;\n  if (isGroupedCollection) {\n    const collectionGroups = getCollectionGroups(\n      collection,\n      collectionView,\n      collectionData\n    );\n    return collectionGroups.map((group, index) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n      CollectionGroup,\n      {\n        ...group,\n        collectionViewComponent: Gallery\n      },\n      index\n    ));\n  }\n  const blockIds = ((_e = (_d = (_b = collectionData.collection_group_results) == null ? void 0 : _b.blockIds) != null ? _d : (_c = collectionData[\"results:relation:uncategorized\"]) == null ? void 0 : _c.blockIds) != null ? _e : collectionData.blockIds) || defaultBlockIds;\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n    Gallery,\n    {\n      collectionView,\n      collection,\n      blockIds\n    }\n  );\n}\nfunction Gallery({\n  blockIds,\n  collectionView,\n  collection\n}) {\n  const { recordMap } = useNotionContext();\n  const {\n    gallery_cover = { type: \"none\" },\n    gallery_cover_size = \"medium\",\n    gallery_cover_aspect = \"cover\"\n  } = collectionView.format || {};\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"notion-gallery\", children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"notion-gallery-view\", children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n    \"div\",\n    {\n      className: cs(\n        \"notion-gallery-grid\",\n        `notion-gallery-grid-size-${gallery_cover_size}`\n      ),\n      children: blockIds == null ? void 0 : blockIds.map((blockId) => {\n        var _a, _b;\n        const block = (_a = recordMap.block[blockId]) == null ? void 0 : _a.value;\n        if (!block) return null;\n        return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n          CollectionCard,\n          {\n            collection,\n            block,\n            cover: gallery_cover,\n            coverSize: gallery_cover_size,\n            coverAspect: gallery_cover_aspect,\n            properties: (_b = collectionView.format) == null ? void 0 : _b.gallery_properties\n          },\n          blockId\n        );\n      })\n    }\n  ) }) });\n}\n\n// src/third-party/collection-view-list.tsx\n\n\nvar defaultBlockIds2 = [];\nfunction CollectionViewList({\n  collection,\n  collectionView,\n  collectionData\n}) {\n  var _a, _b, _c;\n  const isGroupedCollection = (_a = collectionView == null ? void 0 : collectionView.format) == null ? void 0 : _a.collection_group_by;\n  if (isGroupedCollection) {\n    const collectionGroups = getCollectionGroups(\n      collection,\n      collectionView,\n      collectionData\n    );\n    return collectionGroups.map((group, key) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(CollectionGroup, { ...group, collectionViewComponent: List }, key));\n  }\n  const blockIds = ((_c = (_b = collectionData.collection_group_results) == null ? void 0 : _b.blockIds) != null ? _c : collectionData.blockIds) || defaultBlockIds2;\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n    List,\n    {\n      blockIds,\n      collection,\n      collectionView\n    }\n  );\n}\nfunction List({\n  blockIds = [],\n  collection,\n  collectionView\n}) {\n  const { components, recordMap, mapPageUrl } = useNotionContext();\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"notion-list-collection\", children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"notion-list-view\", children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"notion-list-body\", children: blockIds == null ? void 0 : blockIds.map((blockId) => {\n    var _a, _b, _c, _d;\n    const block = (_a = recordMap.block[blockId]) == null ? void 0 : _a.value;\n    if (!block) return null;\n    const titleSchema = collection.schema.title;\n    const titleData = (_b = block == null ? void 0 : block.properties) == null ? void 0 : _b.title;\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\n      components.PageLink,\n      {\n        className: \"notion-list-item notion-page-link\",\n        href: mapPageUrl(block.id),\n        children: [\n          /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\", { className: \"notion-list-item-title\", children: [\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n              PageIcon,\n              {\n                block,\n                className: \"notion-page-title-icon\",\n                hideDefaultIcon: true\n              }\n            ),\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n              Property,\n              {\n                schema: titleSchema,\n                data: titleData,\n                block,\n                collection,\n                linkToTitlePage: false\n              }\n            )\n          ] }),\n          /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"notion-list-item-body\", children: (_d = (_c = collectionView.format) == null ? void 0 : _c.list_properties) == null ? void 0 : _d.filter((p) => p.visible).map((p) => {\n            var _a2;\n            const schema = collection.schema[p.property];\n            const data = block && ((_a2 = block.properties) == null ? void 0 : _a2[p.property]);\n            if (!schema) {\n              return null;\n            }\n            return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n              \"div\",\n              {\n                className: \"notion-list-item-property\",\n                children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n                  Property,\n                  {\n                    schema,\n                    data,\n                    block,\n                    collection\n                  }\n                )\n              },\n              p.property\n            );\n          }) })\n        ]\n      },\n      blockId\n    );\n  }) }) }) });\n}\n\n// src/third-party/react-use.ts\n\nvar noop = () => {\n};\nfunction on(obj, ...args) {\n  if (obj && obj.addEventListener) {\n    obj.addEventListener(\n      ...args\n    );\n  }\n}\nfunction off(obj, ...args) {\n  if (obj && obj.removeEventListener) {\n    obj.removeEventListener(\n      ...args\n    );\n  }\n}\nvar isBrowser2 = !!globalThis.window;\nvar useWindowSize = (initialWidth = Infinity, initialHeight = Infinity) => {\n  const [state, setState] = useRafState({\n    width: isBrowser2 ? globalThis.window.innerWidth : initialWidth,\n    height: isBrowser2 ? globalThis.window.innerHeight : initialHeight\n  });\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (isBrowser2) {\n      const handler = () => {\n        setState({\n          width: globalThis.window.innerWidth,\n          height: globalThis.window.innerHeight\n        });\n      };\n      on(globalThis.window, \"resize\", handler);\n      return () => {\n        off(globalThis.window, \"resize\", handler);\n      };\n    }\n  }, []);\n  return state;\n};\nvar useEffectOnce = (effect) => {\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(effect, []);\n};\nvar useUnmount = (fn) => {\n  const fnRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(fn);\n  fnRef.current = fn;\n  useEffectOnce(() => () => fnRef.current());\n};\nvar useRafState = (initialState) => {\n  const frame = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(0);\n  const [state, setState] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(initialState);\n  const setRafState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((value) => {\n    cancelAnimationFrame(frame.current);\n    frame.current = requestAnimationFrame(() => {\n      setState(value);\n    });\n  }, []);\n  useUnmount(() => {\n    cancelAnimationFrame(frame.current);\n  });\n  return [state, setRafState];\n};\nvar useLocalStorage = (key, initialValue, options) => {\n  if (!isBrowser2) {\n    return [initialValue, noop, noop];\n  }\n  if (!key) {\n    throw new Error(\"useLocalStorage key may not be falsy\");\n  }\n  const deserializer = options ? options.raw ? (value) => value : options.deserializer : JSON.parse;\n  const initializer = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)((key2) => {\n    try {\n      const serializer = options ? options.raw ? String : options.serializer : JSON.stringify;\n      const localStorageValue = localStorage.getItem(key2);\n      if (localStorageValue !== null) {\n        return deserializer(localStorageValue);\n      } else {\n        if (initialValue) {\n          localStorage.setItem(key2, serializer(initialValue));\n        }\n        return initialValue;\n      }\n    } catch (e) {\n      return initialValue;\n    }\n  });\n  const [state, setState] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\n    () => initializer.current(key)\n  );\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect)(() => setState(initializer.current(key)), [key]);\n  const set = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(\n    (valOrFunc) => {\n      try {\n        const newState = typeof valOrFunc === \"function\" ? valOrFunc(state) : valOrFunc;\n        if (newState === void 0) return;\n        let value;\n        if (options)\n          if (options.raw)\n            if (typeof newState === \"string\") value = newState;\n            else value = JSON.stringify(newState);\n          else if (options.serializer) value = options.serializer(newState);\n          else value = JSON.stringify(newState);\n        else value = JSON.stringify(newState);\n        localStorage.setItem(key, value);\n        setState(deserializer(value));\n      } catch (e) {\n      }\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [key, setState]\n  );\n  const remove = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {\n    try {\n      localStorage.removeItem(key);\n      setState(void 0);\n    } catch (e) {\n    }\n  }, [key, setState]);\n  return [state, set, remove];\n};\nvar useClientStyle = (clientStyle, serverStyle = {}) => {\n  const [isMounted, setIsMounted] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    setIsMounted(true);\n  }, []);\n  return isMounted ? clientStyle : serverStyle;\n};\n\n// src/third-party/collection-view-table.tsx\n\nvar defaultBlockIds3 = [];\nfunction CollectionViewTable({\n  collection,\n  collectionView,\n  collectionData,\n  padding,\n  width\n}) {\n  var _a, _b, _c;\n  const isGroupedCollection = (_a = collectionView == null ? void 0 : collectionView.format) == null ? void 0 : _a.collection_group_by;\n  if (isGroupedCollection) {\n    const collectionGroups = getCollectionGroups(\n      collection,\n      collectionView,\n      collectionData,\n      padding,\n      width\n    );\n    return collectionGroups.map((group, index) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n      CollectionGroup,\n      {\n        ...group,\n        collectionViewComponent: (props) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Table, { ...props, padding, width }),\n        summaryProps: {\n          style: {\n            paddingLeft: padding,\n            paddingRight: padding\n          }\n        }\n      },\n      index\n    ));\n  }\n  const blockIds = ((_c = (_b = collectionData.collection_group_results) == null ? void 0 : _b.blockIds) != null ? _c : collectionData.blockIds) || defaultBlockIds3;\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n    Table,\n    {\n      blockIds,\n      collection,\n      collectionView,\n      padding,\n      width\n    }\n  );\n}\nfunction Table({\n  blockIds = [],\n  collection,\n  collectionView,\n  width,\n  padding\n}) {\n  var _a;\n  const { recordMap, linkTableTitleProperties } = useNotionContext();\n  const tableStyle = useClientStyle(\n    {\n      width,\n      maxWidth: width\n    },\n    { visibility: \"hidden\" }\n  );\n  const tableViewStyle = useClientStyle({\n    paddingLeft: padding,\n    paddingRight: padding\n  });\n  let properties = [];\n  if ((_a = collectionView.format) == null ? void 0 : _a.table_properties) {\n    properties = collectionView.format.table_properties.filter(\n      (p) => p.visible && collection.schema[p.property]\n    );\n  } else {\n    properties = [{ property: \"title\" }].concat(\n      Object.keys(collection.schema).filter((p) => p !== \"title\").map((property) => ({ property }))\n    );\n  }\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"notion-table\", style: tableStyle, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"notion-table-view\", style: tableViewStyle, children: !!properties.length && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.Fragment, { children: [\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"notion-table-header\", children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"notion-table-header-inner\", children: properties.map((p) => {\n      var _a2;\n      const schema = (_a2 = collection.schema) == null ? void 0 : _a2[p.property];\n      const isTitle = p.property === \"title\";\n      const style = {};\n      if (p.width) {\n        style.width = p.width;\n      } else if (isTitle) {\n        style.width = 280;\n      } else {\n        style.width = 200;\n      }\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"notion-table-th\", children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n        \"div\",\n        {\n          className: \"notion-table-view-header-cell\",\n          style,\n          children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"notion-table-view-header-cell-inner\", children: schema && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(CollectionColumnTitle, { schema }) })\n        }\n      ) }, p.property);\n    }) }) }),\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"notion-table-header-placeholder\" }),\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"notion-table-body\", children: blockIds == null ? void 0 : blockIds.map((blockId) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"notion-table-row\", children: properties.map((p) => {\n      var _a2, _b, _c;\n      const schema = (_a2 = collection.schema) == null ? void 0 : _a2[p.property];\n      const block = (_b = recordMap.block[blockId]) == null ? void 0 : _b.value;\n      const data = (_c = block == null ? void 0 : block.properties) == null ? void 0 : _c[p.property];\n      const isTitle = p.property === \"title\";\n      const style = {};\n      if (p.width) {\n        style.width = p.width;\n      } else if (isTitle) {\n        style.width = 280;\n      } else {\n        style.width = 200;\n      }\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n        \"div\",\n        {\n          className: cs(\n            \"notion-table-cell\",\n            `notion-table-cell-${schema == null ? void 0 : schema.type}`\n          ),\n          style,\n          children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n            Property,\n            {\n              schema,\n              data,\n              block,\n              collection,\n              linkToTitlePage: linkTableTitleProperties\n            }\n          )\n        },\n        p.property\n      );\n    }) }, blockId)) })\n  ] }) }) });\n}\n\n// src/third-party/collection-view.tsx\n\nfunction CollectionViewImpl(props) {\n  const { collectionView } = props;\n  switch (collectionView.type) {\n    case \"table\":\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(CollectionViewTable, { ...props });\n    case \"gallery\":\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(CollectionViewGallery, { ...props });\n    case \"list\":\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(CollectionViewList, { ...props });\n    case \"board\":\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(CollectionViewBoard, { ...props });\n    default:\n      console.warn(\"unsupported collection view\", collectionView);\n      return null;\n  }\n}\nvar CollectionView = react__WEBPACK_IMPORTED_MODULE_0__.memo(CollectionViewImpl);\n\n// src/third-party/collection.tsx\n\nvar isServer2 = !globalThis.window;\nfunction Collection({\n  block,\n  className,\n  ctx: ctx2\n}) {\n  const context = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(\n    () => ({\n      ...ctx2\n    }),\n    [ctx2]\n  );\n  if (block.type === \"page\") {\n    if (block.parent_table !== \"collection\") {\n      return null;\n    }\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(NotionContextProvider, { ...context, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"notion-collection-page-properties\", children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n      CollectionRow,\n      {\n        block,\n        pageHeader: true,\n        className\n      }\n    ) }) });\n  } else {\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(NotionContextProvider, { ...context, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(CollectionViewBlock, { block, className }) });\n  }\n}\nfunction CollectionViewBlock({\n  block,\n  className\n}) {\n  var _a, _b, _c, _d;\n  const { recordMap, showCollectionViewDropdown } = useNotionContext();\n  const { view_ids: viewIds } = block;\n  const collectionId = (0,notion_utils__WEBPACK_IMPORTED_MODULE_3__.getBlockCollectionId)(block, recordMap);\n  const [isMounted, setIsMounted] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false);\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    setIsMounted(true);\n  }, []);\n  const defaultCollectionViewId = viewIds[0];\n  const [collectionState, setCollectionState] = useLocalStorage(block.id, {\n    collectionViewId: defaultCollectionViewId\n  });\n  const collectionViewId = isMounted && viewIds.find((id) => id && id === (collectionState == null ? void 0 : collectionState.collectionViewId)) || defaultCollectionViewId;\n  const onChangeView = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(\n    (collectionViewId2) => {\n      console.log(\"change collection view\", collectionViewId2);\n      setCollectionState({\n        ...collectionState,\n        collectionViewId: collectionViewId2\n      });\n    },\n    [collectionState, setCollectionState]\n  );\n  let { width: windowWidth } = useWindowSize();\n  if (isServer2) {\n    windowWidth = 1024;\n  }\n  const collection = (_a = recordMap.collection[collectionId]) == null ? void 0 : _a.value;\n  const collectionView = (_b = recordMap.collection_view[collectionViewId]) == null ? void 0 : _b.value;\n  const collectionData = (_c = recordMap.collection_query[collectionId]) == null ? void 0 : _c[collectionViewId];\n  const parentPage = (0,notion_utils__WEBPACK_IMPORTED_MODULE_3__.getBlockParentPage)(block, recordMap);\n  const { width, padding } = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {\n    var _a2;\n    const style = {};\n    if ((collectionView == null ? void 0 : collectionView.type) !== \"table\" && (collectionView == null ? void 0 : collectionView.type) !== \"board\") {\n      return {\n        style,\n        width: 0,\n        padding: 0\n      };\n    }\n    const width2 = windowWidth;\n    const maxNotionBodyWidth = 708;\n    let notionBodyWidth = maxNotionBodyWidth;\n    if ((_a2 = parentPage == null ? void 0 : parentPage.format) == null ? void 0 : _a2.page_full_width) {\n      notionBodyWidth = Math.trunc(width2 - 2 * Math.min(96, width2 * 0.08));\n    } else {\n      notionBodyWidth = width2 < maxNotionBodyWidth ? Math.trunc(width2 - width2 * 0.02) : maxNotionBodyWidth;\n    }\n    const padding2 = isServer2 && !isMounted ? 96 : Math.trunc((width2 - notionBodyWidth) / 2);\n    style.paddingLeft = padding2;\n    style.paddingRight = padding2;\n    return {\n      style,\n      width: width2,\n      padding: padding2\n    };\n  }, [windowWidth, parentPage, collectionView == null ? void 0 : collectionView.type, isMounted]);\n  if (!(collection && collectionView && collectionData)) {\n    console.warn(\"skipping missing collection view for block\", block.id, {\n      collectionId,\n      collectionViewId,\n      collectionView,\n      collectionData,\n      recordMap\n    });\n    return null;\n  }\n  const title = (0,notion_utils__WEBPACK_IMPORTED_MODULE_3__.getTextContent)(collection.name).trim();\n  const showTitle = ((_d = collectionView.format) == null ? void 0 : _d.hide_linked_collection_name) !== true && title;\n  if (collection.icon) {\n    block.format = {\n      ...block.format,\n      page_icon: collection.icon\n    };\n  }\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.Fragment, { children: [\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\", { children: [\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { children: viewIds.length > 1 && showCollectionViewDropdown && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n        CollectionViewTabs,\n        {\n          collectionViewId,\n          viewIds,\n          onChangeView\n        }\n      ) }),\n      showTitle && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"notion-collection-header\", children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\", { className: \"notion-collection-header-title\", children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n          PageIcon,\n          {\n            block,\n            className: \"notion-page-title-icon\",\n            hideDefaultIcon: true\n          }\n        ),\n        title\n      ] }) })\n    ] }),\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: cs(\"notion-collection\", className), children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n      CollectionView,\n      {\n        collection,\n        collectionView,\n        collectionData,\n        padding,\n        width\n      }\n    ) })\n  ] });\n}\nfunction CollectionViewTabs({\n  collectionViewId,\n  viewIds,\n  onChangeView\n}) {\n  const { recordMap } = useNotionContext();\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\", { className: \"notion-collection-view-tabs-row\", children: viewIds.map((viewId) => {\n    var _a;\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n      \"button\",\n      {\n        onClick: () => onChangeView(viewId),\n        className: cs(\n          \"notion-collection-view-tabs-content-item\",\n          collectionViewId === viewId && \"notion-collection-view-tabs-content-item-active\"\n        ),\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n          CollectionViewColumnDesc,\n          {\n            collectionView: (_a = recordMap.collection_view[viewId]) == null ? void 0 : _a.value\n          }\n        )\n      },\n      viewId\n    );\n  }) });\n}\nfunction CollectionViewColumnDesc({\n  collectionView,\n  className,\n  children,\n  ...rest\n}) {\n  if (!collectionView) return null;\n  const { type } = collectionView;\n  const name = collectionView.name || `${type[0].toUpperCase()}${type.slice(1)} view`;\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\", { className: cs(\"notion-collection-view-type\", className), ...rest, children: [\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\n      CollectionViewIcon,\n      {\n        className: \"notion-collection-view-type-icon\",\n        type\n      }\n    ),\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"span\", { className: \"notion-collection-view-type-title\", children: name }),\n    children\n  ] });\n}\n\n//# sourceMappingURL=collection.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react-notion-x/build/third-party/collection.js\n"));

/***/ })

}]);